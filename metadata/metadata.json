[
  {
    "name": "abyss",
    "description": "de novo sequence assembler",
    "status": "Usable",
    "recommended": [
      {
        "version": "2.1.0",
        "date": ""
      }
    ],
    "latest": "2.1.0",
    "bug_found": [],
    "not_working": [],
    "no_longer_tested": [
      "2.0.2-3"
    ],
    "manual_url": "https://github.com/bcgsc/abyss/blob/master/README.md",
    "source_url": "https://github.com/bcgsc/abyss",
    "comments": [
      "Since the default k-mer size to run an assembly is 64, we have compiled two additional images with --enable-maxk=128 and --enable-maxk=256.",
      "Please see the documentation."
    ],
    "gui": false,
    "gui_command": "",
    "podman": "untested",
    "singularity": "untested",
    "invocation_general": "docker run --rm -v /your/data/dir:/data pegi3s/abyss",
    "usual_invocation_specific": " abyss-pe k=25 name=test in='/data/fastq1File /data/fastq2File' --directory=/data/output",
    "usual_invocation_specific_comments": [
      "The `k` parameter is the size of the k-mer. It can be changed to any odd number below the `maxk` value (see comments). The `name` parameter can be changed to any name without blank spaces."
    ],
    "test_invocation_specific": "abyss-pe k=25 name=test in='/data/test/data/reads1.fastq /data/test/data/reads2.fastq' --directory=/data/test/results",
    "test_data_url": "",
    "test_results_url": "",
    "icon": "",
    "input_data_type": [
      "fastq1",
      "fastq2"
    ],
    "auto_tests": [
      {
        "docker_image": "pegi3s/abyss:2.1.0",
        "input_files": [
          "SRR3143588_1.fastq",
          "SRR3143588_2.fastq"
        ],
        "output_dir": "abyss_output",
        "output_file": "test-scaffolds.fa",
        "add_config": "",
        "commands": " bash -c \"abyss-pe k=25 name=test in='/data/input_data/SRR3143588_1.fastq /data/input_data/SRR3143588_2.fastq' --directory=/data/output_folder/abyss_output\" > /dev/null 2>&1"
      }
    ]
  },
  {
    "name": "adops-gui",
    "description": "Phylogenetics and detection of positively selected sites ",
    "status": "Usable",
    "recommended": [
      {
        "version": "0.7.4",
        "date": "25/11/2024"
      }
    ],
    "latest": "0.7.4",
    "bug_found": [],
    "not_working": [],
    "no_longer_tested": [
      "0.7.1"
    ],
    "manual_url": "https://www.sing-group.org/ADOPS/",
    "source_url": "https://github.com/sing-group/adops",
    "comments": [
      "This is a GUI, thus there is no test data output for this image. You may have to run 'xhost +' first if you create a .sh file."
    ],
    "gui": true,
    "gui_command": "/opt/ADOPS/run.sh",
    "podman": "untested",
    "singularity": "untested",
    "invocation_general": "",
    "usual_invocation_specific": "",
    "usual_invocation_specific_comments": [
      "This image does not have any parameters."
    ],
    "test_invocation_specific": "",
    "test_data_url": "http://evolution6.i3s.up.pt/static/pegi3s/dockerfiles/input_test_data/small_not_aligned.fas",
    "test_results_url": "http://evolution6.i3s.up.pt/static/pegi3s/dockerfiles/output_test_data/empty",
    "icon": "https://sing-group.org/ADOPS/adops-icon.png",
    "input_data_type": [],
    "auto_tests": [
      {
        "docker_image": "pegi3s/adops-gui",
        "input_files": [],
        "output_dir": "",
        "output_file": "",
        "add_config": "",
        "commands": ""
      }
    ]
  },
  {
    "name": "aegean",
    "description": "Integrated genome analyses",
    "status": "Usable",
    "recommended": [
      {
        "version": "v0.16.0",
        "date": ""
      }
    ],
    "latest": "v0.16.0",
    "bug_found": [],
    "not_working": [],
    "no_longer_tested": [],
    "manual_url": "https://aegean.readthedocs.io/en/stable/",
    "source_url": "https://github.com/BrendelGroup/AEGeAn",
    "comments": [],
    "gui": false,
    "gui_command": "",
    "podman": "untested",
    "singularity": "untested",
    "invocation_general": "docker run -v /your/data/dir:/data pegi3s/aegean",
    "usual_invocation_specific": " bash -c \"parseval /data/reference_gff3File /data/prediction_gff3File > /data/output/results\"",
    "usual_invocation_specific_comments": [
      "'parseval' can be changed to other programs ('locuspocus', 'canongff3' and 'gaeval').",
      "Results will be saved in a file name 'results'. this name can be changed."
    ],
    "test_invocation_specific": "",
    "test_data_url": "",
    "test_results_url": "",
    "icon": "https://raw.githubusercontent.com/BrendelGroup/AEGeAn/refs/heads/main/docs/aegean-logo-v1_0-128.png",
    "input_data_type": [
      "reference_gff3",
      "prediction_gff3"
    ],
    "auto_tests": [
      {
        "docker_image": "pegi3s/aegean",
        "input_files": [],
        "output_dir": "",
        "output_file": "",
        "add_config": "",
        "commands": ""
      }
    ]
  },
  {
    "name": "afterqc",
    "description": "Sequence read quality assessment",
    "status": "Usable",
    "recommended": [
      {
        "version": "0.9.7",
        "date": "25/11/2024"
      }
    ],
    "latest": "0.9.7",
    "bug_found": [],
    "not_working": [],
    "no_longer_tested": [],
    "manual_url": "https://github.com/OpenGene/AfterQC/blob/master/README.md",
    "source_url": "https://github.com/OpenGene/AfterQC",
    "comments": [],
    "gui": false,
    "gui_command": "",
    "podman": "untested",
    "singularity": "untested",
    "invocation_general": "docker run --rm -v /your/data/dir:/data pegi3s/afterqc",
    "usual_invocation_specific": " bash -c \"cd /data && after.py -1 /data/fastqFile && mv /data/good /data/output && mv /data/bad /data/output && mv /data/QC /data/output\"",
    "usual_invocation_specific_comments": [],
    "test_invocation_specific": " bash -c \"cd /data && after.py -1 /data/test/data/SRR3143588_1.fastq && mv /data/good /data/output/test && mv /data/bad /data/output/test && mv /data/QC /data/test/results\"",
    "test_data_url": "http://evolution6.i3s.up.pt/static/pegi3s/dockerfiles/input_test_data/SRR3143588_1.fastq",
    "test_results_url": "http://evolution6.i3s.up.pt/static/pegi3s/dockerfiles/output_test_data/afterqc_output.zip",
    "icon": "",
    "input_data_type": [
      "fastq"
    ],
    "auto_tests": [
      {
        "docker_image": "pegi3s/afterqc",
        "input_files": [],
        "output_dir": "",
        "output_file": "",
        "add_config": "",
        "commands": ""
      }
    ]
  },
  {
    "name": "alphafold_db",
    "description": "Protein structure retrieval",
    "status": "Usable",
    "recommended": [
      {
        "version": "1.0.0",
        "date": "25/11/2024"
      }
    ],
    "latest": "1.0.0",
    "bug_found": [],
    "not_working": [],
    "no_longer_tested": [],
    "manual_url": "https://alphafold.ebi.ac.uk/",
    "source_url": "https://ftp.ebi.ac.uk/pub/databases/alphafold/",
    "comments": [],
    "gui": false,
    "gui_command": "",
    "podman": "untested",
    "singularity": "untested",
    "invocation_general": "docker run --rm -v /your/data/dir:/data pegi3s/alphafold_db",
    "usual_invocation_specific": " bash -c \"/opt/run /data/uniprotIDFile\"",
    "usual_invocation_specific_comments": [
      "Output will appear in the same folder of your input files. uniprotIDFile to the filename of the list of Uniprot ID's corresponding to the proteins that you want to obtain from AlphaFold. Each line in the file should contain only one Uniprot ID."
    ],
    "test_invocation_specific": " bash -c \"/opt/run /data/test/data/Uniprot.txt && mv /data/test/data/Structures_from_AlphaFold /data/test/results\"",
    "test_data_url": "http://evolution6.i3s.up.pt/static/pegi3s/dockerfiles/input_test_data/Uniprot.txt",
    "test_results_url": "http://evolution6.i3s.up.pt/static/pegi3s/dockerfiles/output_test_data/alphafold_db_output.zip",
    "icon": "https://deepmind.google/static/icons/google_deepmind_48dp.5b470587fe7d.svg",
    "input_data_type": [
      "uniprotID"
    ],
    "auto_tests": [
      {
        "docker_image": "pegi3s/alphafold_db",
        "input_files": [],
        "output_dir": "",
        "output_file": "",
        "add_config": "",
        "commands": ""
      }
    ]
  },
  {
    "name": "alter",
    "description": "File conversion",
    "status": "Usable",
    "recommended": [
      {
        "version": "1.3.4",
        "date": "25/11/2024"
      }
    ],
    "latest": "1.3.4",
    "bug_found": [],
    "not_working": [],
    "no_longer_tested": [],
    "manual_url": "http://sing-group.org/ALTER/help/ALTER-UserGuide.htm",
    "source_url": "https://github.com/sing-group/ALTER",
    "comments": [
      "To see the ALTER help, just run help"
    ],
    "gui": false,
    "gui_command": "",
    "podman": "untested",
    "singularity": "untested",
    "invocation_general": "docker run --rm -v /your/data/dir:/data pegi3s/alter",
    "usual_invocation_specific": " -i /data/inputFile -o /data/output/output_name -ia -of out_format -oo Linux -op GENERAL",
    "usual_invocation_specific_comments": [
      "'output_name' to the actual name of your output file. 'out_format' to the output format you intend to obtain (the allowed standard formats are: ALN, FASTA, GDE, MEGA, MSF, NEXUS, PHYLIP and PIR)."
    ],
    "test_invocation_specific": " -i /data/test/data/nexus.nex -o /data/test/results/alter_test -ia -of out_format -oo Linux -op GENERAL",
    "test_data_url": "http://evolution6.i3s.up.pt/static/pegi3s/dockerfiles/input_test_data/nexus.nex",
    "test_results_url": "http://evolution6.i3s.up.pt/static/pegi3s/dockerfiles/output_test_data/alter_output.zip",
    "icon": "https://raw.githubusercontent.com/sing-group/ALTER/master/alter-web/src/main/webapp/img/logo_small.png",
    "input_data_type": [
      "input"
    ],
    "auto_tests": [
      {
        "docker_image": "pegi3s/alter:1.3.4",
        "input_files": [
          "nexus.nex"
        ],
        "output_dir": "alter_output",
        "output_file": "output.fasta",
        "add_config": "",
        "commands": " -i /data/input_data/nexus.nex -o /data/output_folder/alter_output/output.fasta -ia -of FASTA -oo Linux -op GENERAL > /dev/null 2>&1"
      }
    ]
  },
  {
    "name": "autoaugustus",
    "description": "Gene annotation",
    "status": "Usable",
    "recommended": [
      {
        "version": "2.5.5",
        "date": ""
      }
    ],
    "latest": "2.5.5",
    "bug_found": [],
    "not_working": [],
    "no_longer_tested": [],
    "manual_url": "https://github.com/Gaius-Augustus/Augustus/blob/master/scripts/README.autoAug",
    "source_url": "https://github.com/Gaius-Augustus/Augustus",
    "comments": [
      "To see AUGUSTUS general parameters help, you just need to run: augustus --help."
    ],
    "gui": false,
    "gui_command": "",
    "podman": "untested",
    "singularity": "untested",
    "invocation_general": "docker run --rm pegi3s/autoaugustus",
    "usual_invocation_specific": "",
    "usual_invocation_specific_comments": [],
    "test_invocation_specific": "",
    "test_data_url": "",
    "test_results_url": "",
    "icon": "",
    "input_data_type": [],
    "auto_tests": [
      {
        "docker_image": "pegi3s/autoaugustus",
        "input_files": [],
        "output_dir": "",
        "output_file": "",
        "add_config": "",
        "commands": ""
      }
    ]
  },
  {
    "name": "bdbm",
    "description": "Sequence database manager",
    "status": "Usable",
    "recommended": [
      {
        "version": "1.0.2",
        "date": ""
      }
    ],
    "latest": "1.0.2",
    "bug_found": [],
    "not_working": [],
    "no_longer_tested": [],
    "manual_url": "https://www.sing-group.org/BDBM/manual.html",
    "source_url": "https://github.com/sing-group/BDBM",
    "comments": [
      "This is a GUI, thus there is no test data output for this image. You may have to run 'xhost +' first if you create a .sh file."
    ],
    "gui": true,
    "gui_command": " ",
    "podman": "untested",
    "singularity": "untested",
    "invocation_general": "",
    "usual_invocation_specific": "",
    "usual_invocation_specific_comments": [
      "This image does not have any parameters."
    ],
    "test_invocation_specific": "",
    "test_data_url": "",
    "test_results_url": "http://evolution6.i3s.up.pt/static/pegi3s/dockerfiles/output_test_data/empty",
    "icon": "https://raw.githubusercontent.com/sing-group/BDBM/master/bdbm-logo.png",
    "input_data_type": [],
    "auto_tests": [
      {
        "docker_image": "pegi3s/bdbm",
        "input_files": [],
        "output_dir": "",
        "output_file": "",
        "add_config": "",
        "commands": ""
      }
    ]
  },
  {
    "name": "bedtools",
    "description": "General utilities",
    "status": "Usable",
    "recommended": [
      {
        "version": "2.31.0",
        "date": ""
      }
    ],
    "latest": "2.31.0",
    "bug_found": [],
    "not_working": [],
    "no_longer_tested": [
      "2.29.2",
      "2.27.1"
    ],
    "manual_url": "https://bedtools.readthedocs.io/en/latest/content/overview.html",
    "source_url": "https://github.com/arq5x/bedtools2",
    "comments": [],
    "gui": false,
    "gui_command": "",
    "podman": "untested",
    "singularity": "untested",
    "invocation_general": "docker run --rm -v /your/data/dir:/data pegi3s/bedtools",
    "usual_invocation_specific": " fastaFromBed -fi /data/fastaFile -bed /data/BED_GFF_VCFFile -fo /data/output/stdout",
    "usual_invocation_specific_comments": [
      "'fastaFromBed' can be changed to other application commands (e.g. annotatebed).",
      "'stdout' can be changed to the name of the output file"
    ],
    "test_invocation_specific": " fastaFromBed -fi /data/test/data/GCF_000858285.1.fa -bed /data/test/data/GCF_000858285.1.gff -fo /data/test/results/bedtools_test",
    "test_data_url": "http://evolution6.i3s.up.pt/static/pegi3s/dockerfiles/input_test_data/bedtools.zip",
    "test_results_url": "http://evolution6.i3s.up.pt/static/pegi3s/dockerfiles/output_test_data/bedtools_output.zip",
    "icon": "https://bedtools.readthedocs.io/en/latest/_static/bedtools.swiss.png",
    "input_data_type": [
      "fasta",
      "BED_GFF_VCF"
    ],
    "auto_tests": [
      {
        "docker_image": "pegi3s/bedtools:2.31.0",
        "input_files": [
          "GCF_000858285.1.fa",
          "GCF_000858285.1.gff"
        ],
        "output_dir": "bedtools_output",
        "output_file": "GCF_000858285.1_annotation.fa",
        "add_config": "",
        "commands": " fastaFromBed -fi /data/input_data/GCF_000858285.1.fa -bed /data/input_data/GCF_000858285.1.gff -fo /data/output_folder/bedtools_output/GCF_000858285.1_annotation.fa > /dev/null 2>&1"
      }
    ]
  },
  {
    "name": "bioconvert",
    "description": "Interconversion of life science data formats",
    "status": "Usable",
    "recommended": [
      {
        "version": "0.4.3",
        "date": "25/11/2024"
      }
    ],
    "latest": "0.4.3",
    "bug_found": [],
    "not_working": [],
    "no_longer_tested": [],
    "manual_url": "https://bioconvert.readthedocs.io/en/dev/",
    "source_url": "https://github.com/bioconvert/bioconvert",
    "comments": [],
    "gui": false,
    "gui_command": "",
    "podman": "untested",
    "singularity": "untested",
    "invocation_general": "docker run --rm -v /your/data/dir:/data pegi3s/bioconvert",
    "usual_invocation_specific": " fasta2nexus /data/inputFile /data/output/out_name",
    "usual_invocation_specific_comments": [
      "'fasta2nexus' can be changed to other commands (e.g. fasta2fastq, fastq2fasta, nexus2newick). 'out_name' to the name of your output file."
    ],
    "test_invocation_specific": " fasta2nexus /data/test/data/small_aligned.fas /data/test/results/bioconvert_test",
    "test_data_url": "http://evolution6.i3s.up.pt/static/pegi3s/dockerfiles/input_test_data/small_aligned.fas",
    "test_results_url": "http://evolution6.i3s.up.pt/static/pegi3s/dockerfiles/output_test_data/bioconvert_output.zip",
    "icon": "https://bioconvert.pasteur.cloud/static/images/logo.png",
    "input_data_type": [
      "input"
    ],
    "auto_tests": [
      {
        "docker_image": "pegi3s/bioconvert:0.4.3",
        "input_files": [
          "small_aligned.fas"
        ],
        "output_dir": "bioconvert_output",
        "output_file": "small_aligned.nex",
        "add_config": "",
        "commands": " fasta2nexus /data/input_data/small_aligned.fas /data/output_folder/bioconvert_output/small_aligned.nex > /dev/null 2>&1"
      }
    ]
  },
  {
    "name": "blast",
    "description": "Sequence alignment",
    "status": "Usable",
    "recommended": [
      {
        "version": "2.15.0",
        "date": ""
      }
    ],
    "latest": "2.15.0",
    "bug_found": [],
    "not_working": [],
    "no_longer_tested": [
      "2.14.1",
      "2.13.0",
      "2.10.0",
      "2.6.0-1"
    ],
    "manual_url": "https://www.ncbi.nlm.nih.gov/books/NBK279690/",
    "source_url": "https://ftp.ncbi.nlm.nih.gov/blast/executables/blast+/",
    "comments": [],
    "gui": false,
    "gui_command": "",
    "podman": "untested",
    "singularity": "untested",
    "invocation_general": "docker run --rm -v /your/data/dir:/data pegi3s/blast",
    "usual_invocation_specific": " blastn -query /data/inputFile -db /data/fastaFile -evalue 0.05 -num_descriptions 500000 -num_alignments 500000 -outfmt 3 -out /data/outputFolder/blast",
    "usual_invocation_specific_comments": [
      "Before running the command, replace it for: ' makeblastdb -in /data/mydb.fasta -dbtype nucl -parse_seqids'. '/data' for a specific directory. This generated file is to be submited as the fasta input for the second command.",
      "'blastn' can be changed to other blast types (e.g. blastp)"
    ],
    "test_invocation_specific": "",
    "test_data_url": "http://evolution6.i3s.up.pt/static/pegi3s/dockerfiles/input_test_data/blast.zip",
    "test_results_url": "http://evolution6.i3s.up.pt/static/pegi3s/dockerfiles/output_test_data/blast_output.zip",
    "icon": "",
    "input_data_type": [
      "input",
      "fasta"
    ],
    "auto_tests": [
      {
        "docker_image": "pegi3s/blast",
        "input_files": [],
        "output_dir": "",
        "output_file": "",
        "add_config": "",
        "commands": ""
      }
    ]
  },
  {
    "name": "bowtie1",
    "description": "Short sequence alignment",
    "status": "Usable",
    "recommended": [
      {
        "version": "1.2.3",
        "date": ""
      }
    ],
    "latest": "1.2.3",
    "bug_found": [],
    "not_working": [],
    "no_longer_tested": [],
    "manual_url": "https://bowtie-bio.sourceforge.net/manual.shtml",
    "source_url": "https://github.com/BenLangmead/bowtie",
    "comments": [],
    "gui": false,
    "gui_command": "",
    "podman": "untested",
    "singularity": "untested",
    "invocation_general": "docker run --rm -v /your/data/dir:/data pegi3s/bowtie1 ",
    "usual_invocation_specific": "sh -c \"mkdir /data/output/bwt1_index && bowtie-build /data/genomefastaFile /data/output/bwt1_index/built_index\"",
    "usual_invocation_specific_comments": [
      "After running the command, aligning can be made by replacing the command by: 'bowtie -S /data/bwt1_index/built_index /data/input.fq /data/output.sam'. '/data/bwt1_index/built_index' to the path of the index built on the first command. '/data/input.fq' to the path of your input file. '/data/output.sam' to the directory of your output file."
    ],
    "test_invocation_specific": "sh -c \"mkdir /data/output/bwt1_index && bowtie-build /data/test/data/GCF_000146045.2_R64_genomic.fna /data/test/results/bwt1_index/built_index_test\"",
    "test_data_url": "",
    "test_results_url": "",
    "icon": "https://raw.githubusercontent.com/BenLangmead/bowtie/refs/heads/master/doc/website/images/bowtie_logo.png",
    "input_data_type": [
      "genomefasta"
    ],
    "auto_tests": [
      {
        "docker_image": "pegi3s/bowtie1",
        "input_files": [],
        "output_dir": "",
        "output_file": "",
        "add_config": "",
        "commands": ""
      }
    ]
  },
  {
    "name": "bwa",
    "description": "Sequence read aligner",
    "status": "Usable",
    "recommended": [
      {
        "version": "0.7.17",
        "date": ""
      }
    ],
    "latest": "0.7.17",
    "bug_found": [],
    "not_working": [],
    "no_longer_tested": [],
    "manual_url": "https://bio-bwa.sourceforge.net/bwa.shtml",
    "source_url": "https://github.com/lh3/bwa",
    "comments": [],
    "gui": false,
    "gui_command": "",
    "podman": "untested",
    "singularity": "untested",
    "invocation_general": "docker run --rm -v \"/your/data/dir:/data\" pegi3s/bwa ",
    "usual_invocation_specific": " bwa index /data/chr_fastaFile",
    "usual_invocation_specific_comments": [
      "After running the previous cammand, replace it with: 'bwa mem /data/fastaInput /data/fastaq1Input /data/fastaq2Input > output_name.sam'",
      "Output file will be produced in the same directory as the config file for docknrun."
    ],
    "test_invocation_specific": " bwa index /data/test/data/chr19_KI270866v1_alt.fasta",
    "test_data_url": "",
    "test_results_url": "",
    "icon": "",
    "input_data_type": [
      "chr_fasta"
    ],
    "auto_tests": [
      {
        "docker_image": "pegi3s/bwa",
        "input_files": [],
        "output_dir": "",
        "output_file": "",
        "add_config": "",
        "commands": ""
      }
    ]
  },
  {
    "name": "ccp4",
    "description": "Software for Macromolecular X-Ray Crystallography",
    "status": "Usable",
    "recommended": [
      {
        "version": "7.0.1",
        "date": ""
      }
    ],
    "latest": "7.0.1",
    "bug_found": [],
    "not_working": [],
    "no_longer_tested": [
      "7.0"
    ],
    "manual_url": "https://www.ccp4.ac.uk/documentation-2/",
    "source_url": "https://www.ccp4.ac.uk/download/",
    "comments": [],
    "gui": false,
    "gui_command": "",
    "podman": "untested",
    "singularity": "untested",
    "invocation_general": "docker run --rm -v /your/data/dir:/data pegi3s/ccp4",
    "usual_invocation_specific": " bash -c \"/ccp4/bin/run /data/inputFolder /data/output\"",
    "usual_invocation_specific_comments": [],
    "test_invocation_specific": "",
    "test_data_url": "",
    "test_results_url": "",
    "icon": "https://avatars.githubusercontent.com/u/15382671?s=200&v=4",
    "input_data_type": [
      "input"
    ],
    "auto_tests": [
      {
        "docker_image": "pegi3s/ccp4",
        "input_files": [],
        "output_dir": "",
        "output_file": "",
        "add_config": "",
        "commands": ""
      }
    ]
  },
  {
    "name": "clustalomega",
    "description": "Sequence alignment",
    "status": "Usable",
    "recommended": [
      {
        "version": "1.2.4",
        "date": "25/11/2024"
      }
    ],
    "latest": "1.2.4",
    "bug_found": [],
    "not_working": [],
    "no_longer_tested": [],
    "manual_url": "http://www.clustal.org/omega/clustalo-api/",
    "source_url": "https://github.com/GSLBiotech/clustal-omega",
    "comments": [],
    "gui": false,
    "gui_command": "",
    "podman": "untested",
    "singularity": "untested",
    "invocation_general": "docker run --rm -v /your/data/dir:/data pegi3s/clustalomega ",
    "usual_invocation_specific": "-i /data/fastaFile -o /data/output/output.fasta",
    "usual_invocation_specific_comments": [
      "`output.fasta` to the actual name of your aligned FASTA file."
    ],
    "test_invocation_specific": "-i /data/test/data/small_not_aligned.fas -o /data/test/results/sequences_aligned.fasta",
    "test_data_url": "http://evolution6.i3s.up.pt/static/pegi3s/dockerfiles/input_test_data/small_not_aligned.fas",
    "test_results_url": "http://evolution6.i3s.up.pt/static/pegi3s/dockerfiles/output_test_data/clustalomega_output.zip",
    "icon": "http://www.clustal.org/images/clustalo_title.png",
    "input_data_type": [
      "fasta"
    ],
    "auto_tests": [
      {
        "docker_image": "pegi3s/clustalomega:1.2.4",
        "input_files": [
          "small_not_aligned.fas"
        ],
        "output_dir": "clustalomega_output",
        "output_file": "sequences_aligned.fasta",
        "add_config": "",
        "commands": " -i /data/input_data/small_not_aligned.fas -o /data/output_folder/clustalomega_output/sequences_aligned.fasta > /dev/null 2>&1"
      }
    ]
  },
  {
    "name": "coral",
    "description": "Sequence read correction",
    "status": "Usable",
    "recommended": [
      {
        "version": "1.4.1",
        "date": "25/11/2024"
      }
    ],
    "latest": "1.4.1",
    "bug_found": [],
    "not_working": [],
    "no_longer_tested": [],
    "manual_url": "https://www.cs.helsinki.fi/u/lmsalmel/coral/",
    "source_url": "https://www.cs.helsinki.fi/u/lmsalmel/coral/",
    "comments": [],
    "gui": false,
    "gui_command": "",
    "podman": "untested",
    "singularity": "untested",
    "invocation_general": "docker run --rm -v /your/data/dir:/data pegi3s/coral",
    "usual_invocation_specific": " -f /data/fastaFile -o /data/output/out_name.fasta",
    "usual_invocation_specific_comments": [
      "Note that the `-fq` parameter indicates that the input file is in FASTAQ format (-f for FASTA files, -fs for Solexa FASTA files). `ouput.fq` to the actual name of your ouput file."
    ],
    "test_invocation_specific": " -f /data/test/data/SRR3143588_1.fastq -o /data/test/results/coral_test.fasta",
    "test_data_url": "http://evolution6.i3s.up.pt/static/pegi3s/dockerfiles/input_test_data/SRR3143588_1.fastq",
    "test_results_url": "http://evolution6.i3s.up.pt/static/pegi3s/dockerfiles/output_test_data/coral_output.zip",
    "icon": "",
    "input_data_type": [
      "fasta"
    ],
    "auto_tests": [
      {
        "docker_image": "pegi3s/coral:1.4.1",
        "input_files": [
          "SRR3143588_1.fastq"
        ],
        "output_dir": "coral_output",
        "output_file": "output.fq",
        "add_config": "",
        "commands": " -fq /data/input_data/SRR3143588_1.fastq -o /data/output_folder/coral_output/output.fq > /dev/null 2>&1"
      }
    ]
  },
  {
    "name": "cport",
    "description": "Active and passive sites prediction",
    "status": "Usable",
    "recommended": [
      {
        "version": "2024.05",
        "date": ""
      }
    ],
    "latest": "2024.05",
    "bug_found": [],
    "not_working": [],
    "no_longer_tested": [],
    "manual_url": "https://github.com/haddocking/cport",
    "source_url": "https://github.com/pegi3s/cport",
    "comments": [],
    "gui": false,
    "gui_command": "",
    "podman": "untested",
    "singularity": "untested",
    "invocation_general": "docker run -v /your/data/dir:/data pegi3s/cport ",
    "usual_invocation_specific": "cport /data/pdbFile A --pred all -- output_dir /data/output",
    "usual_invocation_specific_comments": [
      "'A' to indicate the identifier of the chain you want to use. `all' to indicate the method you want to use."
    ],
    "test_invocation_specific": "",
    "test_data_url": "",
    "test_results_url": "",
    "icon": "",
    "input_data_type": [
      "pdb"
    ],
    "auto_tests": [
      {
        "docker_image": "pegi3s/cport",
        "input_files": [],
        "output_dir": "",
        "output_file": "",
        "add_config": "",
        "commands": ""
      }
    ]
  },
  {
    "name": "cport-like",
    "description": "Active and passive sites prediction",
    "status": "Usable",
    "recommended": [
      {
        "version": "2024.05",
        "date": ""
      }
    ],
    "latest": "2024.05",
    "bug_found": [],
    "not_working": [],
    "no_longer_tested": [
      "2023.11"
    ],
    "manual_url": "https://github.com/haddocking/cport",
    "source_url": "https://github.com/pegi3s/dockerfiles/tree/master/cport-like",
    "comments": [
      "To run the custom batch script that allows running in batch mode PDB files and get results in csv format, you should create a file named config in your working directory with the following information (one instruction per line):",
      "input_dir=",
      "chain=",
      "method=",
      "Check the Docker documentation for additional information regarding the number of retries or the wait interval for a specific method"
    ],
    "gui": false,
    "gui_command": "",
    "podman": "untested",
    "singularity": "untested",
    "invocation_general": "docker run -v /your/data/dir:/data pegi3s/cport-like ",
    "usual_invocation_specific": "./cport_batch && cp -r /output /data/output",
    "usual_invocation_specific_comments": [],
    "test_invocation_specific": "",
    "test_data_url": "",
    "test_results_url": "",
    "icon": "",
    "input_data_type": [],
    "auto_tests": [
      {
        "docker_image": "pegi3s/cport-like",
        "input_files": [],
        "output_dir": "",
        "output_file": "",
        "add_config": "",
        "commands": ""
      }
    ]
  },
  {
    "name": "cutadapt",
    "description": "Sequence read trimming",
    "status": "Usable",
    "recommended": [
      {
        "version": "1.16",
        "date": "25/11/2024"
      }
    ],
    "latest": "1.16",
    "bug_found": [],
    "not_working": [],
    "no_longer_tested": [],
    "manual_url": "https://cutadapt.readthedocs.io/en/stable/guide.html",
    "source_url": "https://github.com/marcelm/cutadapt",
    "comments": [
      "To see the Cutadapt help, just run -h."
    ],
    "gui": false,
    "gui_command": "",
    "podman": "untested",
    "singularity": "untested",
    "invocation_general": "docker run --rm -v /your/data/dir:/data pegi3s/cutadapt ",
    "usual_invocation_specific": "-u 10 /data/fastqFile -o /data/output/output.fq",
    "usual_invocation_specific_comments": [
      "`output.fq` to the actual name of your output file. A negative value after `-u` would trims reads at the end."
    ],
    "test_invocation_specific": "-u 10 /data/test/data/SRR3143588_1.fastq -o /data/test/results/cutadapt_test.fq",
    "test_data_url": "http://evolution6.i3s.up.pt/static/pegi3s/dockerfiles/input_test_data/SRR3143588_1.fastq",
    "test_results_url": "http://evolution6.i3s.up.pt/static/pegi3s/dockerfiles/output_test_data/cutadapt_output.zip",
    "icon": "https://raw.githubusercontent.com/marcelm/cutadapt/main/doc/_static/cutadapt-logo.svg",
    "input_data_type": [
      "fastq"
    ],
    "auto_tests": [
      {
        "docker_image": "pegi3s/cutadapt:1.16",
        "input_files": [
          "SRR3143588_1.fastq"
        ],
        "output_dir": "cutadapt_output",
        "output_file": "trimmed_SRR3143588_1.fastq",
        "add_config": "",
        "commands": " -u 10 /data/input_data/SRR3143588_1.fastq -o /data/output_folder/cutadapt_output/trimmed_SRR3143588_1.fastq > /dev/null 2>&1"
      }
    ]
  },
  {
    "name": "diamond",
    "description": "Sequence alignment",
    "status": "Usable",
    "recommended": [
      {
        "version": "2.1.8",
        "date": ""
      }
    ],
    "latest": "2.1.8",
    "bug_found": [],
    "not_working": [],
    "no_longer_tested": [],
    "manual_url": "https://github.com/bbuchfink/diamond",
    "source_url": "https://github.com/bbuchfink/diamond",
    "comments": [],
    "gui": false,
    "gui_command": "",
    "podman": "untested",
    "singularity": "untested",
    "invocation_general": "docker run --rm -v /your/data/dir:/data pegi3s/diamond ",
    "usual_invocation_specific": "test",
    "usual_invocation_specific_comments": [
      "'test' to the name of the DIAMOND command you want to use. Right after the specific options of the DIAMOND application (these options must include the input/output files, which should be referenced under /data/; see Docker instructions for further details)."
    ],
    "test_invocation_specific": "",
    "test_data_url": "",
    "test_results_url": "",
    "icon": "https://avatars.githubusercontent.com/u/10001338?v=4",
    "input_data_type": [],
    "auto_tests": [
      {
        "docker_image": "pegi3s/diamond",
        "input_files": [],
        "output_dir": "",
        "output_file": "",
        "add_config": "",
        "commands": ""
      }
    ]
  },
  {
    "name": "ditasser_db",
    "description": "PDB retrieval",
    "status": "Usable",
    "recommended": [
      {
        "version": "1.0.1",
        "date": "25/11/2024"
      }
    ],
    "latest": "1.0.1",
    "bug_found": [
      {
        "version": "1.0.0",
        "description": ""
      }
    ],
    "not_working": [],
    "no_longer_tested": [
      "1.0.0"
    ],
    "manual_url": "https://hub.docker.com/r/pegi3s/ditasser_db",
    "source_url": "https://github.com/pegi3s/dockerfiles/tree/master/ditasser_db",
    "comments": [],
    "gui": false,
    "gui_command": "",
    "podman": "untested",
    "singularity": "untested",
    "invocation_general": "docker run --rm -v /your/data/dir:/data pegi3s/ditasser_db",
    "usual_invocation_specific": " bash -c \"/opt/getditasserpdb /data/uniprotlistFile && mv /data/*.pdb /data/output\"",
    "usual_invocation_specific_comments": [
      "The 'uniprotlistFile' should contain the UniProt numbers, one per line. After chosing your input file, delete the first '/data/' from the command."
    ],
    "test_invocation_specific": " bash -c \"/opt/getditasserpdb /test/data/Uniprot.txt && mv /data/*.pdb /data/test/results/ditasser_db_test\"",
    "test_data_url": "http://evolution6.i3s.up.pt/static/pegi3s/dockerfiles/input_test_data/Uniprot.txt",
    "test_results_url": "http://evolution6.i3s.up.pt/static/pegi3s/dockerfiles/output_test_data/ditasser_db_output.zip",
    "icon": "",
    "input_data_type": [
      "uniprotlist"
    ],
    "auto_tests": [
      {
        "docker_image": "pegi3s/ditasser_db",
        "input_files": [],
        "output_dir": "",
        "output_file": "",
        "add_config": "",
        "commands": ""
      }
    ]
  },
  {
    "name": "dnasp-v6",
    "description": "DNA sequence polymorphism",
    "status": "Usable",
    "recommended": [
      {
        "version": "v6",
        "date": "25/11/2024"
      }
    ],
    "latest": "v6",
    "bug_found": [],
    "not_working": [],
    "no_longer_tested": [],
    "manual_url": "http://www.ub.edu/dnasp/",
    "source_url": "http://www.ub.edu/dnasp/",
    "comments": [
      "This is a GUI, thus there is no test data output for this image. You may have to run 'xhost +' first if you create a .sh file."
    ],
    "gui": true,
    "gui_command": "wine \"/wineuser/.wine/drive_c/Program Files (x86)/DnaSP v6/DnaSP6.exe\"",
    "podman": "untested",
    "singularity": "untested",
    "invocation_general": "",
    "usual_invocation_specific": "",
    "usual_invocation_specific_comments": [
      "This image does not have any parameters."
    ],
    "test_invocation_specific": "",
    "test_data_url": "http://evolution6.i3s.up.pt/static/pegi3s/dockerfiles/input_test_data/CDS_aligned.fas",
    "test_results_url": "http://evolution6.i3s.up.pt/static/pegi3s/dockerfiles/output_test_data/empty",
    "icon": "http://www.ub.edu/molevol/julio/media/DnaSPlogo1.gif",
    "input_data_type": [],
    "auto_tests": [
      {
        "docker_image": "pegi3s/dnasp-v6",
        "input_files": [],
        "output_dir": "",
        "output_file": "",
        "add_config": "",
        "commands": ""
      }
    ]
  },
  {
    "name": "edena",
    "description": "de novo sequence assembler",
    "status": "Usable",
    "recommended": [
      {
        "version": "3.131028",
        "date": "25/11/2024"
      }
    ],
    "latest": "3.131028",
    "bug_found": [],
    "not_working": [],
    "no_longer_tested": [],
    "manual_url": "https://orione-documentation.readthedocs.io/en/latest/microbiology/ngs_de_novo_assembly/edena.html",
    "source_url": "https://web.archive.org/web/20221011222554/https://www.genomic.ch/edena.php",
    "comments": [
      "To see the Edena help, just run the docker image without any parameters."
    ],
    "gui": false,
    "gui_command": "",
    "podman": "untested",
    "singularity": "untested",
    "invocation_general": "docker run --rm -v /your/data/dir:/data pegi3s/edena ",
    "usual_invocation_specific": "-singleEnd /data/fastqFile -prefix /data/output/result",
    "usual_invocation_specific_comments": [
      "'result' to point to the prefix of the output files that will be generated by Edena."
    ],
    "test_invocation_specific": "-singleEnd /data/test/data/SRR3143588_1.fastq -prefix /data/test/results/edena_test",
    "test_data_url": "http://evolution6.i3s.up.pt/static/pegi3s/dockerfiles/input_test_data/SRR3143588_1.fastq",
    "test_results_url": "http://evolution6.i3s.up.pt/static/pegi3s/dockerfiles/output_test_data/edena_output.zip",
    "icon": "",
    "input_data_type": [
      "fastq"
    ],
    "auto_tests": [
      {
        "docker_image": "pegi3s/edena:3.131028",
        "input_files": [
          "SRR3143588_1.fastq"
        ],
        "output_dir": "edena_output",
        "output_file": "result.ovl",
        "add_config": "",
        "commands": " -singleEnd /data/input_data/SRR3143588_1.fastq -prefix /data/output_folder/edena_output/result > /dev/null 2>&1"
      }
    ]
  },
  {
    "name": "emboss",
    "description": "General utilities",
    "status": "Usable",
    "recommended": [
      {
        "version": "6.6.0",
        "date": "25/11/2024"
      }
    ],
    "latest": "6.6.0",
    "bug_found": [],
    "not_working": [],
    "no_longer_tested": [],
    "manual_url": "https://emboss.sourceforge.net/docs/",
    "source_url": "https://salsa.debian.org/med-team/emboss",
    "comments": [
      "To obtain the help of an application, you just need to run: emboss-application-name -h (e.g. prophet -h)"
    ],
    "gui": false,
    "gui_command": "",
    "podman": "untested",
    "singularity": "untested",
    "invocation_general": "docker run --rm -v /your/data/dir:/data pegi3s/emboss ",
    "usual_invocation_specific": "infoseq -sequence /data/fastaFile -outfile /data/output/out_name",
    "usual_invocation_specific_comments": [
      "'infoseq' to the name of the EMBOSS application you want to use (e.g. prophet, water, getorf). 'out_name' to the name of the output file.",
      "Different inputs can be mandaroty if using other EMBOSS applications, please read manual."
    ],
    "test_invocation_specific": "infoseq -sequence /data/test/data/6_Drosophila_melanogaster_CDS.fas -outfile /data/test/results/emboss_test",
    "test_data_url": "http://evolution6.i3s.up.pt/static/pegi3s/dockerfiles/input_test_data/6_Drosophila_melanogaster_CDS.fas",
    "test_results_url": "http://evolution6.i3s.up.pt/static/pegi3s/dockerfiles/output_test_data/emboss_output.zip",
    "icon": "https://emboss.sourceforge.net/images/emboss.jpg",
    "input_data_type": [
      "fasta"
    ],
    "auto_tests": [
      {
        "docker_image": "pegi3s/emboss",
        "input_files": [],
        "output_dir": "",
        "output_file": "",
        "add_config": "",
        "commands": ""
      }
    ]
  },
  {
    "name": "entrez-direct",
    "description": "NCBI E-utilities on the Unix Command Line",
    "status": "Usable",
    "recommended": [
      {
        "version": "10.0.20180927",
        "date": ""
      }
    ],
    "latest": "10.0.20180927",
    "bug_found": [],
    "not_working": [],
    "no_longer_tested": [],
    "manual_url": "https://www.ncbi.nlm.nih.gov/books/NBK179288/",
    "source_url": "https://ftp.ncbi.nlm.nih.gov/entrez/entrezdirect/versions/",
    "comments": [],
    "gui": false,
    "gui_command": "",
    "podman": "untested",
    "singularity": "untested",
    "invocation_general": "docker run --rm -v /your/data/dir:/data pegi3s/entrez-direct",
    "usual_invocation_specific": " bash -c \"epost -db nuccore -format uid - input /data/txtFile| efetch -format fasta > /data/output/sequences.fasta\"",
    "usual_invocation_specific_comments": [
      "The presented command correspond to the 'epost' command, pipped to the 'efech' one.",
      "For individual commands, change the entire command to follow this structure: '<entrez-direct-command> <options>'. Please refer to Entrez-Direct manual.",
      "'epost' and 'efech' can be changed to the names of the Entrez Direct commands you want to use."
    ],
    "test_invocation_specific": " bash -c \"epost -db nuccore -format uid - input /data/test/data/2_nucleotide_accessions.txt| efetch -format fasta > /data/test/results/entrez_direct_test.fasta\"",
    "test_data_url": "",
    "test_results_url": "",
    "icon": "",
    "input_data_type": [
      "txt"
    ],
    "auto_tests": [
      {
        "docker_image": "pegi3s/entrez-direct:10.0.20180927",
        "input_files": [
          "2_nucleotide_accessions.txt"
        ],
        "output_dir": "entrez-direct_output",
        "output_file": "sequences.fasta",
        "add_config": "",
        "commands": " bash -c \"epost -db nuccore -format uid -input /data/input_data/2_nucleotide_accessions.txt | efetch -format fasta > /data/output_folder/entrez-direct_output/sequences.fasta\" > /dev/null 2>&1"
      }
    ]
  },
  {
    "name": "fastqc",
    "description": "Sequence read quality assessment",
    "status": "Usable",
    "recommended": [
      {
        "version": "0.12.1",
        "date": "25/11/2024"
      }
    ],
    "latest": "0.12.1",
    "bug_found": [],
    "not_working": [],
    "no_longer_tested": [
      "0.11.9",
      "0.11.7"
    ],
    "manual_url": "https://www.bioinformatics.babraham.ac.uk/projects/fastqc/Help/",
    "source_url": "https://github.com/s-andrews/FastQC",
    "comments": [],
    "gui": true,
    "gui_command": " ",
    "podman": "untested",
    "singularity": "untested",
    "invocation_general": "docker run --rm -v /your/data/dir:/data pegi3s/fastqc ",
    "usual_invocation_specific": "/data/fastqFile --outdir /data/output",
    "usual_invocation_specific_comments": [],
    "test_invocation_specific": "/data/test/data/SRR3143588_1.fastq --outdir /data/test/results/fastqc_test",
    "test_data_url": "http://evolution6.i3s.up.pt/static/pegi3s/dockerfiles/input_test_data/SRR3143588_1.fastq",
    "test_results_url": "http://evolution6.i3s.up.pt/static/pegi3s/dockerfiles/output_test_data/fastqc_output.zip",
    "icon": "https://raw.githubusercontent.com/s-andrews/FastQC/refs/heads/master/uk/ac/babraham/FastQC/Resources/fastqc_icon.svg",
    "input_data_type": [
      "fastq"
    ],
    "auto_tests": [
      {
        "docker_image": "pegi3s/fastqc",
        "input_files": [],
        "output_dir": "",
        "output_file": "",
        "add_config": "",
        "commands": ""
      }
    ]
  },
  {
    "name": "fastroot",
    "description": "Tree rooting software",
    "status": "Usable",
    "recommended": [
      {
        "version": "1.5",
        "date": "25/11/2024"
      }
    ],
    "latest": "1.5",
    "bug_found": [],
    "not_working": [],
    "no_longer_tested": [],
    "manual_url": "https://github.com/uym2/MinVar-Rooting",
    "source_url": "https://github.com/uym2/MinVar-Rooting",
    "comments": [],
    "gui": false,
    "gui_command": "",
    "podman": "untested",
    "singularity": "untested",
    "invocation_general": "docker run --rm -v /your/data/dir:/data pegi3s/fastroot ",
    "usual_invocation_specific": "-i /data/newickFile -m MP -o /data/output/output.nwk",
    "usual_invocation_specific_comments": [
      "'MP' (midpoint) to other methods (e.g MV (minVAR), OG (outgroup), or RTT (root-to-tip)). If using OG, the `-g` option can be used to specify the outgroups. If more than one, put them between quotes. 'output.nwk' to the actual name of your Newick output file."
    ],
    "test_invocation_specific": "-i /data/test/data/newick.nwk -m MP -o /data/test/results/fastroot_test.nwk",
    "test_data_url": "http://evolution6.i3s.up.pt/static/pegi3s/dockerfiles/input_test_data/newick.nwk",
    "test_results_url": "http://evolution6.i3s.up.pt/static/pegi3s/dockerfiles/output_test_data/fastroot_output.zip",
    "icon": "",
    "input_data_type": [
      "newick"
    ],
    "auto_tests": [
      {
        "docker_image": "pegi3s/fastroot",
        "input_files": [],
        "output_dir": "",
        "output_file": "",
        "add_config": "",
        "commands": ""
      }
    ]
  },
  {
    "name": "fasttree",
    "description": "Phylogenetics inferences",
    "status": "Usable",
    "recommended": [
      {
        "version": "2.1.10",
        "date": "25/11/2024"
      }
    ],
    "latest": "2.1.10",
    "bug_found": [],
    "not_working": [],
    "no_longer_tested": [],
    "manual_url": "http://www.microbesonline.org/fasttree/#How",
    "source_url": "https://github.com/morgannprice/fasttree",
    "comments": [
      "To see the FastTree help, just run FastTree -help."
    ],
    "gui": false,
    "gui_command": "",
    "podman": "untested",
    "singularity": "untested",
    "invocation_general": "docker run --rm -v /your/data/dir:/data pegi3s/fasttree",
    "usual_invocation_specific": " bash -c \"FastTree -nt -gtr -gamma /data/fastaFile > /data/output/output.tre\"",
    "usual_invocation_specific_comments": [
      "'output.tre' to the actual name of your output file."
    ],
    "test_invocation_specific": " bash -c \"FastTree -nt -gtr -gamma /data/test/data/small_aligned.fasta > /data/test/results/fasttree_test.tre\"",
    "test_data_url": "http://evolution6.i3s.up.pt/static/pegi3s/dockerfiles/input_test_data/small_aligned.fasta",
    "test_results_url": "http://evolution6.i3s.up.pt/static/pegi3s/dockerfiles/output_test_data/fasttree_output.zip",
    "icon": "",
    "input_data_type": [
      "fasta"
    ],
    "auto_tests": [
      {
        "docker_image": "pegi3s/fasttree",
        "input_files": [],
        "output_dir": "",
        "output_file": "",
        "add_config": "",
        "commands": ""
      }
    ]
  },
  {
    "name": "feature-counts",
    "description": "Sequence read summarization function",
    "status": "Usable",
    "recommended": [
      {
        "version": "2.0.0",
        "date": ""
      }
    ],
    "latest": "2.0.0",
    "bug_found": [],
    "not_working": [],
    "no_longer_tested": [],
    "manual_url": "https://www.rdocumentation.org/packages/Rsubread/versions/1.22.2/topics/featureCounts",
    "source_url": "https://bioconductor.org/packages/release/bioc/html/Rsubread.html",
    "comments": [
      "The bam file must contain the alignment file in bam format."
    ],
    "gui": false,
    "gui_command": "",
    "podman": "untested",
    "singularity": "untested",
    "invocation_general": "docker run --rm -v /your/data/dir:/data pegi3s/feature-counts ",
    "usual_invocation_specific": "featureCounts -a /data/gffFile -o /data/output/output.txt /data/bamFile",
    "usual_invocation_specific_comments": [
      "'output.txt' to the actual name of your output file."
    ],
    "test_invocation_specific": "featureCounts -a /data/test/data/saccharomyces.gff -o /data/test/results/feature-counts_test.txt /data/test/data/saccharomyces_data.sorted.bam",
    "test_data_url": "",
    "test_results_url": "",
    "icon": "",
    "input_data_type": [
      "gff",
      "bam"
    ],
    "auto_tests": [
      {
        "docker_image": "pegi3s/feature-counts",
        "input_files": [],
        "output_dir": "",
        "output_file": "",
        "add_config": "",
        "commands": ""
      }
    ]
  },
  {
    "name": "figtree",
    "description": "Phylogenetic tree viewing and editing",
    "status": "Usable",
    "recommended": [
      {
        "version": "1.4.4",
        "date": "25/11/2024"
      }
    ],
    "latest": "1.4.4",
    "bug_found": [],
    "not_working": [],
    "no_longer_tested": [],
    "manual_url": "https://github.com/rambaut/figtree",
    "source_url": "https://github.com/rambaut/figtree",
    "comments": [
      "This is a GUI, thus there is no test data output for this image. You may have to run 'xhost +' first if you create a .sh file."
    ],
    "gui": true,
    "gui_command": " ",
    "podman": "untested",
    "singularity": "untested",
    "invocation_general": "",
    "usual_invocation_specific": "",
    "usual_invocation_specific_comments": [
      "This image does not have any parameters."
    ],
    "test_invocation_specific": "",
    "test_data_url": "http://evolution6.i3s.up.pt/static/pegi3s/dockerfiles/input_test_data/newick.nwk",
    "test_results_url": "http://evolution6.i3s.up.pt/static/pegi3s/dockerfiles/output_test_data/empty",
    "icon": "https://raw.githubusercontent.com/rambaut/figtree/refs/heads/master/Graphics/FigTreeIcon.png",
    "input_data_type": [],
    "auto_tests": [
      {
        "docker_image": "pegi3s/figtree",
        "input_files": [],
        "output_dir": "",
        "output_file": "",
        "add_config": "",
        "commands": ""
      }
    ]
  },
  {
    "name": "flash",
    "description": "Sequence read overlap",
    "status": "Usable",
    "recommended": [
      {
        "version": "1.2.11",
        "date": "25/11/2024"
      }
    ],
    "latest": "1.2.11",
    "bug_found": [],
    "not_working": [],
    "no_longer_tested": [],
    "manual_url": "https://ccb.jhu.edu/software/FLASH/",
    "source_url": "https://sourceforge.net/projects/flashpage/",
    "comments": [
      "To see the FLASH help, just run --help."
    ],
    "gui": false,
    "gui_command": "",
    "podman": "untested",
    "singularity": "untested",
    "invocation_general": "docker run --rm -v /your/data/dir:/data pegi3s/flash ",
    "usual_invocation_specific": "--interleaved-input /data/fastqFile -d /data/output",
    "usual_invocation_specific_comments": [
      "For pair-end analysis use: /data/input_1.fastq /data/input_2.fastq -d /data/result",
      "'result' to the name of the output directory. 'input_1.fastq' and 'input_2.fastq' to the actual name of your input files."
    ],
    "test_invocation_specific": "--interleaved-input /data/test/data/SRR3143588_1.fastq -d /data/test/results/flash_test",
    "test_data_url": "http://evolution6.i3s.up.pt/static/pegi3s/dockerfiles/input_test_data/flash.zip",
    "test_results_url": "http://evolution6.i3s.up.pt/static/pegi3s/dockerfiles/output_test_data/flash_output.zip",
    "icon": "",
    "input_data_type": [
      "fastq"
    ],
    "auto_tests": [
      {
        "docker_image": "pegi3s/flash:1.2.11",
        "input_files": [
          "SRR3143588_1.fastq",
          "SRR3143588_2.fastq"
        ],
        "output_dir": "flash_output",
        "output_file": "out.extendedFrags.fastq",
        "add_config": "",
        "commands": " /data/input_data/SRR3143588_1.fastq /data/input_data/SRR3143588_2.fastq -d /data/output_folder/flash_output > /dev/null 2>&1"
      }
    ]
  },
  {
    "name": "format_auto-pss-genome",
    "description": "format auto-pss-genome projects for B+",
    "status": "Usable",
    "recommended": [
      {
        "version": "1.0.0",
        "date": ""
      }
    ],
    "latest": "1.0.0",
    "bug_found": [],
    "not_working": [],
    "no_longer_tested": [],
    "manual_url": "https://hub.docker.com/r/pegi3s/format_auto-pss-genome/",
    "source_url": "https://github.com/pegi3s/auto-pss-genome",
    "comments": [],
    "gui": false,
    "gui_command": "",
    "podman": "untested",
    "singularity": "untested",
    "invocation_general": "docker run --rm -v /var/run/docker.sock:/var/run/docker.sock -v /your/data/dir:/data pegi3s/format_auto-pss-genome",
    "usual_invocation_specific": "/opt/bpos_codeml.sh /your/data/dir",
    "usual_invocation_specific_comments": [
      "'bpos_codeml.sh' can be changed depending on the type of project (e.g. bpos_fubar.sh or bpos_omegamap.sh). Your input files must be in the same directory as the config file for docknrun."
    ],
    "test_invocation_specific": "",
    "test_data_url": "",
    "test_results_url": "",
    "icon": "",
    "input_data_type": [],
    "auto_tests": [
      {
        "docker_image": "pegi3s/format_auto-pss-genome",
        "input_files": [],
        "output_dir": "",
        "output_file": "",
        "add_config": "",
        "commands": ""
      }
    ]
  },
  {
    "name": "freebayes",
    "description": "haplotype based variant detector",
    "status": "Usable",
    "recommended": [
      {
        "version": "1.3.6",
        "date": ""
      }
    ],
    "latest": "1.3.6",
    "bug_found": [],
    "not_working": [],
    "no_longer_tested": [],
    "manual_url": "https://github.com/freebayes/freebayes",
    "source_url": "https://github.com/freebayes/freebayes",
    "comments": [],
    "gui": false,
    "gui_command": "",
    "podman": "untested",
    "singularity": "untested",
    "invocation_general": "docker run --rm -v /your/data/dir:/data pegi3s/freebayes ",
    "usual_invocation_specific": "-f /data/referenceFile /data/bamFile > /data/output/out_name.fai",
    "usual_invocation_specific_comments": [
      "Your input fasta to the actual name of your reference file (rCRS.fasta is included with the docker image).",
      "'out_name' to the name of your output file"
    ],
    "test_invocation_specific": "",
    "test_data_url": "",
    "test_results_url": "",
    "icon": "",
    "input_data_type": [
      "reference",
      "bam"
    ],
    "auto_tests": [
      {
        "docker_image": "pegi3s/freebayes",
        "input_files": [],
        "output_dir": "",
        "output_file": "",
        "add_config": "",
        "commands": ""
      }
    ]
  },
  {
    "name": "gatk-4",
    "description": "Genomic tools",
    "status": "Usable",
    "recommended": [
      {
        "version": "4.1.4.1",
        "date": ""
      }
    ],
    "latest": "4.1.4.1",
    "bug_found": [],
    "not_working": [],
    "no_longer_tested": [],
    "manual_url": "https://gatk.broadinstitute.org/hc/en-us/articles/360037224712--Tool-Documentation-Index",
    "source_url": "https://github.com/broadinstitute/gatk",
    "comments": [
      "To see GATK 4 available tools, just run gatk --list (please note that GATK 4 does not include some tools that are included in GATK 3\u2060).",
      "To obtain the help of a particular tool, you just need to run: gatk tools --help (where tools is the tool name)"
    ],
    "gui": false,
    "gui_command": "",
    "podman": "untested",
    "singularity": "untested",
    "invocation_general": "docker run --rm -v /your/data/dir:/data pegi3s/gatk-4",
    "usual_invocation_specific": " gatk SortVcf -I /data/vcfFile -O /data/output/out.recode.vcf",
    "usual_invocation_specific_comments": [
      "'SortVcf' to the GATK-4 tool needed. 'out.recode.vcf' to the output file name.)."
    ],
    "test_invocation_specific": " gatk SortVcf -I /data/test/data/test.recode.vcf -O /data/test/results/gatk4_test.vcf",
    "test_data_url": "",
    "test_results_url": "",
    "icon": "https://avatars.githubusercontent.com/u/32406064?s=280&v=4",
    "input_data_type": [],
    "auto_tests": [
      {
        "docker_image": "pegi3s/gatk-4",
        "input_files": [],
        "output_dir": "",
        "output_file": "",
        "add_config": "",
        "commands": ""
      }
    ]
  },
  {
    "name": "gatk-3",
    "description": "Genomic tools",
    "status": "Usable",
    "recommended": [
      {
        "version": "3.8-0",
        "date": ""
      }
    ],
    "latest": "3.8-0",
    "bug_found": [],
    "not_working": [],
    "no_longer_tested": [],
    "manual_url": "https://gatk.broadinstitute.org/hc/en-us/categories/360002302312",
    "source_url": "https://github.com/broadgsa/gatk-protected",
    "comments": [
      "To see GATK 3 options and available tools, just run java -jar /opt/GenomeAnalysisTK.jar -h."
    ],
    "gui": false,
    "gui_command": "",
    "podman": "untested",
    "singularity": "untested",
    "invocation_general": "docker run --rm -v /your/data/dir:/data pegi3s/gatk-3 ",
    "usual_invocation_specific": "java -jar /opt/GenomeAnalysisTK.jar -T RealignerTargetCreator -R /data/fastaFile -I /data/bamFile -o /data/output/out_name.list",
    "usual_invocation_specific_comments": [
      "'RealignerTargetCreator' to the name of the GATK 3 tool you want to use. The remainder of the command is specific of the GATK 3 tool, please refer to the GATk 3 manual for other tools.)."
    ],
    "test_invocation_specific": "",
    "test_data_url": "",
    "test_results_url": "",
    "icon": "https://avatars.githubusercontent.com/u/32406064?s=280&v=4",
    "input_data_type": [
      "fasta",
      "bam"
    ],
    "auto_tests": [
      {
        "docker_image": "pegi3s/gatk-3",
        "input_files": [],
        "output_dir": "",
        "output_file": "",
        "add_config": "",
        "commands": ""
      }
    ]
  },
  {
    "name": "getpdb",
    "description": "PDB retrieval",
    "status": "Usable",
    "recommended": [
      {
        "version": "1.0.0",
        "date": "25/11/2024"
      }
    ],
    "latest": "1.0.0",
    "bug_found": [],
    "not_working": [],
    "no_longer_tested": [],
    "manual_url": "https://hub.docker.com/r/pegi3s/getpdb",
    "source_url": "https://github.com/pegi3s/dockerfiles/tree/master/getpdb",
    "comments": [],
    "gui": false,
    "gui_command": "",
    "podman": "untested",
    "singularity": "untested",
    "invocation_general": "docker run --rm -v /your/data/dir:/data pegi3s/getpdb",
    "usual_invocation_specific": " bash -c \"./getpdb /data/uniprotFile && mv /data/*.pdb /data/output && mv /data/*_pdb.csv /data/output\"",
    "usual_invocation_specific_comments": [
      "Only one UniProt number can be specified in the 'uniprotFile'.",
      "After choosing the input and output files/folders, manually delete \"/data\" that precedes your input directory."
    ],
    "test_invocation_specific": " bash -c \"./getpdb /data/test/data/Uniprot.txt && mv /data/*.pdb /data/test/results/getpdb_test && mv /data/*_pdb.csv /data/test/results/getpdb_test\"",
    "test_data_url": "http://evolution6.i3s.up.pt/static/pegi3s/dockerfiles/input_test_data/Uniprot.txt",
    "test_results_url": "http://evolution6.i3s.up.pt/static/pegi3s/dockerfiles/output_test_data/getpdb_ouput.zip",
    "icon": "",
    "input_data_type": [
      "uniprot"
    ],
    "auto_tests": [
      {
        "docker_image": "pegi3s/getpdb:1.0.0",
        "input_files": [
          "Uniprot.txt"
        ],
        "output_dir": "getpdb_output",
        "output_file": "P54252-1yzb.pdb",
        "add_config": "",
        "commands": " bash -c \"./getpdb input_data/Uniprot.txt && mv /data/P54252* /data/output_folder/getpdb_output\" > /dev/null 2>&1"
      }
    ]
  },
  {
    "name": "gmap-gsnap",
    "description": "Genome sequence mapping",
    "status": "Usable",
    "recommended": [
      {
        "version": "2021.03.08",
        "date": ""
      }
    ],
    "latest": "2021.03.08",
    "bug_found": [],
    "not_working": [],
    "no_longer_tested": [],
    "manual_url": "https://github.com/juliangehring/GMAP-GSNAP/blob/master/README",
    "source_url": "http://research-pub.gene.com/gmap/",
    "comments": [],
    "gui": false,
    "gui_command": "",
    "podman": "untested",
    "singularity": "untested",
    "invocation_general": "docker run --rm -v \"/your/data/dir:/data\" pegi3s/gmap-gsnap",
    "usual_invocation_specific": " bash -c \"gmap_build -d genome_name -k 12 /data/genomefastaFile && gmap -d genome_name /data/mRNAfastaFile > /data/output/out_name\"",
    "usual_invocation_specific_comments": [
      "'genome_name' to a given name. '12' to the value of the k-mer size you want to use. 'out_name' to the actual name of your output file."
    ],
    "test_invocation_specific": "",
    "test_data_url": "",
    "test_results_url": "",
    "icon": "",
    "input_data_type": [
      "genomefasta",
      "mRNAfasta"
    ],
    "auto_tests": [
      {
        "docker_image": "pegi3s/gmap-gsnap",
        "input_files": [],
        "output_dir": "",
        "output_file": "",
        "add_config": "",
        "commands": ""
      }
    ]
  },
  {
    "name": "goalign",
    "description": "Multiple sequence alignments manipulation",
    "status": "Usable",
    "recommended": [
      {
        "version": "0.3.5",
        "date": "25/11/2024"
      }
    ],
    "latest": "0.3.5",
    "bug_found": [],
    "not_working": [],
    "no_longer_tested": [],
    "manual_url": "https://github.com/evolbioinfo/goalign",
    "source_url": "https://github.com/evolbioinfo/goalign",
    "comments": [],
    "gui": false,
    "gui_command": "",
    "podman": "untested",
    "singularity": "untested",
    "invocation_general": "docker run -v /your/data/dir:/data --rm pegi3s/goalign ",
    "usual_invocation_specific": "goalign subseq -i /data/fastaFile -s 20 -l 30 -o /data/output/out_name",
    "usual_invocation_specific_comments": [
      "'sebseq' to the name of the Goalign application you want to use (e.g. split, rename, split, etc.). 'out_name' to the actual name of your output file.",
      "'-s 20 -l 30' is specific to 'subseq' and it sould be deleted in case of other Goalign application."
    ],
    "test_invocation_specific": "goalign subseq -i /data/test/data/small_aligned.fas -s 20 -l 30 -o /data/test/results/goalign_test",
    "test_data_url": "http://evolution6.i3s.up.pt/static/pegi3s/dockerfiles/input_test_data/small_aligned.fas",
    "test_results_url": "http://evolution6.i3s.up.pt/static/pegi3s/dockerfiles/output_test_data/goalign_output.zip",
    "icon": "https://raw.githubusercontent.com/evolbioinfo/goalign/master/images/logo.svg",
    "input_data_type": [
      "fasta"
    ],
    "auto_tests": [
      {
        "docker_image": "pegi3s/goalign:0.3.5",
        "input_files": [
          "small_aligned.fas"
        ],
        "output_dir": "goalign_output",
        "output_file": "small_aligned.sub.fasta",
        "add_config": "",
        "commands": " goalign subseq -i /data/input_data/small_aligned.fas -s 20 -l 30 -o /data/output_folder/goalign_output/small_aligned.sub.fasta > /dev/null 2>&1"
      }
    ]
  },
  {
    "name": "gotree",
    "description": "Phylogenetic trees manipulation",
    "status": "Usable",
    "recommended": [
      {
        "version": "0.4.2",
        "date": "25/11/2024"
      }
    ],
    "latest": "0.4.2",
    "bug_found": [],
    "not_working": [],
    "no_longer_tested": [],
    "manual_url": "https://github.com/evolbioinfo/gotree",
    "source_url": "https://github.com/evolbioinfo/gotree",
    "comments": [],
    "gui": false,
    "gui_command": "",
    "podman": "untested",
    "singularity": "untested",
    "invocation_general": "docker run -v /your/data/dir:/data --rm pegi3s/gotree ",
    "usual_invocation_specific": "gotree matrix -i /data/newickFile -o /data/output/out_name",
    "usual_invocation_specific_comments": [
      "'matrix' to the name of the Gotree application you want to use (e.g. collapse, annotate, etc.). 'out_name' to the actual name of your output file."
    ],
    "test_invocation_specific": "gotree matrix -i /data/test/data/newick.nwk -o /data/test/results/gotree_test",
    "test_data_url": "http://evolution6.i3s.up.pt/static/pegi3s/dockerfiles/input_test_data/newick.nwk",
    "test_results_url": "http://evolution6.i3s.up.pt/static/pegi3s/dockerfiles/output_test_data/gotree_output.zip",
    "icon": "https://raw.githubusercontent.com/evolbioinfo/gotree/refs/heads/master/images/logo.svg",
    "input_data_type": [
      "newick"
    ],
    "auto_tests": [
      {
        "docker_image": "pegi3s/gotree:0.4.2",
        "input_files": [
          "newick.nwk"
        ],
        "output_dir": "gotree_output",
        "output_file": "distance_matrix",
        "add_config": "",
        "commands": " gotree matrix -i /data/input_data/newick.nwk -o /data/output_folder/gotree_output/distance_matrix > /dev/null 2>&1"
      }
    ]
  },
  {
    "name": "graphviz",
    "description": "Graph building application",
    "status": "Usable",
    "recommended": [
      {
        "version": "2.43.0",
        "date": "25/11/2024"
      }
    ],
    "latest": "2.43.0",
    "bug_found": [],
    "not_working": [],
    "no_longer_tested": [],
    "manual_url": "https://graphviz.org/",
    "source_url": "https://gitlab.com/graphviz/graphviz",
    "comments": [
      "Before using the graphviz image, you must prepare the file containing the instructions for building the graph as pairs of objects. Please see the test data for inspiration"
    ],
    "gui": false,
    "gui_command": "",
    "podman": "untested",
    "singularity": "untested",
    "invocation_general": "docker run --rm -v /your/data/dir:/data pegi3s/graphviz",
    "usual_invocation_specific": " bash -c \"python3 /data/graph_pyFile && mv /data/Graph.gv /data/output && mv /data/Graph.gv.svg /data/output\"",
    "usual_invocation_specific_comments": [],
    "test_invocation_specific": " bash -c \"python3 /data/test/data/graph.py && mv /data/Graph.gv /data/test/results/graphviz_test && mv /data/Graph.gv.svg /data/test/results/graphviz_test\"",
    "test_data_url": "http://evolution6.i3s.up.pt/static/pegi3s/dockerfiles/input_test_data/graph.py",
    "test_results_url": "http://evolution6.i3s.up.pt/static/pegi3s/dockerfiles/output_test_data/graphviz_output.zip",
    "icon": "https://upload.wikimedia.org/wikipedia/en/4/48/GraphvizLogo.png",
    "input_data_type": [
      "graph_py"
    ],
    "auto_tests": [
      {
        "docker_image": "pegi3s/graphviz:2.43.0",
        "input_files": [
          "graph.py"
        ],
        "output_dir": "graphviz_output",
        "output_file": "Graph.gv",
        "add_config": "",
        "commands": " bash -c \"python3 /data/input_data/graph.py && mv /data/Graph.gv /data/output_folder/graphviz_output && mv /data/Graph.gv.svg /data/output_folder/graphviz_output\" > /dev/null 2>&1"
      }
    ]
  },
  {
    "name": "haddock-tools",
    "description": "HADDOCK tools",
    "status": "Usable",
    "recommended": [
      {
        "version": "07.06.2021",
        "date": ""
      }
    ],
    "latest": "07.06.2021",
    "bug_found": [],
    "not_working": [],
    "no_longer_tested": [
      "git_07.06.2021"
    ],
    "manual_url": "https://github.com/haddocking/haddock-tools/blob/master/README.md",
    "source_url": "https://github.com/haddocking/haddock-tools",
    "comments": [],
    "gui": false,
    "gui_command": "",
    "podman": "untested",
    "singularity": "untested",
    "invocation_general": "docker run --rm -v /your/data/dir:/data pegi3s/haddock-tools",
    "usual_invocation_specific": "bash -c \"/opt/haddock-tools/molprobity.py /data/pdbFile > /data/output/out_name\"",
    "usual_invocation_specific_comments": [
      "'molprobity.py' can be changed to other operations (e.g. passive_from_active.py or active-passive-to-ambig.py). 'out_name' to the name of your outpur file."
    ],
    "test_invocation_specific": "",
    "test_data_url": "",
    "test_results_url": "",
    "icon": "",
    "input_data_type": [],
    "auto_tests": [
      {
        "docker_image": "pegi3s/haddock-tools",
        "input_files": [],
        "output_dir": "",
        "output_file": "",
        "add_config": "",
        "commands": ""
      }
    ]
  },
  {
    "name": "haplogrep",
    "description": "haplogroup classification tool",
    "status": "Usable",
    "recommended": [
      {
        "version": "3.2.1",
        "date": ""
      }
    ],
    "latest": "3.2.1",
    "bug_found": [],
    "not_working": [],
    "no_longer_tested": [],
    "manual_url": "https://haplogrep.readthedocs.io/en/latest/parameters/",
    "source_url": "https://github.com/genepi/haplogrep3",
    "comments": [],
    "gui": false,
    "gui_command": "",
    "podman": "untested",
    "singularity": "untested",
    "invocation_general": "docker run --rm -v /your/data/dir:/data pegi3s/haplogrep ",
    "usual_invocation_specific": "classify --input=/data/inputFile --tree=phylotree-rcrs@17.2 --out /data/output/out.txt",
    "usual_invocation_specific_comments": [
      "'out.txt' to the desired name of the output file. You may also want to replace phylotree-rcrs@17.2 for another reference sequence."
    ],
    "test_invocation_specific": "",
    "test_data_url": "",
    "test_results_url": "",
    "icon": "",
    "input_data_type": [
      "input"
    ],
    "auto_tests": [
      {
        "docker_image": "pegi3s/haplogrep",
        "input_files": [],
        "output_dir": "",
        "output_file": "",
        "add_config": "",
        "commands": ""
      }
    ]
  },
  {
    "name": "human_prot_atlas",
    "description": "Filtering UniProtKB identifier lists based on Human Protein Atlas tissues",
    "status": "Usable",
    "recommended": [
      {
        "version": "1.0.0",
        "date": ""
      }
    ],
    "latest": "1.0.0",
    "bug_found": [],
    "not_working": [],
    "no_longer_tested": [],
    "manual_url": "https://hub.docker.com/r/pegi3s/human_prot_atlas/",
    "source_url": "https://github.com/pegi3s/dockerfiles/tree/master/human_prot_atlas",
    "comments": [],
    "gui": false,
    "gui_command": "",
    "podman": "untested",
    "singularity": "untested",
    "invocation_general": "docker run --rm -v /your/data/dir:/data -w /data pegi3s/human_prot_atlas ",
    "usual_invocation_specific": " /data/configFile /data/inputFile /data/output/out_name.txt cache_dir",
    "usual_invocation_specific_comments": [
      "'out_name.txt' to the actual name of your output TXT file with the filtered identifiers."
    ],
    "test_invocation_specific": "",
    "test_data_url": "",
    "test_results_url": "",
    "icon": "https://www.proteinatlas.org/favicon.ico?v=JyAbEzO2Nb",
    "input_data_type": [
      "config",
      "input"
    ],
    "auto_tests": [
      {
        "docker_image": "pegi3s/human_prot_atlas",
        "input_files": [],
        "output_dir": "",
        "output_file": "",
        "add_config": "",
        "commands": ""
      }
    ]
  },
  {
    "name": "hyphy",
    "description": "Phylogenetics inferences",
    "status": "Usable",
    "recommended": [
      {
        "version": "2.3.14",
        "date": ""
      }
    ],
    "latest": "2.3.14",
    "bug_found": [],
    "not_working": [],
    "no_longer_tested": [],
    "manual_url": "http://hyphy.org/tutorials/CL-prompt-tutorial/",
    "source_url": "https://github.com/veg/hyphy",
    "comments": [
      "To see the HyPhy help, just run HYPHYMP -h."
    ],
    "gui": false,
    "gui_command": "",
    "podman": "untested",
    "singularity": "untested",
    "invocation_general": "docker run --rm -it -v /your/data/dir:/data pegi3s/hyphy ",
    "usual_invocation_specific": "HYPHYMP",
    "usual_invocation_specific_comments": [],
    "test_invocation_specific": "",
    "test_data_url": "",
    "test_results_url": "",
    "icon": "https://raw.githubusercontent.com/veg/hyphy-site/master/docs/images/logo.svg",
    "input_data_type": [
      "input"
    ],
    "auto_tests": [
      {
        "docker_image": "pegi3s/hyphy",
        "input_files": [],
        "output_dir": "",
        "output_file": "",
        "add_config": "",
        "commands": ""
      }
    ]
  },
  {
    "name": "id-mapping",
    "description": "ID mapping",
    "status": "Usable",
    "recommended": [
      {
        "version": "1.1.0",
        "date": "25/11/2024"
      }
    ],
    "latest": "1.1.0",
    "bug_found": [],
    "not_working": [],
    "no_longer_tested": [
      "1.0.0"
    ],
    "manual_url": "https://hub.docker.com/r/pegi3s/id-mapping",
    "source_url": "https://github.com/pegi3s/dockerfiles/tree/master/id_mapping",
    "comments": [
      "The valid names for FROM_DB and TO_DB can be obtained with docker run --rm pegi3s/id-mapping list-from-dbs and docker run --rm pegi3s/id-mapping list-to-dbs, respectively. The script`s help can be obtained with --help."
    ],
    "gui": false,
    "gui_command": "",
    "podman": "untested",
    "singularity": "untested",
    "invocation_general": "docker run --rm -v /your/data/dir:/data -w /data pegi3s/id-mapping",
    "usual_invocation_specific": " map-ids --from-db UniProtKB_AC-ID --to-db Gene_Name --input /data/inputFile --output /data/output/output.tsv",
    "usual_invocation_specific_comments": [
      " 'map-ids' can be changed to 'gene-id-to-uniprotkb', see manual. 'UniprotKB_AC-ID' to the actual name of the source database of the input identifiers. 'Gene_Name' to the actual name of the destination database. `output.tsv` to the actual name of your output TSV file."
    ],
    "test_invocation_specific": "map-ids --from-db UniProtKB_AC-ID --to-db Gene_Name --input /data/test/data/gene_ids.txt --output /data/test/results/id_mapping_test.tsv",
    "test_data_url": "http://evolution6.i3s.up.pt/static/pegi3s/dockerfiles/input_test_data/gene_ids.txt",
    "test_results_url": "http://evolution6.i3s.up.pt/static/pegi3s/dockerfiles/output_test_data/id-mapping_output.zip",
    "icon": "",
    "input_data_type": [
      "input"
    ],
    "auto_tests": [
      {
        "docker_image": "pegi3s/id-mapping:1.1.0",
        "input_files": [
          "gene_ids.txt"
        ],
        "output_dir": "id-mapping_output",
        "output_file": "output.tsv",
        "add_config": "",
        "commands": " gene-id-to-uniprotkb /data/input_data/gene_ids.txt /data/output_folder/id-mapping_output/output.tsv > /dev/null 2>&1"
      }
    ]
  },
  {
    "name": "igv",
    "description": "Genomics viewer",
    "status": "Usable",
    "recommended": [
      {
        "version": "2.13.0",
        "date": ""
      }
    ],
    "latest": "2.13.0",
    "bug_found": [],
    "not_working": [],
    "no_longer_tested": [],
    "manual_url": "https://igv.org/doc/desktop/",
    "source_url": "https://github.com/igvteam/igv",
    "comments": [],
    "gui": true,
    "gui_command": " ",
    "podman": "untested",
    "singularity": "untested",
    "invocation_general": "",
    "usual_invocation_specific": "",
    "usual_invocation_specific_comments": [
      "This image does not have any parameters."
    ],
    "test_invocation_specific": "",
    "test_data_url": "",
    "test_results_url": "http://evolution6.i3s.up.pt/static/pegi3s/dockerfiles/output_test_data/empty",
    "icon": "https://raw.githubusercontent.com/igvteam/igv/refs/heads/main/docs/web/IGV_64.png",
    "input_data_type": [],
    "auto_tests": [
      {
        "docker_image": "pegi3s/igv",
        "input_files": [],
        "output_dir": "",
        "output_file": "",
        "add_config": "",
        "commands": ""
      }
    ]
  },
  {
    "name": "jmodeltest2",
    "description": "Best-fit models of nucleotide substitution",
    "status": "Usable",
    "recommended": [
      {
        "version": "2.1.10",
        "date": ""
      }
    ],
    "latest": "2.1.10",
    "bug_found": [],
    "not_working": [],
    "no_longer_tested": [],
    "manual_url": "https://usermanual.wiki/Document/manual.230794443.pdf",
    "source_url": "https://github.com/ddarriba/jmodeltest2",
    "comments": [],
    "gui": true,
    "gui_command": "java -jar /jmodeltest2/dist/jModelTest.jar",
    "podman": "untested",
    "singularity": "untested",
    "invocation_general": "docker run --rm -v /your/data/dir:/data pegi3s/jmodeltest2",
    "usual_invocation_specific": "java -jar /jmodeltest2/dist/jModelTest.jar -d /data/inputFile -g 4 -i -f -AIC -BIC -a -o /data/output/out_name",
    "usual_invocation_specific_comments": [
      "'4' to the to the gamma models rate categories number. 'out_name' to the name of the output file."
    ],
    "test_invocation_specific": "java -jar /jmodeltest2/dist/jModelTest.jar -d /data/test/data/small_aligned.fas -g 4 -i -f -AIC -BIC -a -o /data/test/results/jmodeltest2_test",
    "test_data_url": "http://evolution6.i3s.up.pt/static/pegi3s/dockerfiles/input_test_data/small_aligned.fas",
    "test_results_url": "http://evolution6.i3s.up.pt/static/pegi3s/dockerfiles/output_test_data/jmodeltest2_output.zip",
    "icon": "https://raw.githubusercontent.com/ddarriba/jmodeltest2/master/src/main/resources/resources/template/resources/logo0.png",
    "input_data_type": [
      "input"
    ],
    "auto_tests": [
      {
        "docker_image": "pegi3s/jmodeltest2:2.1.10",
        "input_files": [
          "small_aligned.fas"
        ],
        "output_dir": "jmodeltest2_output",
        "output_file": "JModeltest2_output",
        "add_config": "",
        "commands": " java -jar /jmodeltest2/dist/jModelTest.jar -d /data/input_data/small_aligned.fas -g 4 -i -f -AIC -BIC -a -o /data/output_folder/jmodeltest2_output/JModeltest2_output > /dev/null 2>&1"
      }
    ]
  },
  {
    "name": "kakscalculator",
    "description": "Sequence divergence",
    "status": "Usable",
    "recommended": [
      {
        "version": "2.0",
        "date": "25/11/2024"
      }
    ],
    "latest": "2.0",
    "bug_found": [],
    "not_working": [],
    "no_longer_tested": [],
    "manual_url": "https://github.com/pegi3s/dockerfiles/blob/master/kakscalculator/2.0/doc/KaKs_Calculator2.0_Manual.pdf",
    "source_url": "https://sourceforge.net/projects/kakscalculator2/",
    "comments": [
      "The CDS sequences in the fastaFile must be aligned (with no sequence line breaks).",
      "The first nucleotide must correspond to the first codon position. To see the KaKs Calculator help, just run \"KaKs_Calculator -h\"."
    ],
    "gui": false,
    "gui_command": "",
    "podman": "untested",
    "singularity": "untested",
    "invocation_general": "docker run --rm -v /your/data/dir:/data pegi3s/kakscalculator",
    "usual_invocation_specific": " bash -c \"FASTA-AXT /data/fastaFile && KaKs_Calculator -i /data/fastaFile.axt -o /data/output/results.axt.kaks\"",
    "usual_invocation_specific_comments": [],
    "test_invocation_specific": " bash -c \"FASTA-AXT /data/test/data/CDS_aligned.fas && KaKs_Calculator -i /data/fastaFile.axt -o /data/test/results/kakscalculator_test.axt.kaks\"",
    "test_data_url": "http://evolution6.i3s.up.pt/static/pegi3s/dockerfiles/input_test_data/CDS_aligned.fas",
    "test_results_url": "http://evolution6.i3s.up.pt/static/pegi3s/dockerfiles/output_test_data/kakscalculator_output.zip",
    "icon": "",
    "input_data_type": [
      "fasta"
    ],
    "auto_tests": [
      {
        "docker_image": "pegi3s/kakscalculator",
        "input_files": [],
        "output_dir": "",
        "output_file": "",
        "add_config": "",
        "commands": ""
      }
    ]
  },
  {
    "name": "lsd",
    "description": "Discover patterns within biological sequences",
    "status": "Usable",
    "recommended": [
      {
        "version": "1.0.0",
        "date": ""
      }
    ],
    "latest": "1.0.0",
    "bug_found": [],
    "not_working": [],
    "no_longer_tested": [],
    "manual_url": "https://code.google.com/archive/p/lineagesequencediscovery/",
    "source_url": "https://github.com/nunofonseca/lineagesequencediscovery",
    "comments": [],
    "gui": true,
    "gui_command": " ",
    "podman": "untested",
    "singularity": "untested",
    "invocation_general": "",
    "usual_invocation_specific": "",
    "usual_invocation_specific_comments": [
      "configFile inputFile output.txt cache_dir"
    ],
    "test_invocation_specific": "",
    "test_data_url": "",
    "test_results_url": "",
    "icon": "https://raw.githubusercontent.com/nunofonseca/lineagesequencediscovery/master/LSD.png",
    "input_data_type": [
      "config",
      "input"
    ],
    "auto_tests": [
      {
        "docker_image": "pegi3s/lsd",
        "input_files": [],
        "output_dir": "",
        "output_file": "",
        "add_config": "",
        "commands": ""
      }
    ]
  },
  {
    "name": "mafft",
    "description": "Sequence alignment",
    "status": "Usable",
    "recommended": [
      {
        "version": "7.505",
        "date": "25/11/2024"
      }
    ],
    "latest": "7.505",
    "bug_found": [],
    "not_working": [],
    "no_longer_tested": [],
    "manual_url": "https://mafft.cbrc.jp/alignment/server/",
    "source_url": "https://gitlab.com/sysimm/mafft",
    "comments": [
      "To see the MAFFT help, just run mafft --help."
    ],
    "gui": false,
    "gui_command": "",
    "podman": "untested",
    "singularity": "untested",
    "invocation_general": "docker run --rm -v /your/data/dir:/data pegi3s/mafft",
    "usual_invocation_specific": " bash -c \"mafft /data/fastaFile > /data/output/output.fasta\"",
    "usual_invocation_specific_comments": [
      "output.fasta to the actual name of your aligned FASTA file."
    ],
    "test_invocation_specific": " bash -c \"mafft /data/test/data/small_not_aligned.fas > /data/test/results/mafft_test.fasta\"",
    "test_data_url": "http://evolution6.i3s.up.pt/static/pegi3s/dockerfiles/input_test_data/small_not_aligned.fas",
    "test_results_url": "http://evolution6.i3s.up.pt/static/pegi3s/dockerfiles/output_test_data/mafft_output.zip",
    "icon": "",
    "input_data_type": [
      "fasta"
    ],
    "auto_tests": [
      {
        "docker_image": "pegi3s/mafft:7.505",
        "input_files": [
          "small_not_aligned.fas"
        ],
        "output_dir": "mafft_output",
        "output_file": "sequences_aligned.fasta",
        "add_config": "",
        "commands": " bash -c \"mafft /data/input_data/small_not_aligned.fas > /data/output_folder/mafft_output/sequences_aligned.fasta\" > /dev/null 2>&1"
      }
    ]
  },
  {
    "name": "mauve",
    "description": "Genome alignment",
    "status": "Usable",
    "recommended": [
      {
        "version": "2.4.0",
        "date": ""
      }
    ],
    "latest": "2.4.0",
    "bug_found": [],
    "not_working": [],
    "no_longer_tested": [],
    "manual_url": "https://darlinglab.org/mauve/mauve.html",
    "source_url": "https://github.com/koadman/mauve",
    "comments": [],
    "gui": true,
    "gui_command": " ",
    "podman": "untested",
    "singularity": "untested",
    "invocation_general": "docker run --rm -v /your/data/dir:/data pegi3s/mauve",
    "usual_invocation_specific": " bash -c \"progressiveMauve --output=/data/output/out_file /data/fastq1File /data/fastq2File\"",
    "usual_invocation_specific_comments": [
      "'out_file' to the actual name of your output file."
    ],
    "test_invocation_specific": "",
    "test_data_url": "",
    "test_results_url": "",
    "icon": "https://raw.githubusercontent.com/koadman/mauve/master/src/images/mauve_logo.png",
    "input_data_type": [
      "fastq1",
      "fastq2"
    ],
    "auto_tests": [
      {
        "docker_image": "pegi3s/mauve",
        "input_files": [],
        "output_dir": "",
        "output_file": "",
        "add_config": "",
        "commands": ""
      }
    ]
  },
  {
    "name": "maxbin2",
    "description": "Software for binning assembled metagenomic sequences",
    "status": "Usable",
    "recommended": [
      {
        "version": "2.2.4",
        "date": ""
      }
    ],
    "latest": "2.2.4",
    "bug_found": [],
    "not_working": [],
    "no_longer_tested": [],
    "manual_url": "https://raw.githubusercontent.com/pegi3s/dockerfiles/master/maxbin2/2.2.4/options_menu/options.txt",
    "source_url": "https://sourceforge.net/projects/maxbin2/",
    "comments": [],
    "gui": false,
    "gui_command": "",
    "podman": "untested",
    "singularity": "untested",
    "invocation_general": "docker run --rm -v /your/data/dir:/data pegi3s/maxbin2",
    "usual_invocation_specific": "run_MaxBin.pl -contig /data/contigfastaFile -reads /data/fastq1File -reads2 /data/fastq2File -out /data/output/out_name",
    "usual_invocation_specific_comments": [
      "To see run_MaxBin.pl options, just run docker run --rm pegi3s/maxbin2 run_MaxBin.pl. 'out_name' to the name of your output files."
    ],
    "test_invocation_specific": "",
    "test_data_url": "",
    "test_results_url": "",
    "icon": "",
    "input_data_type": [
      "contigfasta",
      "fastq1",
      "fastq2"
    ],
    "auto_tests": [
      {
        "docker_image": "pegi3s/maxbin2",
        "input_files": [],
        "output_dir": "",
        "output_file": "",
        "add_config": "",
        "commands": ""
      }
    ]
  },
  {
    "name": "megax",
    "description": "Phylogenetics inferences",
    "status": "Usable",
    "recommended": [
      {
        "version": "10.0.5",
        "date": "25/11/2024"
      }
    ],
    "latest": "10.0.5",
    "bug_found": [],
    "not_working": [],
    "no_longer_tested": [],
    "manual_url": "https://www.megasoftware.net/web_help_10/index.htm#t=First_Time_User.htm",
    "source_url": "https://www.megasoftware.net/",
    "comments": [],
    "gui": true,
    "gui_command": " ",
    "podman": "untested",
    "singularity": "untested",
    "invocation_general": "",
    "usual_invocation_specific": "",
    "usual_invocation_specific_comments": [],
    "test_invocation_specific": "",
    "test_data_url": "http://evolution6.i3s.up.pt/static/pegi3s/dockerfiles/input_test_data/CDS_aligned.fas",
    "test_results_url": "",
    "icon": "https://www.megasoftware.net/web_help_11/template/Charcoal_Grey/logo.png",
    "input_data_type": [],
    "auto_tests": [
      {
        "docker_image": "pegi3s/megax",
        "input_files": [],
        "output_dir": "",
        "output_file": "",
        "add_config": "",
        "commands": ""
      }
    ]
  },
  {
    "name": "megax_cc",
    "description": "Phylogenetics inferences",
    "status": "Usable",
    "recommended": [
      {
        "version": "10.0.5",
        "date": ""
      }
    ],
    "latest": "10.0.5",
    "bug_found": [],
    "not_working": [],
    "no_longer_tested": [],
    "manual_url": "https://www.megasoftware.net/web_help_10/index.htm#t=Quick_Start_Tutorial.htm",
    "source_url": "https://www.megasoftware.net/",
    "comments": [],
    "gui": false,
    "gui_command": "",
    "podman": "untested",
    "singularity": "untested",
    "invocation_general": "docker run --rm -v /your/data/dir:/data pegi3s/megax_cc",
    "usual_invocation_specific": " megacc -a /data/test/data/maoFile -d /data/test/data/meg_seq_alignFile -o /data/output",
    "usual_invocation_specific_comments": [],
    "test_invocation_specific": "",
    "test_data_url": "",
    "test_results_url": "",
    "icon": "https://www.megasoftware.net/web_help_11/template/Charcoal_Grey/logo.png",
    "input_data_type": [
      "mao",
      "meg_seq_align"
    ],
    "auto_tests": [
      {
        "docker_image": "pegi3s/megax_cc",
        "input_files": [],
        "output_dir": "",
        "output_file": "",
        "add_config": "",
        "commands": ""
      }
    ]
  },
  {
    "name": "metaeuk",
    "description": "Gene discovery and annotation",
    "status": "Usable",
    "recommended": [
      {
        "version": "41.0.0",
        "date": "25/11/2024"
      }
    ],
    "latest": "41.0.0",
    "bug_found": [],
    "not_working": [],
    "no_longer_tested": [],
    "manual_url": "https://github.com/soedinglab/metaeuk/blob/master/README.md",
    "source_url": "https://github.com/soedinglab/metaeuk",
    "comments": [],
    "gui": false,
    "gui_command": "",
    "podman": "untested",
    "singularity": "untested",
    "invocation_general": "docker run --rm -v /your/data/dir:/data pegi3s/metaeuk",
    "usual_invocation_specific": " bash -c \"metaeuk easy-predict /data/contigsFile /data/proteinFile predsResults tempfolder && mv /data/predsResults /data/output\"",
    "usual_invocation_specific_comments": [
      "'easy-predict' to the name of the module to be used. 'predsResults tempfolder' are module dependent options.",
      "The command is used to run the easy-predict workflow, that predicts proteins from contigs (fasta/db) based on similarities to targets (fasta/db) and returns FASTA and GFF files, using FASTA files as input."
    ],
    "test_invocation_specific": " bash -c \"metaeuk easy-predict /data/test/data/Drosophila_melanogaster_genome /data/test/data/protein_query.fasta predsResults tempfolder && mv /data/predsResults /data/test/results/metaeuk_test\"",
    "test_data_url": "http://evolution6.i3s.up.pt/static/pegi3s/dockerfiles/input_test_data/metaeuk.zip",
    "test_results_url": "http://evolution6.i3s.up.pt/static/pegi3s/dockerfiles/output_test_data/metaeuk_output.zip",
    "icon": "https://raw.githubusercontent.com/soedinglab/metaeuk/refs/heads/master/imgs/MetaEuk.png",
    "input_data_type": [
      "contigs",
      "protein"
    ],
    "auto_tests": [
      {
        "docker_image": "pegi3s/metaeuk",
        "input_files": [],
        "output_dir": "",
        "output_file": "",
        "add_config": "",
        "commands": ""
      }
    ]
  },
  {
    "name": "mrbayes",
    "description": "Phylogenetics inferences",
    "status": "Usable",
    "recommended": [
      {
        "version": "3.2.6",
        "date": ""
      }
    ],
    "latest": "3.2.6",
    "bug_found": [],
    "not_working": [],
    "no_longer_tested": [],
    "manual_url": "https://github.com/NBISweden/MrBayes/blob/develop/doc/manual/Manual_MrBayes_v3.2.pdf",
    "source_url": "https://github.com/NBISweden/MrBayes",
    "comments": [],
    "gui": false,
    "gui_command": "",
    "podman": "untested",
    "singularity": "untested",
    "invocation_general": "docker run --rm -v /your/data/dir:/data pegi3s/mrbayes",
    "usual_invocation_specific": " mb /data/nexusFile",
    "usual_invocation_specific_comments": [
      "Your output files will be created in the same directory as your input."
    ],
    "test_invocation_specific": " mb /data/test/data/nexus.nex",
    "test_data_url": "http://evolution6.i3s.up.pt/static/pegi3s/dockerfiles/input_test_data/nexus.nex",
    "test_results_url": "http://evolution6.i3s.up.pt/static/pegi3s/dockerfiles/output_test_data/mrbayes_output.zip",
    "icon": "https://raw.githubusercontent.com/NBISweden/MrBayes/refs/heads/gh-pages/img/bayes.jpg",
    "input_data_type": [
      "nexus"
    ],
    "auto_tests": [
      {
        "docker_image": "pegi3s/mrbayes",
        "input_files": [],
        "output_dir": "",
        "output_file": "",
        "add_config": "",
        "commands": ""
      }
    ]
  },
  {
    "name": "multiqc",
    "description": "Quality control reports",
    "status": "Usable",
    "recommended": [
      {
        "version": "1.14.0",
        "date": ""
      }
    ],
    "latest": "1.14.0",
    "bug_found": [],
    "not_working": [],
    "no_longer_tested": [],
    "manual_url": "https://multiqc.info/",
    "source_url": "https://github.com/MultiQC/MultiQC/",
    "comments": [],
    "gui": false,
    "gui_command": "",
    "podman": "untested",
    "singularity": "untested",
    "invocation_general": "docker run --rm -it -v /your/data/dir:/data pegi3s/multiqc",
    "usual_invocation_specific": "python3 /data/python_scriptFile",
    "usual_invocation_specific_comments": [
      "Use as input the file containing the script using MultiQC (i.e. containing import multiqc)"
    ],
    "test_invocation_specific": "",
    "test_data_url": "",
    "test_results_url": "",
    "icon": "https://raw.githubusercontent.com/MultiQC/MultiQC/main/multiqc/templates/default/assets/img/favicon-96x96.png",
    "input_data_type": [
      "python_script"
    ],
    "auto_tests": [
      {
        "docker_image": "pegi3s/multiqc",
        "input_files": [],
        "output_dir": "",
        "output_file": "",
        "add_config": "",
        "commands": ""
      }
    ]
  },
  {
    "name": "muscle",
    "description": "Sequence alignment",
    "status": "Usable",
    "recommended": [
      {
        "version": "3.8.31",
        "date": ""
      }
    ],
    "latest": "3.8.31",
    "bug_found": [],
    "not_working": [],
    "no_longer_tested": [],
    "manual_url": "https://www.drive5.com/muscle/",
    "source_url": "https://github.com/rcedgar/muscle",
    "comments": [],
    "gui": false,
    "gui_command": "",
    "podman": "untested",
    "singularity": "untested",
    "invocation_general": "docker run --rm -v /your/data/dir:/data pegi3s/muscle",
    "usual_invocation_specific": "-in /data/fastaFile -out /data/output/sequences_aligned.fasta",
    "usual_invocation_specific_comments": [],
    "test_invocation_specific": "-in /data/test/data/small_not_aligned.fas -out /data/test/results/muscle_test.fasta",
    "test_data_url": "http://evolution6.i3s.up.pt/static/pegi3s/dockerfiles/input_test_data/small_not_aligned.fas",
    "test_results_url": "http://evolution6.i3s.up.pt/static/pegi3s/dockerfiles/output_test_data/muscle_output.zip",
    "icon": "",
    "input_data_type": [
      "fasta"
    ],
    "auto_tests": [
      {
        "docker_image": "pegi3s/muscle:3.8.31",
        "input_files": [
          "small_not_aligned.fas"
        ],
        "output_dir": "muscle_output",
        "output_file": "sequences_aligned.fasta",
        "add_config": "",
        "commands": " -in /data/input_data/small_not_aligned.fas -out /data/output_folder/muscle_output/sequences_aligned.fasta > /dev/null 2>&1"
      }
    ]
  },
  {
    "name": "ncbi-datasets",
    "description": "NCBI databases download",
    "status": "Usable",
    "recommended": [
      {
        "version": "16.12.1",
        "date": ""
      }
    ],
    "latest": "16.12.1",
    "bug_found": [],
    "not_working": [],
    "no_longer_tested": [],
    "manual_url": "https://github.com/ncbi/datasets",
    "source_url": "https://github.com/ncbi/datasets",
    "comments": [],
    "gui": false,
    "gui_command": "",
    "podman": "untested",
    "singularity": "untested",
    "invocation_general": "docker run --rm -v /your/data/dir:/data pegi3s/ncbi-datasets",
    "usual_invocation_specific": " datasets download gene gene-id 672 --filename /data/output/out_name.zip",
    "usual_invocation_specific_comments": [
      "'datasets' can be changed to 'dataformat'. 'download gene' are specific arguments to the 'datasets' command. 'gene-id 672' can be changed to any gene name. Please see NCBI-datasets manual."
    ],
    "test_invocation_specific": " datasets download gene gene-id 672 --filename /data/test/results/ncbi_datasets.zip",
    "test_data_url": "http://evolution6.i3s.up.pt/static/pegi3s/dockerfiles/input_test_data/empty",
    "test_results_url": "http://evolution6.i3s.up.pt/static/pegi3s/dockerfiles/output_test_data/ncbi-datasets.zip",
    "icon": "",
    "input_data_type": [],
    "auto_tests": [
      {
        "docker_image": "pegi3s/ncbi-datasets",
        "input_files": [],
        "output_dir": "",
        "output_file": "",
        "add_config": "",
        "commands": ""
      }
    ]
  },
  {
    "name": "ncbi_retrieve",
    "description": "Sequence retrieval",
    "status": "Usable",
    "recommended": [
      {
        "version": "1.0.1",
        "date": ""
      }
    ],
    "latest": "1.0.1",
    "bug_found": [],
    "not_working": [],
    "no_longer_tested": [
      "1.0.0"
    ],
    "manual_url": "https://hub.docker.com/r/pegi3s/ncbi_retrieve/",
    "source_url": "https://github.com/pegi3s/dockerfiles/tree/master/ncbi_retrieve",
    "comments": [
      "The assembly option no longer works in versions prior to 1.0.1 due to changes in NCBI database structure"
    ],
    "gui": false,
    "gui_command": "",
    "podman": "untested",
    "singularity": "untested",
    "invocation_general": "docker run --rm -v /var/run/docker.sock:/var/run/docker.sock -v /your/data/dir:/data pegi3s/ncbi_retrieve",
    "usual_invocation_specific": " -db assembly -inc GENOME_FASTA -path /your/data/dir",
    "usual_invocation_specific_comments": [
      "'assembly' can be changed to the NCBI database 'nucleotide'. 'GENOME_FASTA' to the specific information that you want to download from the NCBI website (options: GENOME_GFF, RNA_FASTA, CDS_FASTA, PROT_FASTA, SEQUENCE_REPORT). This option is only available for the \u2018assembly\u2019 database type."
    ],
    "test_invocation_specific": "",
    "test_data_url": "",
    "test_results_url": "",
    "icon": "",
    "input_data_type": [],
    "auto_tests": [
      {
        "docker_image": "pegi3s/ncbi_retrieve",
        "input_files": [],
        "output_dir": "",
        "output_file": "",
        "add_config": "",
        "commands": ""
      }
    ]
  },
  {
    "name": "newick_utils",
    "description": "Newick Utilities",
    "status": "Usable",
    "recommended": [
      {
        "version": "1.6",
        "date": "25/11/2024"
      }
    ],
    "latest": "1.6",
    "bug_found": [],
    "not_working": [],
    "no_longer_tested": [],
    "manual_url": "https://gensoft.pasteur.fr/docs/newick-utils/1.6/nwutils_tutorial.pdf",
    "source_url": "https://github.com/tjunier/newick_utils",
    "comments": [],
    "gui": false,
    "gui_command": "",
    "podman": "untested",
    "singularity": "untested",
    "invocation_general": "docker run --rm -v /your/data/dir:/data pegi3s/newick_utils",
    "usual_invocation_specific": " bash -c \"nw_display -s /data/newickFile > /data/output/file_name.svg\"",
    "usual_invocation_specific_comments": [
      "'nw_display' to the Newick Utilities command you want to perform. 'file_name' to the name of the output file."
    ],
    "test_invocation_specific": " bash -c \"nw_display -s /data/test/data/newick.nwk > /data/test/results/newick_utils_test.svg\"",
    "test_data_url": "http://evolution6.i3s.up.pt/static/pegi3s/dockerfiles/input_test_data/newick.nwk",
    "test_results_url": "http://evolution6.i3s.up.pt/static/pegi3s/dockerfiles/output_test_data/newick_utils_output.zip",
    "icon": "",
    "input_data_type": [
      "newick"
    ],
    "auto_tests": [
      {
        "docker_image": "pegi3s/newick_utils:1.6",
        "input_files": [
          "newick.nwk"
        ],
        "output_dir": "newick_utils_output",
        "output_file": "tree.svg",
        "add_config": "",
        "commands": " bash -c \"nw_display -s /data/input_data/newick.nwk > /data/output_folder/newick_utils_output/tree.svg\"  > /dev/null 2>&1"
      }
    ]
  },
  {
    "name": "omegamap",
    "description": "Detection of positively selected sites",
    "status": "Usable",
    "recommended": [
      {
        "version": "2019.06.08",
        "date": "25/11/2024"
      }
    ],
    "latest": "2019.06.08",
    "bug_found": [],
    "not_working": [],
    "no_longer_tested": [],
    "manual_url": "https://github.com/danny-wilson/omegaMap/blob/master/Documentation/documentation.pdf",
    "source_url": "https://github.com/danny-wilson/omegaMap",
    "comments": [],
    "gui": false,
    "gui_command": "",
    "podman": "untested",
    "singularity": "untested",
    "invocation_general": "docker run --rm -v /your/data/dir:/data pegi3s/omegamap",
    "usual_invocation_specific": " analyze /data/fastaFile /data/output 25000",
    "usual_invocation_specific_comments": [
      "`25000` may be replaced with the actual number of iterations you want to perform."
    ],
    "test_invocation_specific": " analyze /data/test/data/CDS_aligned.fas /data/test/results/omegamap 25000",
    "test_data_url": "http://evolution6.i3s.up.pt/static/pegi3s/dockerfiles/input_test_data/CDS_aligned.fas",
    "test_results_url": "http://evolution6.i3s.up.pt/static/pegi3s/dockerfiles/output_test_data/omegamap_output.zip",
    "icon": "",
    "input_data_type": [
      "fasta"
    ],
    "auto_tests": [
      {
        "docker_image": "pegi3s/omegamap:2019.06.08",
        "input_files": [
          "CDS_aligned.fas"
        ],
        "output_dir": "omegamap_output",
        "output_file": "CDS_aligned.fas.summary",
        "add_config": "",
        "commands": " analyze /data/input_data/CDS_aligned.fas /data/output_folder/omegamap_output 25000  > /dev/null 2>&1"
      }
    ]
  },
  {
    "name": "paml",
    "description": "Detection of positively selected sites",
    "status": "Usable",
    "recommended": [
      {
        "version": "4.9j",
        "date": ""
      }
    ],
    "latest": "4.9j",
    "bug_found": [],
    "not_working": [],
    "no_longer_tested": [
      "4.9h",
      "4.9"
    ],
    "manual_url": "http://abacus.gene.ucl.ac.uk/software/pamlDOC.pdf",
    "source_url": "https://github.com/abacus-gene/paml",
    "comments": [],
    "gui": false,
    "gui_command": "",
    "podman": "untested",
    "singularity": "untested",
    "invocation_general": "docker run --rm -v /your/data/dir:/data pegi3s/paml",
    "usual_invocation_specific": " /data/controlFile",
    "usual_invocation_specific_comments": [
      "The default control files are baseml.ctl for baseml and basemlg, codeml.ctl for codeml, pamp.ctl for pamp, mcmctree.ctl for mcmctree. You must change these control files accordingly."
    ],
    "test_invocation_specific": "",
    "test_data_url": "",
    "test_results_url": "",
    "icon": "",
    "input_data_type": [
      "control"
    ],
    "auto_tests": [
      {
        "docker_image": "pegi3s/paml",
        "input_files": [],
        "output_dir": "",
        "output_file": "",
        "add_config": "",
        "commands": ""
      }
    ]
  },
  {
    "name": "pathvisio",
    "description": "Biological pathway editor",
    "status": "Usable",
    "recommended": [
      {
        "version": "3.3.0",
        "date": ""
      }
    ],
    "latest": "3.3.0",
    "bug_found": [],
    "not_working": [],
    "no_longer_tested": [],
    "manual_url": "https://pathvisio.org/tutorials/getting-started.html",
    "source_url": "https://github.com/PathVisio/pathvisio",
    "comments": [],
    "gui": true,
    "gui_command": "bash -c \"java -jar pathvisio.jar\"",
    "podman": "untested",
    "singularity": "untested",
    "invocation_general": "",
    "usual_invocation_specific": "",
    "usual_invocation_specific_comments": [],
    "test_invocation_specific": "",
    "test_data_url": "",
    "test_results_url": "",
    "icon": "https://avatars.githubusercontent.com/u/12032945?s=200&v=4",
    "input_data_type": [],
    "auto_tests": [
      {
        "docker_image": "pegi3s/pathvisio",
        "input_files": [],
        "output_dir": "",
        "output_file": "",
        "add_config": "",
        "commands": ""
      }
    ]
  },
  {
    "name": "pdb-tools",
    "description": "PDB handling tools",
    "status": "Usable",
    "recommended": [
      {
        "version": "2.4.1",
        "date": ""
      }
    ],
    "latest": "2.4.1",
    "bug_found": [],
    "not_working": [],
    "no_longer_tested": [],
    "manual_url": "https://github.com/haddocking/pdb-tools/blob/master/README.md",
    "source_url": "https://github.com/haddocking/pdb-tools",
    "comments": [],
    "gui": false,
    "gui_command": "",
    "podman": "untested",
    "singularity": "untested",
    "invocation_general": "docker run --rm -v /your/data/dir:/data pegi3s/pdb-tools",
    "usual_invocation_specific": " bash -c \"pdb_fetch 1brs > /data/output/out_name.pdb\"",
    "usual_invocation_specific_comments": [
      "Input files, if any, must be in the same directory that the config file used to run docknrun",
      "'pdb_fetch' to the PDB-tool you want to use. '1brs' is the name of the PDB struture that will be downloaded, declaring a PDB id may not be required for other PDB-tools. Please read PDB-tools manual."
    ],
    "test_invocation_specific": " bash -c \"pdb_fetch 1brs > /data/test/data/pdb_tools_test.pdb\"",
    "test_data_url": "http://evolution6.i3s.up.pt/static/pegi3s/dockerfiles/input_test_data/empty",
    "test_results_url": "http://evolution6.i3s.up.pt/static/pegi3s/dockerfiles/output_test_data/pdb-tools_output.zip",
    "icon": "https://raw.githubusercontent.com/haddocking/pdb-tools/master/docs/logo/pdb-tools.png",
    "input_data_type": [],
    "auto_tests": [
      {
        "docker_image": "pegi3s/pdb-tools",
        "input_files": [],
        "output_dir": "",
        "output_file": "",
        "add_config": "",
        "commands": ""
      }
    ]
  },
  {
    "name": "phipack",
    "description": "Recombination tests",
    "status": "Usable",
    "recommended": [
      {
        "version": "1.0.0",
        "date": "25/11/2024"
      }
    ],
    "latest": "1.0.0",
    "bug_found": [],
    "not_working": [],
    "no_longer_tested": [],
    "manual_url": "https://www.maths.otago.ac.nz/~dbryant/software/phimanual.pdf",
    "source_url": "https://www.maths.otago.ac.nz/~dbryant/software/PhiPack.tar.gz",
    "comments": [],
    "gui": false,
    "gui_command": "",
    "podman": "untested",
    "singularity": "untested",
    "invocation_general": "docker run --rm -v /your/data/dir:/data pegi3s/phipack",
    "usual_invocation_specific": " bash -c \"Phi -f /data/fastaFile -p 1000 -o > /data/output/out_name\"",
    "usual_invocation_specific_comments": [
      "'out_name' to the actual name of your output file."
    ],
    "test_invocation_specific": " bash -c \"Phi -f /data/test/data/CDS_aligned.fas -p 1000 -o > /data/test/results/phipack_test\"",
    "test_data_url": "http://evolution6.i3s.up.pt/static/pegi3s/dockerfiles/input_test_data/CDS_aligned.fas",
    "test_results_url": "http://evolution6.i3s.up.pt/static/pegi3s/dockerfiles/output_test_data/phipack_output.zip",
    "icon": "",
    "input_data_type": [
      "fasta"
    ],
    "auto_tests": [
      {
        "docker_image": "pegi3s/phipack:1.0.0",
        "input_files": [
          "CDS_aligned.fas"
        ],
        "output_dir": "phipack_output",
        "output_file": "output",
        "add_config": "",
        "commands": " bash -c \"Phi -f /data/input_data/CDS_aligned.fas -p 1000 -o > /data/output_folder/phipack_output/output\" > /dev/null 2>&1"
      }
    ]
  },
  {
    "name": "phylogenetic-tree-collapser",
    "description": "Phylogenetic trees handling",
    "status": "Usable",
    "recommended": [
      {
        "version": "1.3.0",
        "date": ""
      }
    ],
    "latest": "1.3.0",
    "bug_found": [],
    "not_working": [],
    "no_longer_tested": [
      "1.3.0-SNAPSHOT",
      "1.1.0",
      "1.0.3",
      "1.0.1",
      "0.0.1"
    ],
    "manual_url": "https://github.com/pegi3s/phylogenetic-tree-collapser",
    "source_url": "https://github.com/pegi3s/phylogenetic-tree-collapser",
    "comments": [],
    "gui": false,
    "gui_command": "",
    "podman": "untested",
    "singularity": "untested",
    "invocation_general": "docker run --rm -v ~/.ptc-cache:/ptc-cache -v /your/data/dir:/data pegi3s/phylogenetic-tree-collapser",
    "usual_invocation_specific": " collapse-tree.py --input /data/treeFile --input-format nexus --taxonomy-stop-terms /data/stop_termsFile --output /data/output/output-tree.nwk --output-type phylogram --output-collapsed-nodes /data/output/collapsed_nodes.tsv",
    "usual_invocation_specific_comments": [
      "'output-tree' and 'collapsed_nodes' can be changed to the names of your output files.",
      "If all sequence names in the input phylogenetic tree start with the species name (e.g. Drosophila_melanogaster_fruit_fly_Drosophilidae_AAN09306.2), then the sequence mapping and taxonomy files are optional (--sequence-mapping /data/sequence_to_species_mappingFile --taxonomy /data/taxonomyFile).",
      "The taxonomy stop terms file is also optional. If not provided, the script will use as stop terms a list of predefined family names. This file can be shown with the following command: docker run --rm pegi3s/phylogenetic-tree-collapser cat /opt/tree-collapser/data/family_names_only."
    ],
    "test_invocation_specific": "",
    "test_data_url": "",
    "test_results_url": "",
    "icon": "",
    "input_data_type": [
      "tree",
      "stop_terms"
    ],
    "auto_tests": [
      {
        "docker_image": "pegi3s/phylogenetic-tree-collapser",
        "input_files": [],
        "output_dir": "",
        "output_file": "",
        "add_config": "",
        "commands": ""
      }
    ]
  },
  {
    "name": "picard",
    "description": "Genomic tools",
    "status": "Usable",
    "recommended": [
      {
        "version": "2.21.5",
        "date": ""
      }
    ],
    "latest": "2.21.5",
    "bug_found": [],
    "not_working": [],
    "no_longer_tested": [],
    "manual_url": "https://broadinstitute.github.io/picard/command-line-overview.html",
    "source_url": "https://github.com/broadinstitute/picard",
    "comments": [],
    "gui": false,
    "gui_command": "",
    "podman": "untested",
    "singularity": "untested",
    "invocation_general": "docker run --rm -v /your/data/dir:/data pegi3s/picard",
    "usual_invocation_specific": " CleanSam -I /data/SAM_BAM_CRAM_VCFFile -O /data/output/out_name",
    "usual_invocation_specific_comments": [
      "'CleanSam' can be changed to other Picard applications (see docker run --rm pegi3s/picard -h). 'out_name' to the name of your output file.",
      "If other applications are used, please maintain this command structure: <picard-application-name> <options>, where <options> will include the input/output files, which should be referenced under /data/."
    ],
    "test_invocation_specific": " CleanSam -I /data/test/data/SAM.sam -O /data/test/results/picard_test",
    "test_data_url": "http://evolution6.i3s.up.pt/static/pegi3s/dockerfiles/input_test_data/SAM.sam",
    "test_results_url": "http://evolution6.i3s.up.pt/static/pegi3s/dockerfiles/output_test_data/picard_output.zip",
    "icon": "",
    "input_data_type": [
      "SAM_BAM_CRAM_VCF"
    ],
    "auto_tests": [
      {
        "docker_image": "pegi3s/picard:2.21.5",
        "input_files": [
          "SAM.sam"
        ],
        "output_dir": "picard_output",
        "output_file": "cleaned.sam",
        "add_config": "",
        "commands": " CleanSam -I /data/input_data/SAM.sam -O /data/output_folder/picard_output/cleaned.sam > /dev/null 2>&1"
      }
    ]
  },
  {
    "name": "pilzerd",
    "description": "Protein-protein docking",
    "status": "Usable",
    "recommended": [
      {
        "version": "09.06.2022",
        "date": ""
      }
    ],
    "latest": "09.06.2022",
    "bug_found": [],
    "not_working": [],
    "no_longer_tested": [],
    "manual_url": "https://kiharalab.org/proteindocking/pilzerd.php",
    "source_url": "https://kiharalab.org/proteindocking/pilzerd.php",
    "comments": [],
    "gui": false,
    "gui_command": "",
    "podman": "untested",
    "singularity": "untested",
    "invocation_general": "docker run --rm -v \"/your/data/dir:/data\" pegi3s/pilzerd",
    "usual_invocation_specific": "bash -c \"cd /opt/lzerddistribution && runlzerd.sh /data/PDB1File /data/PDB2File && cp ./*.pdb /data/output\"",
    "usual_invocation_specific_comments": [],
    "test_invocation_specific": "",
    "test_data_url": "",
    "test_results_url": "",
    "icon": "",
    "input_data_type": [
      "PDB1",
      "PDB2"
    ],
    "auto_tests": [
      {
        "docker_image": "pegi3s/pilzerd",
        "input_files": [],
        "output_dir": "",
        "output_file": "",
        "add_config": "",
        "commands": ""
      }
    ]
  },
  {
    "name": "plasflow",
    "description": "Plasmid prediction",
    "status": "Usable",
    "recommended": [
      {
        "version": "1.1.0",
        "date": "25/11/2024"
      }
    ],
    "latest": "1.1.0",
    "bug_found": [],
    "not_working": [],
    "no_longer_tested": [],
    "manual_url": "https://github.com/smaegol/PlasFlow/blob/master/README.md",
    "source_url": "https://github.com/smaegol/PlasFlow",
    "comments": [],
    "gui": false,
    "gui_command": "",
    "podman": "untested",
    "singularity": "untested",
    "invocation_general": "docker run --rm -v /your/data/dir:/data pegi3s/plasflow",
    "usual_invocation_specific": " PlasFlow.py --input /data/fastaFile --output /data/output/output --threshold 0.7",
    "usual_invocation_specific_comments": [
      "The default value for the threshold value is 0.7 but this can be changed by replacing 0.7 by another number"
    ],
    "test_invocation_specific": " PlasFlow.py --input /data/test/data/Citrobacter_freundii_strain_CAV1321_scaffolds.fas --output /data/test/results/plasflow_test --threshold 0.7",
    "test_data_url": "http://evolution6.i3s.up.pt/static/pegi3s/dockerfiles/input_test_data/Citrobacter_freundii_strain_CAV1321_scaffolds.fas",
    "test_results_url": "http://evolution6.i3s.up.pt/static/pegi3s/dockerfiles/output_test_data/plasflow_output.zip",
    "icon": "",
    "input_data_type": [
      "fasta"
    ],
    "auto_tests": [
      {
        "docker_image": "pegi3s/plasflow:1.1.0",
        "input_files": [
          "Citrobacter_freundii_strain_CAV1321_scaffolds.fas"
        ],
        "output_dir": "plasflow_output",
        "output_file": "plasflow_predictions.tsv",
        "add_config": "",
        "commands": " PlasFlow.py --input /data/input_data/Citrobacter_freundii_strain_CAV1321_scaffolds.fas --output /data/output_folder/plasflow_output/plasflow_predictions.tsv --threshold 0.7 > /dev/null 2>&1"
      }
    ]
  },
  {
    "name": "plottree",
    "description": "Tree drawing",
    "status": "Usable",
    "recommended": [
      {
        "version": "0.0.2",
        "date": "25/11/2024"
      }
    ],
    "latest": "0.0.2",
    "bug_found": [],
    "not_working": [],
    "no_longer_tested": [],
    "manual_url": "https://github.com/iBiology/plottree",
    "source_url": "https://github.com/iBiology/plottree",
    "comments": [],
    "gui": false,
    "gui_command": "",
    "podman": "untested",
    "singularity": "untested",
    "invocation_general": "docker run --rm -v /your/data/dir:/data pegi3s/plottree",
    "usual_invocation_specific": " bash -c \"plottree -s 20 -w 20 -l 15 /data/newickFile -o /data/output/out_name\"",
    "usual_invocation_specific_comments": [
      "The plottree arguments (fontsize (-s), width (-w), and height (-l)) can be changed to suit your needs. You may also change 'out_name' to the desired name of your output file."
    ],
    "test_invocation_specific": " bash -c \"plottree -s 20 -w 20 -l 15 /data/test/data/newick.nwk -o /data/test/results/plottree_test\"",
    "test_data_url": "http://evolution6.i3s.up.pt/static/pegi3s/dockerfiles/input_test_data/newick.nwk",
    "test_results_url": "http://evolution6.i3s.up.pt/static/pegi3s/dockerfiles/output_test_data/plottree_output.zip",
    "icon": "",
    "input_data_type": [
      "newick"
    ],
    "auto_tests": [
      {
        "docker_image": "pegi3s/plottree:0.0.2",
        "input_files": [
          "newick.nwk"
        ],
        "output_dir": "plottree_output",
        "output_file": "output.png",
        "add_config": "",
        "commands": " bash -c \"plottree -s 20 -w 20 -l 15 /data/input_data/newick.nwk -o /data/output_folder/plottree_output/output\" > /dev/null 2>&1"
      }
    ]
  },
  {
    "name": "popart",
    "description": "Population genetics software",
    "status": "Usable",
    "recommended": [
      {
        "version": "1.7",
        "date": "25/11/2024"
      }
    ],
    "latest": "1.7",
    "bug_found": [],
    "not_working": [],
    "no_longer_tested": [],
    "manual_url": "https://popart.maths.otago.ac.nz/documentation/",
    "source_url": "https://github.com/jessicawleigh/popart",
    "comments": [],
    "gui": true,
    "gui_command": " ",
    "podman": "untested",
    "singularity": "untested",
    "invocation_general": "",
    "usual_invocation_specific": "",
    "usual_invocation_specific_comments": [],
    "test_invocation_specific": "",
    "test_data_url": "http://evolution6.i3s.up.pt/static/pegi3s/dockerfiles/input_test_data/CDS_aligned.fas",
    "test_results_url": "",
    "icon": "",
    "input_data_type": [],
    "auto_tests": [
      {
        "docker_image": "pegi3s/popart",
        "input_files": [],
        "output_dir": "",
        "output_file": "",
        "add_config": "",
        "commands": ""
      }
    ]
  },
  {
    "name": "probcons",
    "description": "Sequence alignment",
    "status": "Usable",
    "recommended": [
      {
        "version": "1.12",
        "date": "25/11/2024"
      }
    ],
    "latest": "1.12",
    "bug_found": [],
    "not_working": [],
    "no_longer_tested": [],
    "manual_url": "http://probcons.stanford.edu/help.html",
    "source_url": "http://probcons.stanford.edu",
    "comments": [],
    "gui": false,
    "gui_command": "",
    "podman": "untested",
    "singularity": "untested",
    "invocation_general": "docker run --rm -v /your/data/dir:/data pegi3s/probcons",
    "usual_invocation_specific": " bash -c \"probcons /data/fastaFile > /data/output/out_name.fasta\"",
    "usual_invocation_specific_comments": [
      "'out_name.fasta' may be changed to the output desired name"
    ],
    "test_invocation_specific": " bash -c \"probcons /data/test/data/4_proteins.fas > /data/test/results/probcons_test.fasta\"",
    "test_data_url": "http://evolution6.i3s.up.pt/static/pegi3s/dockerfiles/input_test_data/4_proteins.fas",
    "test_results_url": "http://evolution6.i3s.up.pt/static/pegi3s/dockerfiles/output_test_data/probcons_output.zip",
    "icon": "",
    "input_data_type": [
      "fasta"
    ],
    "auto_tests": [
      {
        "docker_image": "pegi3s/probcons:1.12",
        "input_files": [
          "4_proteins.fas"
        ],
        "output_dir": "probcons_output",
        "output_file": "sequences_aligned.fasta",
        "add_config": "",
        "commands": " bash -c \"probcons /data/input_data/4_proteins.fas > /data/output_folder/probcons_output/sequences_aligned.fasta\" > /dev/null 2>&1"
      }
    ]
  },
  {
    "name": "probcons_nuc",
    "description": "Sequence alignment",
    "status": "Usable",
    "recommended": [
      {
        "version": "1.1",
        "date": ""
      }
    ],
    "latest": "1.1",
    "bug_found": [],
    "not_working": [],
    "no_longer_tested": [],
    "manual_url": "http://probcons.stanford.edu/help.html",
    "source_url": "http://probcons.stanford.edu",
    "comments": [],
    "gui": false,
    "gui_command": "",
    "podman": "untested",
    "singularity": "untested",
    "invocation_general": "docker run --rm -v /your/data/dir:/data pegi3s/probcons_nuc",
    "usual_invocation_specific": " bash -c \"probcons /data/fastaFile > /data/output/out_name.fasta\"",
    "usual_invocation_specific_comments": [
      "'out_name' to your output file name."
    ],
    "test_invocation_specific": " bash -c \"probcons /data/test/data/small_not_aligned.fas > /data/test/results/probcons_nuc_test.fasta\"",
    "test_data_url": "http://evolution6.i3s.up.pt/static/pegi3s/dockerfiles/input_test_data/small_not_aligned.fas",
    "test_results_url": "http://evolution6.i3s.up.pt/static/pegi3s/dockerfiles/output_test_data/probcons_nuc_output.zip",
    "icon": "",
    "input_data_type": [
      "fasta"
    ],
    "auto_tests": [
      {
        "docker_image": "pegi3s/probcons_nuc:1.1",
        "input_files": [
          "small_not_aligned.fas"
        ],
        "output_dir": "probcons_nuc_output",
        "output_file": "sequences_aligned.fasta",
        "add_config": "",
        "commands": " bash -c \"probcons /data/input_data/small_not_aligned.fas > /data/output_folder/probcons_nuc_output/sequences_aligned.fasta\" > /dev/null 2>&1"
      }
    ]
  },
  {
    "name": "prokka",
    "description": "Genome annotation",
    "status": "Usable",
    "recommended": [
      {
        "version": "1.14.6",
        "date": ""
      }
    ],
    "latest": "1.14.6",
    "bug_found": [],
    "not_working": [],
    "no_longer_tested": [],
    "manual_url": "https://github.com/tseemann/prokka",
    "source_url": "https://github.com/tseemann/prokka",
    "comments": [],
    "gui": false,
    "gui_command": "",
    "podman": "untested",
    "singularity": "untested",
    "invocation_general": "docker run --rm -v /your/data/dir:/data -w /data pegi3s/prokka",
    "usual_invocation_specific": " prokka /data/fastaFile --outdir /data/output --genus 'Genus'",
    "usual_invocation_specific_comments": [
      "To see the prokka help, just run docker run --rm pegi3s/prokka prokka --help.",
      "'genus' can be changed to other prokka commands. 'Genus' can be changed to any name."
    ],
    "test_invocation_specific": " prokka /data/test/data/GCF_000858285.1.fa --outdir /data/test/results/prokka_test --genus 'Genus'",
    "test_data_url": "http://evolution6.i3s.up.pt/static/pegi3s/dockerfiles/input_test_data/GCF_000858285.1.fa",
    "test_results_url": "http://evolution6.i3s.up.pt/static/pegi3s/dockerfiles/output_test_data/prokka_output.zip",
    "icon": "",
    "input_data_type": [
      "fasta"
    ],
    "auto_tests": [
      {
        "docker_image": "pegi3s/prokka",
        "input_files": [],
        "output_dir": "",
        "output_file": "",
        "add_config": "",
        "commands": ""
      }
    ]
  },
  {
    "name": "pss-3d",
    "description": "Positively selected sites viewer",
    "status": "Usable",
    "recommended": [
      {
        "version": "1.0.0",
        "date": ""
      }
    ],
    "latest": "1.0.0",
    "bug_found": [],
    "not_working": [],
    "no_longer_tested": [],
    "manual_url": "https://hub.docker.com/r/pegi3s/pss-3d",
    "source_url": "https://github.com/pegi3s/dockerfiles/tree/master/pss-3d",
    "comments": [],
    "gui": false,
    "gui_command": "",
    "podman": "untested",
    "singularity": "untested",
    "invocation_general": "docker run --rm -v /your/data/dir:/data pegi3s/pss-3d",
    "usual_invocation_specific": "sh -c \"map /data/pdbFile /data/pssFile /data/backgroundFile && mv /data/mapped* /data/output\"",
    "usual_invocation_specific_comments": [],
    "test_invocation_specific": "",
    "test_data_url": "",
    "test_results_url": "",
    "icon": "",
    "input_data_type": [
      "pdb",
      "pss",
      "background"
    ],
    "auto_tests": [
      {
        "docker_image": "pegi3s/pss-3d",
        "input_files": [],
        "output_dir": "",
        "output_file": "",
        "add_config": "",
        "commands": ""
      }
    ]
  },
  {
    "name": "pycision",
    "description": "Primer trimming tool",
    "status": "Usable",
    "recommended": [
      {
        "version": "0.0.1",
        "date": ""
      }
    ],
    "latest": "0.0.1",
    "bug_found": [],
    "not_working": [],
    "no_longer_tested": [],
    "manual_url": "https://github.com/Ahhgust/Pycision/blob/master/README.md",
    "source_url": "https://github.com/Ahhgust/Pycision",
    "comments": [],
    "gui": false,
    "gui_command": "",
    "podman": "untested",
    "singularity": "untested",
    "invocation_general": "docker run --rm -v /your/data/dir:/data pegi3s/pycision",
    "usual_invocation_specific": "  /data/bedFile /data/bamFile",
    "usual_invocation_specific_comments": [],
    "test_invocation_specific": "",
    "test_data_url": "",
    "test_results_url": "",
    "icon": "",
    "input_data_type": [
      "bed",
      "bam"
    ],
    "auto_tests": [
      {
        "docker_image": "pegi3s/pycision",
        "input_files": [],
        "output_dir": "",
        "output_file": "",
        "add_config": "",
        "commands": ""
      }
    ]
  },
  {
    "name": "pymol",
    "description": "3D protein structure",
    "status": "Usable",
    "recommended": [
      {
        "version": "2.3.0",
        "date": "25/11/2024"
      }
    ],
    "latest": "2.3.0",
    "bug_found": [],
    "not_working": [],
    "no_longer_tested": [
      "1.8.4.0"
    ],
    "manual_url": "https://pymolwiki.org/index.php/Main_Page",
    "source_url": "https://github.com/schrodinger/pymol-open-source",
    "comments": [],
    "gui": true,
    "gui_command": "pymol",
    "podman": "untested",
    "singularity": "untested",
    "invocation_general": "",
    "usual_invocation_specific": "",
    "usual_invocation_specific_comments": [],
    "test_invocation_specific": "",
    "test_data_url": "http://evolution6.i3s.up.pt/static/pegi3s/dockerfiles/input_test_data/8qnc.pdb",
    "test_results_url": "",
    "icon": "https://raw.githubusercontent.com/schrodinger/pymol-open-source/master/data/pymol/icons/icon2.svg",
    "input_data_type": [],
    "auto_tests": [
      {
        "docker_image": "pegi3s/pymol",
        "input_files": [],
        "output_dir": "",
        "output_file": "",
        "add_config": "",
        "commands": ""
      }
    ]
  },
  {
    "name": "qualimap",
    "description": "Sequence read quality assessment",
    "status": "Usable",
    "recommended": [
      {
        "version": "2.2.1",
        "date": ""
      }
    ],
    "latest": "2.2.1",
    "bug_found": [],
    "not_working": [],
    "no_longer_tested": [
      "2.2.1_ubuntu19.01"
    ],
    "manual_url": "http://qualimap.conesalab.org/",
    "source_url": "https://bitbucket.org/kokonech/qualimap/src/master/",
    "comments": [],
    "gui": true,
    "gui_command": "qualimap",
    "podman": "untested",
    "singularity": "untested",
    "invocation_general": "docker run --rm -v /your/data/dir:/data pegi3s/qualimap",
    "usual_invocation_specific": " qualimap bamqc -bam /data/bamFile -c -nw 400 -hm 3",
    "usual_invocation_specific_comments": [
      "'bamqc' can be changed to other qualimap tools (e.g. counts, rnaseq, etc).",
      "This command uses 400 windows and size of a homopolymer = 3, these parameters can be changed.",
      "Output files will appear in the same directory as your input files."
    ],
    "test_invocation_specific": " qualimap bamqc -bam /data/test/data/test.bam -c -nw 400 -hm 3",
    "test_data_url": "",
    "test_results_url": "",
    "icon": "",
    "input_data_type": [
      "bam"
    ],
    "auto_tests": [
      {
        "docker_image": "pegi3s/qualimap",
        "input_files": [],
        "output_dir": "",
        "output_file": "",
        "add_config": "",
        "commands": ""
      }
    ]
  },
  {
    "name": "r_data-analysis",
    "description": "R image with common data analysis libraries such as caret, dplyr, ggplot2, etc.",
    "status": "Usable",
    "recommended": [
      {
        "version": "4.1.1_v3",
        "date": "25/11/2024"
      }
    ],
    "latest": "4.1.1_v3",
    "bug_found": [],
    "not_working": [],
    "no_longer_tested": [
      "4.1.1_v2",
      "4.1.1_v1"
    ],
    "manual_url": "https://github.com/pegi3s/dockerfiles/blob/master/r_data-analysis",
    "comments": [
      "You must provide an R script File that ends with .R. See the test data for inspiration."
    ],
    "gui": false,
    "gui_command": "",
    "podman": "untested",
    "singularity": "untested",
    "invocation_general": "docker run --rm -it -v /your/data/dir:/data pegi3s/r_data-analysis",
    "usual_invocation_specific": " Rscript /data/R_scriptFile",
    "usual_invocation_specific_comments": [],
    "test_invocation_specific": " Rscript /data/test/data/r_data-analysis_script.R",
    "test_data_url": "http://evolution6.i3s.up.pt/static/pegi3s/dockerfiles/input_test_data/r_data-analysis_script.R",
    "test_results_url": "http://evolution6.i3s.up.pt/static/pegi3s/dockerfiles/output_test_data/r_data-analysis_output.zip",
    "icon": "https://www.r-project.org/logo/Rlogo.svg",
    "input_data_type": [
      "R-script"
    ],
    "auto_tests": [
      {
        "docker_image": "pegi3s/r_data-analysis",
        "input_files": [],
        "output_dir": "",
        "output_file": "",
        "add_config": "",
        "commands": ""
      }
    ]
  },
  {
    "name": "r_deseq2",
    "description": "Differential gene expression analysis",
    "status": "Usable",
    "recommended": [
      {
        "version": "1.32.0_v2",
        "date": ""
      }
    ],
    "latest": "1.32.0_v2",
    "bug_found": [],
    "not_working": [],
    "no_longer_tested": [
      "1.32.0_v1",
      "1.32.0"
    ],
    "manual_url": "https://www.bioconductor.org/packages/release/bioc/html/DESeq2.html",
    "source_url": "https://bioconductor.org/packages/release/bioc/html/DESeq2.html",
    "comments": [
      "You must provide an R script File that ends with .R. See the test data for inspiration."
    ],
    "gui": false,
    "gui_command": "",
    "podman": "untested",
    "singularity": "untested",
    "invocation_general": "docker run --rm -it -v /your/data/dir:/data pegi3s/r_deseq2",
    "usual_invocation_specific": "bash -c \"Rscript /data/script_rFile > /data/out_name && /data/out_name /data/output\"",
    "usual_invocation_specific_comments": [
      "'out_name' to the name of the output file (replace twice)."
    ],
    "test_invocation_specific": "",
    "test_data_url": "",
    "test_results_url": "",
    "icon": "",
    "input_data_type": [
      "script_r"
    ],
    "auto_tests": [
      {
        "docker_image": "pegi3s/r_deseq2",
        "input_files": [],
        "output_dir": "",
        "output_file": "",
        "add_config": "",
        "commands": ""
      }
    ]
  },
  {
    "name": "r_edger",
    "description": "Differential gene expression analysis",
    "status": "Usable",
    "recommended": [
      {
        "version": "4.0.16",
        "date": "25/11/2024"
      }
    ],
    "latest": "4.0.16",
    "bug_found": [],
    "not_working": [],
    "no_longer_tested": [
      "3.36.0"
    ],
    "manual_url": "https://www.bioconductor.org/packages/release/bioc/html/edgeR.html",
    "source_url": "https://bioconductor.org/packages/release/bioc/html/edgeR.html",
    "comments": [
      "You must provide an R script File that ends with .R. See the test data for inspiration."
    ],
    "gui": false,
    "gui_command": "",
    "podman": "untested",
    "singularity": "untested",
    "invocation_general": "docker run --rm -it -v /your/data/dir:/data pegi3s/r_edger",
    "usual_invocation_specific": " bash -c \"Rscript /data/R_scriptFile > /data/out_name && /data/out_name /data/output\"",
    "usual_invocation_specific_comments": [
      "'out_name' to the name of the output file (replace twice)."
    ],
    "test_invocation_specific": " bash -c \"Rscript /data/test/data/r_edger.R > /data/r_edger_test && /data/r_edger_test /data/test/results/r_edger_test\"",
    "test_data_url": "http://evolution6.i3s.up.pt/static/pegi3s/dockerfiles/input_test_data/r_edger.R",
    "test_results_url": "http://evolution6.i3s.up.pt/static/pegi3s/dockerfiles/output_test_data/r_edger_output.zip",
    "icon": "",
    "input_data_type": [
      "R-script"
    ],
    "auto_tests": [
      {
        "docker_image": "pegi3s/r_edger",
        "input_files": [],
        "output_dir": "",
        "output_file": "",
        "add_config": "",
        "commands": ""
      }
    ]
  },
  {
    "name": "r_enhanced-volcano",
    "description": "Creation of Vulcano plots",
    "status": "Usable",
    "recommended": [
      {
        "version": "1.12.0",
        "date": "25/11/2024"
      }
    ],
    "latest": "1.12.0",
    "bug_found": [],
    "not_working": [],
    "no_longer_tested": [],
    "manual_url": "https://www.bioconductor.org/packages/release/bioc/html/EnhancedVolcano.html",
    "source_url": "https://bioconductor.org/packages/release/bioc/html/EnhancedVolcano.html",
    "comments": [
      "You must provide an R script File that ends with .R. See the test data for inspiration."
    ],
    "gui": false,
    "gui_command": "",
    "podman": "untested",
    "singularity": "untested",
    "invocation_general": "docker run --rm -it -v /your/data/dir:/data pegi3s/r_enhanced-volcano",
    "usual_invocation_specific": " Rscript /data/R_scriptFile",
    "usual_invocation_specific_comments": [],
    "test_invocation_specific": " Rscript /data/test/data/r_enhanced-volcano.R",
    "test_data_url": "http://evolution6.i3s.up.pt/static/pegi3s/dockerfiles/input_test_data/r_enhanced-volcano.R",
    "test_results_url": "http://evolution6.i3s.up.pt/static/pegi3s/dockerfiles/output_test_data/r_enhanced-volcano_output.zip",
    "icon": "",
    "input_data_type": [
      "R-script"
    ],
    "auto_tests": [
      {
        "docker_image": "pegi3s/r_enhanced-volcano",
        "input_files": [],
        "output_dir": "",
        "output_file": "",
        "add_config": "",
        "commands": ""
      }
    ]
  },
  {
    "name": "r_network",
    "description": "R image with data analysis libraries for network analysis, built on top of r_data-analysis.",
    "status": "Usable",
    "recommended": [
      {
        "version": "4.1.1_v2_v3",
        "date": "25/11/2024"
      }
    ],
    "latest": "4.1.1_v2_v3",
    "bug_found": [],
    "not_working": [],
    "no_longer_tested": [
      "4.1.1_v2_v1",
      "4.1.1_v2_v2",
      "4.1.1_v2"
    ],
    "manual_url": "https://github.com/pegi3s/dockerfiles/blob/master/r_network/README.md",
    "comments": [
      "You must provide an R script File that ends with .R. See the test data for inspiration."
    ],
    "gui": false,
    "gui_command": "",
    "podman": "untested",
    "singularity": "untested",
    "invocation_general": "docker run --rm -it -v /your/data/dir:/data pegi3s/r_network",
    "usual_invocation_specific": " Rscript /data/R_scriptFile",
    "usual_invocation_specific_comments": [],
    "test_invocation_specific": " Rscript /data/test/data/r_network.R",
    "test_data_url": "http://evolution6.i3s.up.pt/static/pegi3s/dockerfiles/input_test_data/r_network.R",
    "test_results_url": "http://evolution6.i3s.up.pt/static/pegi3s/dockerfiles/output_test_data/r_network_output.zip",
    "icon": "https://www.r-project.org/logo/Rlogo.svg",
    "input_data_type": [
      "R-script"
    ],
    "auto_tests": [
      {
        "docker_image": "pegi3s/r_network",
        "input_files": [],
        "output_dir": "",
        "output_file": "",
        "add_config": "",
        "commands": ""
      }
    ]
  },
  {
    "name": "r_venn-diagram",
    "description": "Creation of Venn and Euler plots",
    "status": "Usable",
    "recommended": [
      {
        "version": "1.7.0",
        "date": "25/11/2024"
      }
    ],
    "latest": "1.7.0",
    "bug_found": [],
    "not_working": [],
    "no_longer_tested": [],
    "manual_url": "https://r-graph-gallery.com/14-venn-diagramm.html",
    "source_url": "https://cran.r-project.org/web/packages/VennDiagram/index.html",
    "comments": [
      "You must provide an R script File that ends with .R. See the test data for inspiration."
    ],
    "gui": false,
    "gui_command": "",
    "podman": "untested",
    "singularity": "untested",
    "invocation_general": "docker run --rm -it -v /your/data/dir:/data pegi3s/r_venn-diagram",
    "usual_invocation_specific": " bash -c \"Rscript /data/R_scriptFile && mv /data/*.png* /data/output\"",
    "usual_invocation_specific_comments": [
      "Your output files will be generated in the same directory as the config file for docknrun,"
    ],
    "test_invocation_specific": " bash -c \"Rscript /data/test/data/r_venn_diagram.R && mv /data/*.png* /data/test/results/r_venn-diagram_test\"",
    "test_data_url": "http://evolution6.i3s.up.pt/static/pegi3s/dockerfiles/input_test_data/r_venn_diagram.R",
    "test_results_url": "http://evolution6.i3s.up.pt/static/pegi3s/dockerfiles/output_test_data/r_venn-diagram_output.zip",
    "icon": "",
    "input_data_type": [
      "R-script"
    ],
    "auto_tests": [
      {
        "docker_image": "pegi3s/r_venn-diagram",
        "input_files": [],
        "output_dir": "",
        "output_file": "",
        "add_config": "",
        "commands": ""
      }
    ]
  },
  {
    "name": "raxml",
    "description": "Phylogenetics inferences",
    "status": "Usable",
    "recommended": [
      {
        "version": "8.2.12",
        "date": "25/11/2024"
      }
    ],
    "latest": "8.2.12",
    "bug_found": [],
    "not_working": [],
    "no_longer_tested": [],
    "manual_url": "https://cme.h-its.org/exelixis/resource/download/NewManual.pdf",
    "source_url": "https://github.com/stamatak/standard-RAxML",
    "comments": [],
    "gui": false,
    "gui_command": "",
    "podman": "untested",
    "singularity": "untested",
    "invocation_general": "docker run --rm -v /your/data/dir:/data pegi3s/raxml",
    "usual_invocation_specific": " raxmlHPC -m BINGAMMA -p 12345 -s /data/binaryFile -n T1 -w /data/output",
    "usual_invocation_specific_comments": [
      "'-m' to specify the desired model, and -p to use a fixed seed number"
    ],
    "test_invocation_specific": " raxmlHPC -m BINGAMMA -p 12345 -s /data/test/data/binary.phy -n T1 -w /data/test/results/raxml_test",
    "test_data_url": "http://evolution6.i3s.up.pt/static/pegi3s/dockerfiles/input_test_data/binary.phy",
    "test_results_url": "http://evolution6.i3s.up.pt/static/pegi3s/dockerfiles/output_test_data/raxml_output.zip",
    "icon": "",
    "input_data_type": [
      "binary"
    ],
    "auto_tests": [
      {
        "docker_image": "pegi3s/raxml:8.2.12",
        "input_files": [
          "binary.phy"
        ],
        "output_dir": "raxml_output",
        "output_file": "RAxML_bestTree.T1",
        "add_config": "",
        "commands": " raxmlHPC -m BINGAMMA -p 12345 -s /data/input_data/binary.phy -n T1 -w /data/output_folder/raxml_output > /dev/null 2>&1"
      }
    ]
  },
  {
    "name": "recombine",
    "description": "Recombination inferences",
    "status": "Usable",
    "recommended": [
      {
        "version": "1.0.0",
        "date": "25/11/2024"
      }
    ],
    "latest": "1.0.0",
    "bug_found": [],
    "not_working": [],
    "no_longer_tested": [],
    "manual_url": "https://hub.docker.com/r/pegi3s/recombine/",
    "source_url": "https://github.com/pegi3s/dockerfiles/tree/master/recombine",
    "comments": [],
    "gui": false,
    "gui_command": "",
    "podman": "untested",
    "singularity": "untested",
    "invocation_general": "docker run --rm -v /your/data/dir:/data pegi3s/recombine",
    "usual_invocation_specific": " bash -c \"/app/recombine all /data/fastaFile /data/configFile /data/ptableFile\"",
    "usual_invocation_specific_comments": [
      "Using the recombine image in Linux In order to use the methods implemented in OpenRDP, a config file is needed. A standard config file can be generated with the command: bash -c \"/app/recombine config_1\".",
      "In order to use the 3SEQ approach, a ptable is needed. It can be generated with the following command: bash -c \"/app/recombine ptable size name\"."
    ],
    "test_invocation_specific": "",
    "test_data_url": "http://evolution6.i3s.up.pt/static/pegi3s/dockerfiles/input_test_data/CDS_aligned.fas",
    "test_results_url": "http://evolution6.i3s.up.pt/static/pegi3s/dockerfiles/output_test_data/recombine_output.zip",
    "icon": "",
    "input_data_type": [
      "fasta",
      "config",
      "ptable"
    ],
    "auto_tests": [
      {
        "docker_image": "pegi3s/recombine",
        "input_files": [],
        "output_dir": "",
        "output_file": "",
        "add_config": "",
        "commands": ""
      }
    ]
  },
  {
    "name": "repeat_masker",
    "description": "Repetitive DNA",
    "status": "Usable",
    "recommended": [
      {
        "version": "4.0.9",
        "date": "25/11/2024"
      }
    ],
    "latest": "4.0.9",
    "bug_found": [],
    "not_working": [],
    "no_longer_tested": [],
    "manual_url": "https://www.repeatmasker.org/webrepeatmaskerhelp.html",
    "source_url": "https://github.com/Dfam-consortium/RepeatMasker/",
    "comments": [],
    "gui": false,
    "gui_command": "",
    "podman": "untested",
    "singularity": "untested",
    "invocation_general": "docker run --rm -v /your/data/dir:/data pegi3s/repeat_masker",
    "usual_invocation_specific": " bash -c \"RepeatMasker -species drosophila -s /data/fastaFile - dir /data/output\"",
    "usual_invocation_specific_comments": [
      "'drosophila' could be changed to any other species name in the Dfam library."
    ],
    "test_invocation_specific": " bash -c \"RepeatMasker -species drosophila -s /data/test/data/6_Drosophila_melanogaster_CDS.fas - dir /data/test/results/repeat_masker_test\"",
    "test_data_url": "http://evolution6.i3s.up.pt/static/pegi3s/dockerfiles/input_test_data/6_Drosophila_melanogaster_CDS.fas",
    "test_results_url": "http://evolution6.i3s.up.pt/static/pegi3s/dockerfiles/output_test_data/repeat_masker_output.zip",
    "icon": "https://www.repeatmasker.org/images/repeatmasker-logo-1024px-greytocolor.png",
    "input_data_type": [
      "fasta"
    ],
    "auto_tests": [
      {
        "docker_image": "pegi3s/repeat_masker",
        "input_files": [],
        "output_dir": "",
        "output_file": "",
        "add_config": "",
        "commands": ""
      }
    ]
  },
  {
    "name": "roary",
    "description": "Pan genome calculation",
    "status": "Usable",
    "recommended": [
      {
        "version": "3.6.0",
        "date": ""
      }
    ],
    "latest": "3.6.0",
    "bug_found": [],
    "not_working": [],
    "no_longer_tested": [],
    "manual_url": "http://sanger-pathogens.github.io/Roary/",
    "source_url": "https://github.com/sanger-pathogens/Roary",
    "comments": [],
    "gui": false,
    "gui_command": "",
    "podman": "untested",
    "singularity": "untested",
    "invocation_general": "docker run --rm -v /your/data/dir:/data -w /data pegi3s/roary",
    "usual_invocation_specific": " roary -e --mafft -p 8 /data/inputFolder/*.gff -f /data/output/folder_name ",
    "usual_invocation_specific_comments": [
      "Input files must be in the same directory as your config file for docknrun. 'folder_name' to the name of the output folder."
    ],
    "test_invocation_specific": "",
    "test_data_url": "",
    "test_results_url": "",
    "icon": "",
    "input_data_type": [
      "input"
    ],
    "auto_tests": [
      {
        "docker_image": "pegi3s/roary",
        "input_files": [],
        "output_dir": "",
        "output_file": "",
        "add_config": "",
        "commands": ""
      }
    ]
  },
  {
    "name": "rootdigger",
    "description": "Phylogenetics tools",
    "status": "Usable",
    "recommended": [
      {
        "version": "1.7.0",
        "date": "25/11/2024"
      }
    ],
    "latest": "1.7.0",
    "bug_found": [],
    "not_working": [],
    "no_longer_tested": [],
    "manual_url": "https://github.com/computations/root_digger",
    "source_url": "https://github.com/computations/root_digger",
    "comments": [],
    "gui": false,
    "gui_command": "",
    "podman": "untested",
    "singularity": "untested",
    "invocation_general": "docker run --rm -v /your/data/dir:/data pegi3s/rootdigger",
    "usual_invocation_specific": " rd --msa /data/fastaFile --tree /data/newickFile --exhaustive",
    "usual_invocation_specific_comments": [
      "The value of the 'exhaustive' parameter can be changed to 'early-stop'.",
      "Output files will be generated in the same directory as your input files."
    ],
    "test_invocation_specific": " rd --msa /data/test/data/Popset_2312465787.fas --tree /data/test/data/Popset_2312465787.nwk --exhaustive",
    "test_data_url": "http://evolution6.i3s.up.pt/static/pegi3s/dockerfiles/input_test_data/rootdigger.zip",
    "test_results_url": "http://evolution6.i3s.up.pt/static/pegi3s/dockerfiles/output_test_data/rootdigger_output.zip",
    "icon": "https://raw.githubusercontent.com/computations/root_digger/refs/heads/master/docs/images/logo.png",
    "input_data_type": [
      "fasta",
      "newick"
    ],
    "auto_tests": [
      {
        "docker_image": "pegi3s/rootdigger",
        "input_files": [],
        "output_dir": "",
        "output_file": "",
        "add_config": "",
        "commands": ""
      }
    ]
  },
  {
    "name": "rtn",
    "description": "Remove Numts",
    "status": "Usable",
    "recommended": [
      {
        "version": "08.05.2024",
        "date": ""
      }
    ],
    "latest": "08.05.2024",
    "bug_found": [],
    "not_working": [],
    "no_longer_tested": [],
    "manual_url": "https://github.com/Ahhgust/RtN",
    "source_url": "https://github.com/Ahhgust/RtN",
    "comments": [],
    "gui": false,
    "gui_command": "",
    "podman": "untested",
    "singularity": "untested",
    "invocation_general": "docker run --rm -v /your/data/dir:/data pegi3s/rtn",
    "usual_invocation_specific": "-h RtN/humans.fa -n RtN/Calabrese_Dayama_Smart_Numts.fa -b ./data/bamFile",
    "usual_invocation_specific_comments": [
      "For Ion Torrent data it is reccomended to use the '-i' (before '-h') flag in order to not take into account indels in the likelyhood function (see rtn docs).",
      "Output files will be generated in the same folder of your input files."
    ],
    "test_invocation_specific": "",
    "test_data_url": "",
    "test_results_url": "",
    "icon": "",
    "input_data_type": [
      "bam"
    ],
    "auto_tests": [
      {
        "docker_image": "pegi3s/rtn",
        "input_files": [],
        "output_dir": "",
        "output_file": "",
        "add_config": "",
        "commands": ""
      }
    ]
  },
  {
    "name": "samtools_bcftools",
    "description": "Genomic tools",
    "status": "Usable",
    "recommended": [
      {
        "version": "1.22",
        "date": "11/06/2025"
      }
    ],
    "latest": "1.22",
    "bug_found": [],
    "not_working": [],
    "no_longer_tested": [
      "1.10",
      "1.9",
      "1.9_v1"
    ],
    "manual_url": "http://www.htslib.org/doc/#manual-pages",
    "source_url": "https://github.com/samtools/samtools",
    "comments": [],
    "gui": false,
    "gui_command": "",
    "podman": "untested",
    "singularity": "untested",
    "invocation_general": "docker run --rm -v /your/data/dir:/data pegi3s/samtools_bcftools",
    "usual_invocation_specific": "samtools view -bS /data/samFile > /data/output/out_name.bam",
    "usual_invocation_specific_comments": [
      "'out_name' to the name of the output file. 'samtools' can be changed to 'bdftools'. 'view - bS' can be changed to other samtools or bcftools applications, following this structure: <samtools_or_bcftools> <options>. Including he input/output files, which should be referenced under /data/"
    ],
    "test_invocation_specific": "",
    "test_data_url": "",
    "test_results_url": "",
    "icon": "",
    "input_data_type": [
      "sam"
    ],
    "auto_tests": [
      {
        "docker_image": "pegi3s/samtools_bcftools",
        "input_files": [
          "hg38_example.bam"
        ],
        "output_dir": "samtools_bcftools",
        "output_file": "hg38_example.stats",
        "add_config": "",
        "commands": "sh -c \"samtools stats /data/input_data/hg38_example.bam > /data/output_folder/samtools_bcftools/hg38_example.stats\""
      }
    ]
  },
  {
    "name": "sapp",
    "description": "Genomic tools",
    "status": "Usable",
    "recommended": [
      {
        "version": "12.09.2019",
        "date": ""
      }
    ],
    "latest": "12.09.2019",
    "bug_found": [],
    "not_working": [],
    "no_longer_tested": [
      "stable-2019.09.12",
      "dev-2019.07.05",
      "dev-2019.09.12"
    ],
    "manual_url": "http://sapp.gitlab.io/docs/index.html",
    "source_url": "https://gitlab.com/sapp/sapp",
    "comments": [],
    "gui": false,
    "gui_command": "",
    "podman": "untested",
    "singularity": "untested",
    "invocation_general": "docker run --rm -v /your/data/dir:/data pegi3s/sapp",
    "usual_invocation_specific": "java -jar Conversion.jar -fasta2hdt -input /data/fastaFile -o /data/output/out_name.hdt -genome -chromosome -id DMelanogaster -org \"Drosophila melanogaster\" -codon 0",
    "usual_invocation_specific_comments": [
      "'Conversion' can be changed to other SAPP packaged (e.g. assembly, Loader, etc). 'DMelanogaster' and 'Drosophila melanogaster' can be changed depending on the study species. 'out_name' to the name of your output file.",
      "When using other SAPP packages, maintain this command structure: java -jar <package.jar> <options>, with options including the input/output files, which should be referenced under /data/."
    ],
    "test_invocation_specific": "",
    "test_data_url": "",
    "test_results_url": "",
    "icon": "",
    "input_data_type": [
      "fasta"
    ],
    "auto_tests": [
      {
        "docker_image": "pegi3s/sapp",
        "input_files": [],
        "output_dir": "",
        "output_file": "",
        "add_config": "",
        "commands": ""
      }
    ]
  },
  {
    "name": "scipio",
    "description": "Gene annotation",
    "status": "Usable",
    "recommended": [
      {
        "version": "1.4",
        "date": ""
      }
    ],
    "latest": "1.4",
    "bug_found": [],
    "not_working": [],
    "no_longer_tested": [],
    "manual_url": "https://hub.docker.com/r/pegi3s/scipio/",
    "source_url": "https://www.webscipio.org/webscipio/download_scipio",
    "comments": [],
    "gui": false,
    "gui_command": "",
    "podman": "untested",
    "singularity": "untested",
    "invocation_general": "docker run --rm -v /your/data/dir:/data pegi3s/scipio",
    "usual_invocation_specific": " bash -c \"./main /data/genomeFile /data/proteinsFile && mv /data/scipio* /data/outputFolder\"",
    "usual_invocation_specific_comments": [
      "After choosing your input files, delete '/data' from the paths created. The one for the output can be left as is."
    ],
    "test_invocation_specific": "",
    "test_data_url": "",
    "test_results_url": "",
    "icon": "",
    "input_data_type": [
      "genome",
      "proteins"
    ],
    "auto_tests": [
      {
        "docker_image": "pegi3s/scipio",
        "input_files": [],
        "output_dir": "",
        "output_file": "",
        "add_config": "",
        "commands": ""
      }
    ]
  },
  {
    "name": "seda",
    "description": "Sequence dataset builder",
    "status": "Usable",
    "recommended": [
      {
        "version": "1.7.2",
        "date": ""
      }
    ],
    "latest": "1.7.2",
    "bug_found": [
      {
        "version": "<= 1.6.0",
        "description": "Due to changes in the structure of the NCBI website, the \"NCBI rename\" option no longer works"
      }
    ],
    "not_working": [],
    "no_longer_tested": [
      "1.7.1",
      "1.7.0",
      "1.7.0-SNAPSHOT",
      "1.6.1",
      "1.6.0-SNAPSHOT-20230920.1",
      "1.6.0-SNAPSHOT-20230620.1",
      "1.6.0-SNAPSHOT-20230516.1",
      "1.6.0-SNAPSHOT-20230620.1",
      "1.6.0-SNAPSHOT-20230516.1",
      "1.6.0-SNAPSHOT",
      "1.6.0-v2304",
      "1.5.0",
      "1.5.0-SNAPSHOT",
      "1.4.0"
    ],
    "manual_url": "https://www.sing-group.org/seda/manual/index.html",
    "source_url": "https://github.com/sing-group/seda",
    "comments": [
      "This is a GUI, thus there is no test data output for this image. You may have to run 'xhost +' first if you create a .sh file. Due to changes in the structure of the NCBI website, the \"NCBI rename\" option no longer works in versions prior to 1.6.1"
    ],
    "gui": true,
    "gui_command": "/opt/SEDA/run-gui.sh",
    "podman": "untested",
    "singularity": "untested",
    "invocation_general": "docker run --rm -v /var/run/docker.sock:/var/run/docker.sock -v /your/data/dir:/data -v /tmp:/tmp pegi3s/seda",
    "usual_invocation_specific": "/opt/SEDA/run-cli.sh seda-command-name --input-directory /data --output-directory /data/output",
    "usual_invocation_specific_comments": [
      "'seda-command-name' to the name of the conversion command (e.g. fastq2fasta).",
      "'/data' to the actual name of the folder containing the input files",
      "'/data/output' to the actual name of the folder where the output files will be produced"
    ],
    "test_invocation_specific": "/opt/SEDA/run-cli.sh clustal-align --input-file /data/test/data/small_not_aligned.fas --output-directory /data/test/results/seda_test/",
    "test_data_url": "http://evolution6.i3s.up.pt/static/pegi3s/dockerfiles/input_test_data/small_not_aligned.fas",
    "test_results_url": "http://evolution6.i3s.up.pt/static/pegi3s/dockerfiles/output_test_data/seda_output.zip",
    "icon": "https://www.sing-group.org/seda/images/icon-32.png",
    "input_data_type": [],
    "auto_tests": [
      {
        "docker_image": "pegi3s/seda:1.7.1",
        "input_files": [
          "empty"
        ],
        "output_dir": "",
        "output_file": "",
        "add_config": "",
        "commands": " -d -e USERID=$UID -e USER=$USER -e DISPLAY=$DISPLAY -v /var/db:/var/db:Z -v /tmp/.X11-unix:/tmp/.X11-unix -v $HOME/.Xauthority:/home/developer/.Xauthority -v /var/run/docker.sock:/var/run/docker.sock -v /tmp:/tmp pegi3s/seda:1.7.1 > /dev/null 2>&1"
      }
    ]
  },
  {
    "name": "seqkit",
    "description": "FASTA/FASTQ toolkit",
    "status": "Usable",
    "recommended": [
      {
        "version": "2.5.2",
        "date": ""
      }
    ],
    "latest": "2.5.2",
    "bug_found": [],
    "not_working": [],
    "no_longer_tested": [
      "2.5.1",
      "2.4.0",
      "2.3.0",
      "2.1.0",
      "2.0.0",
      "0.16.1",
      "0.12.1",
      "0.12.0"
    ],
    "manual_url": "https://bioinf.shenwei.me/seqkit/usage/",
    "source_url": "https://github.com/shenwei356/seqkit",
    "comments": [],
    "gui": false,
    "gui_command": "",
    "podman": "untested",
    "singularity": "untested",
    "invocation_general": "docker run --rm -v /your/data/dir:/data pegi3s/seqkit",
    "usual_invocation_specific": " seq -p --complement -t dna /data/fasta_qFile -o /data/output/out_name",
    "usual_invocation_specific_comments": [
      "'seq' can be changed to other seqkit tools (e.g. stats, fq2fa). '-p --complement -t dna' is specific for 'seq' tool and ca be changed. 'out_name' to the name of the output file."
    ],
    "test_invocation_specific": "",
    "test_data_url": "",
    "test_results_url": "",
    "icon": "",
    "input_data_type": [
      "fasta_q"
    ],
    "auto_tests": [
      {
        "docker_image": "pegi3s/seqkit",
        "input_files": [],
        "output_dir": "",
        "output_file": "",
        "add_config": "",
        "commands": ""
      }
    ]
  },
  {
    "name": "seqtk",
    "description": "FASTA/FASTQ toolkit",
    "status": "Usable",
    "recommended": [
      {
        "version": "1.4",
        "date": ""
      }
    ],
    "latest": "1.4",
    "bug_found": [],
    "not_working": [],
    "no_longer_tested": [],
    "manual_url": "https://github.com/lh3/seqtk",
    "source_url": "https://github.com/lh3/seqtk",
    "comments": [],
    "gui": false,
    "gui_command": "",
    "podman": "untested",
    "singularity": "untested",
    "invocation_general": "docker run --rm -v /your/data/dir:/data pegi3s/seqtk",
    "usual_invocation_specific": " seq  -r /data/fast_qFile > /data/output/out_name",
    "usual_invocation_specific_comments": [
      "'out_name' to the name of the output file. After choosing the output directory, please remove '/data/' in the output directory in the command.",
      "'seq' can be changed to other seqkt tool. '-r' is specific to this command and it may be required to be changed."
    ],
    "test_invocation_specific": "",
    "test_data_url": "",
    "test_results_url": "",
    "icon": "",
    "input_data_type": [
      "fast_q"
    ],
    "auto_tests": [
      {
        "docker_image": "pegi3s/seqtk",
        "input_files": [],
        "output_dir": "",
        "output_file": "",
        "add_config": "",
        "commands": ""
      }
    ]
  },
  {
    "name": "soapdenovo2",
    "description": "de novo sequence assembler",
    "status": "Usable",
    "recommended": [
      {
        "version": "2.0.4",
        "date": ""
      }
    ],
    "latest": "2.0.4",
    "bug_found": [],
    "not_working": [],
    "no_longer_tested": [
      "2.04"
    ],
    "manual_url": "https://github.com/aquaskyline/SOAPdenovo2/blob/master/README.md",
    "source_url": "https://github.com/aquaskyline/SOAPdenovo2",
    "comments": [],
    "gui": false,
    "gui_command": "",
    "podman": "untested",
    "singularity": "untested",
    "invocation_general": "docker run --rm -v /your/data/dir:/data pegi3s/soapdenovo2",
    "usual_invocation_specific": " SOAPdenovo-63mer all -s /data/configFile -o /data/output -k 31 -p 4",
    "usual_invocation_specific_comments": [
      "SOAPdenovo-63mer' can be changed to other scripts (e.g. SOAPdenovo-127mer and SOAPdenovo-fusion). 'all' can be changed to script specific commands (e.g. pregraph, contig, scaff, etc). Example of a config file can be consulted in the manual."
    ],
    "test_invocation_specific": "",
    "test_data_url": "",
    "test_results_url": "",
    "icon": "",
    "input_data_type": [],
    "auto_tests": [
      {
        "docker_image": "pegi3s/soapdenovo2",
        "input_files": [],
        "output_dir": "",
        "output_file": "",
        "add_config": "",
        "commands": ""
      }
    ]
  },
  {
    "name": "spades",
    "description": "de novo sequence assembler",
    "status": "Usable",
    "recommended": [
      {
        "version": "3.11.1",
        "date": ""
      }
    ],
    "latest": "3.11.1",
    "bug_found": [],
    "not_working": [],
    "no_longer_tested": [],
    "manual_url": "https://home.cc.umanitoba.ca/~psgendb/doc/spades/manual.html",
    "source_url": "https://github.com/ablab/spades",
    "comments": [],
    "gui": false,
    "gui_command": "",
    "podman": "untested",
    "singularity": "untested",
    "invocation_general": "docker run --rm -v /your/data/dir:/data pegi3s/spades",
    "usual_invocation_specific": " spades.py --careful --only-assembler --pe1-1 /data/fastq_gz1File --pe1-2 /data/fastq_gz2File -o /data/output",
    "usual_invocation_specific_comments": [
      "'spades.py' can be changed to other scripts (e.g. dipspades.py, rnaspades.py, etc. '--careful --only-assembler' are specific for this example and should be reviewed if the type of analysis or script is altered, please refer to the manual."
    ],
    "test_invocation_specific": "",
    "test_data_url": "",
    "test_results_url": "",
    "icon": "",
    "input_data_type": [
      "fastq_gz1",
      "fastq_gz2"
    ],
    "auto_tests": [
      {
        "docker_image": "pegi3s/spades",
        "input_files": [],
        "output_dir": "",
        "output_file": "",
        "add_config": "",
        "commands": ""
      }
    ]
  },
  {
    "name": "splitstree",
    "description": "Recombination analysis",
    "status": "Usable",
    "recommended": [
      {
        "version": "4.14.8",
        "date": "25/11/2024"
      },
      {
        "version": "4.19.2",
        "date": "14/01/2025"
      },
      {
        "version": "6.4.11",
        "date": "14/01/2025"
      }
    ],
    "latest": "6.4.11",
    "bug_found": [],
    "not_working": [],
    "no_longer_tested": [],
    "manual_url": "https://husonlab.github.io/splitstree6/manual.html",
    "source_url": "https://github.com/husonlab/splitstree6",
    "comments": [],
    "gui": true,
    "gui_command": "",
    "podman": "untested",
    "singularity": "untested",
    "invocation_general": "docker run --rm -ti -e USERID=$UID -e USER=$USER -e DISPLAY=$DISPLAY -v /var/db:/var/db:Z -v /tmp/.X11-unix:/tmp/.X11-unix -v $HOME/.Xauthority:/home/developer/.Xauthority -v \"/your/data/dir:/data\" pegi3s/splitstree",
    "usual_invocation_specific": "",
    "usual_invocation_specific_comments": [],
    "test_invocation_specific": "",
    "test_data_url": "http://evolution6.i3s.up.pt/static/pegi3s/dockerfiles/input_test_data/CDS_aligned.fas",
    "test_results_url": "",
    "icon": "",
    "input_data_type": [],
    "auto_tests": [
      {
        "docker_image": "pegi3s/splitstree",
        "input_files": [],
        "output_dir": "",
        "output_file": "",
        "add_config": "",
        "commands": ""
      }
    ]
  },
  {
    "name": "sratoolkit",
    "description": "Operations on SRA database",
    "status": "Usable",
    "recommended": [
      {
        "version": "3.1.0",
        "date": ""
      }
    ],
    "latest": "3.1.0",
    "bug_found": [],
    "not_working": [],
    "no_longer_tested": [
      "3.0.10",
      "3.0.7",
      "3.0.6",
      "3.0.5",
      "3.0.1",
      "2.10.0",
      "2.9.6",
      "2.9.0"
    ],
    "manual_url": "https://github.com/ncbi/sra-tools/wiki",
    "source_url": "https://github.com/ncbi/sra-tools",
    "comments": [],
    "gui": false,
    "gui_command": "",
    "podman": "untested",
    "singularity": "untested",
    "invocation_general": "docker run --rm -v /your/data/dir:/data pegi3s/sratoolkit",
    "usual_invocation_specific": "fastq-dump SRR6175516 --outdir /data/output",
    "usual_invocation_specific_comments": [
      "'fastq-dump' to other SRA toolkit tools (e.g. sam-dump, abi-dump, etc). 'SRR6175516' to the desired id."
    ],
    "test_invocation_specific": "fastq-dump SRR6175516 --outdir /data/test/results/sratoolkit_test",
    "test_data_url": "http://evolution6.i3s.up.pt/static/pegi3s/dockerfiles/input_test_data/empty",
    "test_results_url": "http://evolution6.i3s.up.pt/static/pegi3s/dockerfiles/output_test_data/sratoolkit_output.zip",
    "icon": "",
    "input_data_type": [],
    "auto_tests": [
      {
        "docker_image": "pegi3s/sratoolkit:3.1.0",
        "input_files": [
          "empty"
        ],
        "output_dir": "sratoolkit_output",
        "output_file": "SRR3143588.fastq",
        "add_config": "",
        "commands": " fastq-dump SRR3143588 --outdir /data/output_folder/sratoolkit_output > /dev/null 2>&1"
      }
    ]
  },
  {
    "name": "takeabreak",
    "description": "Inversion breakpoint detection",
    "status": "Usable",
    "recommended": [
      {
        "version": "1.0.0",
        "date": ""
      }
    ],
    "latest": "1.0.0",
    "bug_found": [],
    "not_working": [],
    "no_longer_tested": [],
    "manual_url": "https://github.com/GATB/TakeABreak/blob/master/README.md",
    "source_url": "https://github.com/GATB/TakeABreak",
    "comments": [],
    "gui": false,
    "gui_command": "",
    "podman": "untested",
    "singularity": "untested",
    "invocation_general": "docker run --rm -v /your/data/dir:/data pegi3s/takeabreak",
    "usual_invocation_specific": "bash -c \"./TakeABreak -in /data/test_reads_fastaFile,/data/reference_reads_fastaFile -out /data/output/out_name\"",
    "usual_invocation_specific_comments": [
      "'out_name' to the name of your output files."
    ],
    "test_invocation_specific": "",
    "test_data_url": "",
    "test_results_url": "",
    "icon": "",
    "input_data_type": [
      "test_reads_fasta",
      "reference_reads_fasta"
    ],
    "auto_tests": [
      {
        "docker_image": "pegi3s/takeabreak",
        "input_files": [],
        "output_dir": "",
        "output_file": "",
        "add_config": "",
        "commands": ""
      }
    ]
  },
  {
    "name": "tcoffee",
    "description": "Sequence alignment",
    "status": "Usable",
    "recommended": [
      {
        "version": "12.0.7",
        "date": ""
      }
    ],
    "latest": "12.0.7",
    "bug_found": [],
    "not_working": [],
    "no_longer_tested": [
      "12.00.7",
      "11.00.8",
      "10.00.r1613"
    ],
    "manual_url": "https://tcoffee.readthedocs.io/en/latest/tcoffee_main_documentation.html",
    "source_url": "https://github.com/cbcrg/tcoffee",
    "comments": [],
    "gui": false,
    "gui_command": "",
    "podman": "untested",
    "singularity": "untested",
    "invocation_general": "docker run --rm -v /your/data/dir:/data pegi3s/tcoffee",
    "usual_invocation_specific": " t_coffee /data/fastaFile -run_name /data/output/out_name",
    "usual_invocation_specific_comments": [
      "'out_name' to the name of your output files."
    ],
    "test_invocation_specific": " t_coffee /data/test/data/small_not_aligned.fas -run_name /data/test/results/tcoffee_test",
    "test_data_url": "http://evolution6.i3s.up.pt/static/pegi3s/dockerfiles/input_test_data/small_not_aligned.fas",
    "test_results_url": "http://evolution6.i3s.up.pt/static/pegi3s/dockerfiles/output_test_data/tcoffee_output.zip",
    "icon": "https://tcoffee.crg.eu/apps/tcoffee/public/images/tcoffeelogo-2.png",
    "input_data_type": [
      "fasta"
    ],
    "auto_tests": [
      {
        "docker_image": "pegi3s/tcoffee:12.0.7",
        "input_files": [
          "small_not_aligned.fas"
        ],
        "output_dir": "tcoffee_output",
        "output_file": "aligned.aln",
        "add_config": "",
        "commands": " t_coffee /data/input_data/small_not_aligned.fas -run_name /data/output_folder/tcoffee_output/aligned > /dev/null 2>&1"
      }
    ]
  },
  {
    "name": "translatorx",
    "description": "Sequence alignment",
    "status": "Usable",
    "recommended": [
      {
        "version": "01.09.2022",
        "date": ""
      }
    ],
    "latest": "01.09.2022",
    "bug_found": [],
    "not_working": [],
    "no_longer_tested": [
      "build.04.02.2022"
    ],
    "manual_url": "http://translatorx.co.uk/",
    "source_url": "https://web.archive.org/web/20241116033407/http://161.111.160.230/index_v5.html",
    "comments": [],
    "gui": false,
    "gui_command": "",
    "podman": "untested",
    "singularity": "untested",
    "invocation_general": "docker run --rm -v /your/data/dir:/data pegi3s/translatorx",
    "usual_invocation_specific": " translatorx_vLocal.pl -i /data/nuc_fastaFile -a /data/aa_fasta_alignFile -o /data/output/out_name",
    "usual_invocation_specific_comments": [
      "'out_name' to the name of your output files."
    ],
    "test_invocation_specific": "",
    "test_data_url": "",
    "test_results_url": "",
    "icon": "",
    "input_data_type": [
      "nuc_fasta",
      "aa_fasta_align"
    ],
    "auto_tests": [
      {
        "docker_image": "pegi3s/translatorx",
        "input_files": [],
        "output_dir": "",
        "output_file": "",
        "add_config": "",
        "commands": ""
      }
    ]
  },
  {
    "name": "tree_snatcher_plus",
    "description": "Tree editing",
    "status": "Usable",
    "recommended": [
      {
        "version": "06.2010",
        "date": ""
      }
    ],
    "latest": "06.2010",
    "bug_found": [],
    "not_working": [],
    "no_longer_tested": [],
    "manual_url": "https://www.cs.hhu.de/en/research-groups/computational-cell-biology/software-contributions/treesnatcher",
    "source_url": "https://www.cs.hhu.de/en/research-groups/computational-cell-biology/software-contributions/treesnatcher",
    "comments": [],
    "gui": true,
    "gui_command": " ",
    "podman": "untested",
    "singularity": "untested",
    "invocation_general": "",
    "usual_invocation_specific": "",
    "usual_invocation_specific_comments": [],
    "test_invocation_specific": "",
    "test_data_url": "",
    "test_results_url": "",
    "icon": "http://www.cibiv.at/software/treesnatcher/tutorials/wood256.png",
    "input_data_type": [],
    "auto_tests": [
      {
        "docker_image": "pegi3s/tree_snatcher_plus",
        "input_files": [],
        "output_dir": "",
        "output_file": "",
        "add_config": "",
        "commands": ""
      }
    ]
  },
  {
    "name": "treeviewx",
    "description": "Displays phylogenetics trees",
    "status": "Usable",
    "recommended": [
      {
        "version": "0.5.1",
        "date": ""
      }
    ],
    "latest": "0.5.1",
    "bug_found": [],
    "not_working": [],
    "no_longer_tested": [],
    "manual_url": "https://code.google.com/archive/p/treeviewx/",
    "source_url": "https://salsa.debian.org/med-team/treeviewx",
    "comments": [],
    "gui": true,
    "gui_command": " ",
    "podman": "untested",
    "singularity": "untested",
    "invocation_general": "",
    "usual_invocation_specific": "",
    "usual_invocation_specific_comments": [],
    "test_invocation_specific": "",
    "test_data_url": "",
    "test_results_url": "",
    "icon": "https://storage.googleapis.com/google-code-archive/v2/code.google.com/treeviewx/logo.png",
    "input_data_type": [],
    "auto_tests": [
      {
        "docker_image": "pegi3s/treeviewx",
        "input_files": [],
        "output_dir": "",
        "output_file": "",
        "add_config": "",
        "commands": ""
      }
    ]
  },
  {
    "name": "trimmomatic",
    "description": "FASTQ trimming tool",
    "status": "Usable",
    "recommended": [
      {
        "version": "0.40",
        "date": ""
      }
    ],
    "latest": "0.40",
    "bug_found": [],
    "not_working": [],
    "no_longer_tested": [],
    "manual_url": "http://www.usadellab.org/cms/?page=trimmomatic",
    "source_url": "https://github.com/usadellab/Trimmomatic",
    "comments": [],
    "gui": false,
    "gui_command": "",
    "podman": "untested",
    "singularity": "untested",
    "invocation_general": "docker run --rm -v /your/data/dir:/data pegi3s/trimmomatic",
    "usual_invocation_specific": " SE -phred33 /data/fastqFile /data/output/out_name.fastq SLIDINGWINDOW:4:20 MINLEN:36",
    "usual_invocation_specific_comments": [
      "'SE' to 'PE' if Paired-End sequencing instead of single-end. '-phred33' can be changed to '-phred64'. 'out_name' to the name of your output file. '4:20' scans a 4-base window and ctus when the average quality falls below 20. '36' discards reads shorter than 36 bases after trimming."
    ],
    "test_invocation_specific": "",
    "test_data_url": "",
    "test_results_url": "",
    "icon": "",
    "input_data_type": [
      "fastq"
    ],
    "auto_tests": [
      {
        "docker_image": "pegi3s/trimmomatic",
        "input_files": [],
        "output_dir": "",
        "output_file": "",
        "add_config": "",
        "commands": ""
      }
    ]
  },
  {
    "name": "vcftools",
    "description": "Genomic tools",
    "status": "Usable",
    "recommended": [
      {
        "version": "0.1.16",
        "date": ""
      }
    ],
    "latest": "0.1.16",
    "bug_found": [],
    "not_working": [],
    "no_longer_tested": [],
    "manual_url": "https://vcftools.sourceforge.net/man_latest.html",
    "source_url": "https://github.com/vcftools/vcftools",
    "comments": [],
    "gui": false,
    "gui_command": "",
    "podman": "untested",
    "singularity": "untested",
    "invocation_general": "docker run --rm -v /your/data/dir:/data pegi3s/vcftools",
    "usual_invocation_specific": "vcftools --gzvcf /data/vcf_gzFile --remove-indels --recode --recode-INFO-all --out /data/output/out_name",
    "usual_invocation_specific_comments": [
      "'vcftools' can be changed to other application names (e.g. vcf-annotate, vcf-concat, etc). '--gzvcf /data/vcf_gzFile --remove-indels --recode --recode-INFO-all --out /data/output' has commands specific for the application used and should be changed accordingly. 'out_name' to the name your output file."
    ],
    "test_invocation_specific": "",
    "test_data_url": "",
    "test_results_url": "",
    "icon": "",
    "input_data_type": [
      "vcf_gz"
    ],
    "auto_tests": [
      {
        "docker_image": "pegi3s/vcftools",
        "input_files": [],
        "output_dir": "",
        "output_file": "",
        "add_config": "",
        "commands": ""
      }
    ]
  },
  {
    "name": "velvet",
    "description": "Sequence assembler for very short reads",
    "status": "Usable",
    "recommended": [
      {
        "version": "1.1",
        "date": ""
      }
    ],
    "latest": "1.1",
    "bug_found": [],
    "not_working": [],
    "no_longer_tested": [],
    "manual_url": "https://github.com/dzerbino/velvet/blob/master/Manual.pdf",
    "source_url": "https://github.com/dzerbino/velvet",
    "comments": [],
    "gui": false,
    "gui_command": "",
    "podman": "untested",
    "singularity": "untested",
    "invocation_general": "docker run --rm -v \"/your/data/dir:/data\" pegi3s/velvet",
    "usual_invocation_specific": "bash -c \"conda run activate velvet_env && velveth /data 21 -fastq -short /data/fqFile && velvetg /data -cov_cutoff 4 -min_contig_lgth 100\"",
    "usual_invocation_specific_comments": [
      "'21' to the value of the k-mer size you want to use. '4' to the value of the coverage cutoff you want to use. '100' to the value of the minimum contig length you want to use.",
      "Your output will be generated in the same directory as your input files."
    ],
    "test_invocation_specific": "",
    "test_data_url": "",
    "test_results_url": "",
    "icon": "",
    "input_data_type": [
      "fq"
    ],
    "auto_tests": [
      {
        "docker_image": "pegi3s/velvet",
        "input_files": [],
        "output_dir": "",
        "output_file": "",
        "add_config": "",
        "commands": ""
      }
    ]
  },
  {
    "name": "wgsim",
    "description": "Simulate sequencing data",
    "status": "Usable",
    "recommended": [
      {
        "version": "0.3.0",
        "date": "25/11/2024"
      }
    ],
    "latest": "0.3.0",
    "bug_found": [],
    "not_working": [],
    "no_longer_tested": [],
    "manual_url": "https://github.com/lh3/wgsim/blob/master/README",
    "source_url": "https://github.com/lh3/wgsim",
    "comments": [],
    "gui": false,
    "gui_command": "",
    "podman": "untested",
    "singularity": "untested",
    "invocation_general": "docker run --rm -v \"/your/data/dir:/data\" pegi3s/wgsim",
    "usual_invocation_specific": " wgsim -1151 -2151 -d500 -r0 -e0 -N10000 -R0 -X0 /data/fastaFile /data/output/reads1.fq /data/output/reads2.fq",
    "usual_invocation_specific_comments": [],
    "test_invocation_specific": " wgsim -1151 -2151 -d500 -r0 -e0 -N10000 -R0 -X0 /data/test/data/GCF_000858285.1.fa /data/test/results/wgsim_test_reads1.fq /data/test/results/wgsim_test_reads2.fq",
    "test_data_url": "http://evolution6.i3s.up.pt/static/pegi3s/dockerfiles/input_test_data/GCF_000858285.1.fa",
    "test_results_url": "http://evolution6.i3s.up.pt/static/pegi3s/dockerfiles/output_test_data/wgsim_output.zip",
    "icon": "",
    "input_data_type": [
      "fasta"
    ],
    "auto_tests": [
      {
        "docker_image": "pegi3s/wgsim:0.3.0",
        "input_files": [
          "GCF_000858285.1.fa"
        ],
        "output_dir": "wgsim_output",
        "output_file": "reads1.fq",
        "add_config": "",
        "commands": " wgsim -1151 -2151 -d500 -r0 -e0 -N10000 -R0 -X0 /data/input_data/GCF_000858285.1.fa /data/output_folder/wgsim_output/reads1.fq /data/output_folder/wgsim_output/reads2.fq  > /dev/null 2>&1"
      }
    ]
  },
  {
    "name": "whiscy",
    "description": "Identification of active and passive sites",
    "status": "Unusable",
    "recommended": [],
    "latest": "18.05.2019",
    "bug_found": [],
    "not_working": [
      "18.05.2019",
      "master"
    ],
    "no_longer_tested": [
      "18.05.2019",
      "master"
    ],
    "manual_url": "https://github.com/haddocking/whiscy",
    "source_url": "https://github.com/haddocking/whiscy",
    "comments": [
      "No longer works because the database upon which Whiscy relied on is no longer available."
    ],
    "gui": false,
    "gui_command": "",
    "podman": "untested",
    "singularity": "untested",
    "invocation_general": "",
    "usual_invocation_specific": "",
    "usual_invocation_specific_comments": [
      "No longer works because the database upon which Whiscy relied is no longer available."
    ],
    "test_invocation_specific": "",
    "test_data_url": "http://evolution6.i3s.up.pt/static/pegi3s/dockerfiles/input_test_data/empty",
    "test_results_url": "http://evolution6.i3s.up.pt/static/pegi3s/dockerfiles/output_test_data/empty",
    "icon": "https://raw.githubusercontent.com/haddocking/whiscy/refs/heads/main/media/whiscy_logo.png",
    "input_data_type": [],
    "auto_tests": [
      {
        "docker_image": "pegi3s/whiscy",
        "input_files": [],
        "output_dir": "",
        "output_file": "",
        "add_config": "",
        "commands": ""
      }
    ]
  },
  {
    "name": "cport_server",
    "description": "automated submission to c-port server",
    "status": "Unusable",
    "recommended": [],
    "latest": "27.07.2021",
    "bug_found": [],
    "not_working": [
      "27.07.2021"
    ],
    "no_longer_tested": [
      "27.07.2021"
    ],
    "manual_url": "https://journals.plos.org/plosone/article?id=10.1371/journal.pone.0017695",
    "source_url": "https://github.com/pegi3s/dockerfiles/tree/master/cport_server",
    "comments": [
      "No longer works because some of the servers upon which CPORT relied on stopped working."
    ],
    "gui": false,
    "gui_command": "",
    "podman": "untested",
    "singularity": "untested",
    "invocation_general": "",
    "usual_invocation_specific": "",
    "usual_invocation_specific_comments": [
      "No longer works because some of the servers upon which CPORT relied stopped working."
    ],
    "test_invocation_specific": "",
    "test_data_url": "http://evolution6.i3s.up.pt/static/pegi3s/dockerfiles/input_test_data/empty",
    "test_results_url": "http://evolution6.i3s.up.pt/static/pegi3s/dockerfiles/output_test_data/empty",
    "icon": "",
    "input_data_type": [],
    "auto_tests": [
      {
        "docker_image": "pegi3s/cport_server",
        "input_files": [],
        "output_dir": "",
        "output_file": "",
        "add_config": "",
        "commands": ""
      }
    ]
  },
  {
    "name": "evoppi-querier",
    "description": "Making queries to the EvoPPI web server",
    "status": "Usable",
    "recommended": [
      {
        "version": "1.0.1",
        "date": ""
      }
    ],
    "latest": "1.0.1",
    "bug_found": [
      {
        "version": "1.0.0",
        "description": ""
      }
    ],
    "not_working": [],
    "no_longer_tested": [],
    "manual_url": "https://hub.docker.com/r/pegi3s/evoppi-querier",
    "source_url": "https://github.com/pegi3s/evoppi-querier",
    "comments": [],
    "gui": false,
    "gui_command": "",
    "podman": "untested",
    "singularity": "untested",
    "invocation_general": "docker run --rm -v /your/data/dir:/data -w /data pegi3s/evoppi-querier",
    "usual_invocation_specific": " query_single_species -c /data/configFile -o /data/output",
    "usual_invocation_specific_comments": [],
    "test_invocation_specific": " query_single_species -c /data/test/data/evoppi_config.txt -o /data/test/results/evoppi_querier_test",
    "test_data_url": "http://evolution6.i3s.up.pt/static/pegi3s/dockerfiles/input_test_data/evoppi_config.txt",
    "test_results_url": "http://evolution6.i3s.up.pt/static/pegi3s/dockerfiles/output_test_data/evoppi-querier_output.zip",
    "icon": "https://raw.githubusercontent.com/pegi3s/evoppi-querier/refs/heads/master/resources/evoppi.png",
    "input_data_type": [
      "config"
    ],
    "auto_tests": [
      {
        "docker_image": "pegi3s/evoppi-querier:1.0.1",
        "input_files": [
          "evoppi_config.txt"
        ],
        "output_dir": "evoppi-querier_output",
        "output_file": "EvoPPI_Results.csv",
        "add_config": "",
        "commands": " query_single_species -c /data/input_data/evoppi_config.txt -o /data/output_folder/evoppi-querier_output > /dev/null 2>&1"
      }
    ]
  },
  {
    "name": "haddock_server",
    "description": "Protein docking prediction",
    "status": "Not_recommended",
    "recommended": [
      {
        "version": "2.2.1",
        "date": ""
      }
    ],
    "latest": "2.2.1",
    "bug_found": [],
    "not_working": [],
    "no_longer_tested": [
      "2.2"
    ],
    "manual_url": "https://www.bonvinlab.org/software/haddock2.2/manual/",
    "source_url": "https://github.com/pegi3s/dockerfiles/tree/master/haddock_server",
    "comments": [],
    "gui": false,
    "gui_command": "",
    "podman": "untested",
    "singularity": "untested",
    "invocation_general": "docker run --rm -v /your/data/dir:/data pegi3s/haddock_server",
    "usual_invocation_specific": " bash -c \"/opt/run\"",
    "usual_invocation_specific_comments": [
      "Your input files must be n the directory where the config file for docknrun is located. You should have these as input: *.pdb1 -> Protein 1 PDB file; *.a1 -> Protein 1 Active Residues; *.p1 -> Protein 1 Passive Residues; *.pdb2 -> Protein 2 PDB file; *.a2 -> Protein 2 Active Residues; *.p2 -> Protein 2 Passive Residues."
    ],
    "test_invocation_specific": "",
    "test_data_url": "",
    "test_results_url": "",
    "icon": "",
    "input_data_type": [],
    "auto_tests": [
      {
        "docker_image": "pegi3s/haddock_server",
        "input_files": [],
        "output_dir": "",
        "output_file": "",
        "add_config": "",
        "commands": ""
      }
    ]
  },
  {
    "name": "i-tasser_server",
    "description": "Protein structure prediction",
    "status": "Usable",
    "recommended": [
      {
        "version": "30.06.2021",
        "date": ""
      }
    ],
    "latest": "30.06.2021",
    "bug_found": [],
    "not_working": [],
    "no_longer_tested": [],
    "manual_url": "https://seq2fun.dcmb.med.umich.edu//I-TASSER/about.html",
    "source_url": "https://github.com/pegi3s/dockerfiles/tree/master/i-tasser_server",
    "comments": [],
    "gui": false,
    "gui_command": "",
    "podman": "untested",
    "singularity": "untested",
    "invocation_general": "docker run --rm -v /your/data/dir:/data pegi3s/i-tasser_server",
    "usual_invocation_specific": " bash -c \"/opt/run /data/inputFolder /data/output\"",
    "usual_invocation_specific_comments": [
      "Your input should point to he folder that contains the multi FASTA file and the file with your I-TASSER access credentials."
    ],
    "test_invocation_specific": "",
    "test_data_url": "",
    "test_results_url": "",
    "icon": "",
    "input_data_type": [],
    "auto_tests": [
      {
        "docker_image": "pegi3s/i-tasser_server",
        "input_files": [],
        "output_dir": "",
        "output_file": "",
        "add_config": "",
        "commands": ""
      }
    ]
  },
  {
    "name": "pisa_server",
    "description": "Prediction of protein interfaces",
    "status": "Usable",
    "recommended": [
      {
        "version": "1.0.0",
        "date": ""
      }
    ],
    "latest": "1.0.0",
    "bug_found": [],
    "not_working": [],
    "no_longer_tested": [],
    "manual_url": "https://www.ebi.ac.uk/pdbe/docs/Tutorials/workshop_tutorials/PDBepisa.pdf",
    "source_url": "https://github.com/pegi3s/dockerfiles/tree/master/pisa_server",
    "comments": [],
    "gui": false,
    "gui_command": "",
    "podman": "untested",
    "singularity": "untested",
    "invocation_general": "docker run --rm -v /your/data/dir:/data pegi3s/pisa_server",
    "usual_invocation_specific": "bash -c \"/opt/run /data/inputFolder /data/output\"",
    "usual_invocation_specific_comments": [],
    "test_invocation_specific": "",
    "test_data_url": "",
    "test_results_url": "",
    "icon": "",
    "input_data_type": [
      "input"
    ],
    "auto_tests": [
      {
        "docker_image": "pegi3s/pisa_server",
        "input_files": [],
        "output_dir": "",
        "output_file": "",
        "add_config": "",
        "commands": ""
      }
    ]
  },
  {
    "name": "sppider",
    "description": "Prediction of protein-protein interfaces",
    "status": "Usable",
    "recommended": [
      {
        "version": "26.05.2019",
        "date": ""
      }
    ],
    "latest": "26.05.2019",
    "bug_found": [],
    "not_working": [],
    "no_longer_tested": [],
    "manual_url": "http://sppider.cchmc.org/sppider_doc.html",
    "source_url": "https://github.com/pegi3s/dockerfiles/tree/master/sppider",
    "comments": [],
    "gui": false,
    "gui_command": "",
    "podman": "untested",
    "singularity": "untested",
    "invocation_general": "docker run --rm -v /your/data/dir:/data pegi3s/sppider",
    "usual_invocation_specific": "bash -c \"/opt/run\"",
    "usual_invocation_specific_comments": [
      "Your input files must be in the same directory as the config file for docknrun.",
      "In order to be notified of the results you need to create a file called parameters.sppider filled with the following information: -F EMail=\"your_mail_address\""
    ],
    "test_invocation_specific": "",
    "test_data_url": "",
    "test_results_url": "",
    "icon": "",
    "input_data_type": [],
    "auto_tests": [
      {
        "docker_image": "pegi3s/sppider",
        "input_files": [],
        "output_dir": "",
        "output_file": "",
        "add_config": "",
        "commands": ""
      }
    ]
  },
  {
    "name": "tm-align_server",
    "description": "Protein structure alignment",
    "status": "Usable",
    "recommended": [
      {
        "version": "1.0.0",
        "date": "25/11/2024"
      }
    ],
    "latest": "1.0.0",
    "bug_found": [],
    "not_working": [],
    "no_longer_tested": [],
    "manual_url": "https://seq2fun.dcmb.med.umich.edu//TM-align/",
    "source_url": "https://github.com/kad-ecoli/TMalign",
    "comments": [],
    "gui": false,
    "gui_command": "",
    "podman": "untested",
    "singularity": "untested",
    "invocation_general": "docker run --rm -v /your/data/dir:/data pegi3s/tm-align_server",
    "usual_invocation_specific": " bash -c \"/opt/run /data/inputFolder /data/output\"",
    "usual_invocation_specific_comments": [],
    "test_invocation_specific": " bash -c \"/opt/run /data/test/data/tm-align_server /data/test/results/tm_align_server_test\"",
    "test_data_url": "http://evolution6.i3s.up.pt/static/pegi3s/dockerfiles/input_test_data/tm-align_server.zip",
    "test_results_url": "http://evolution6.i3s.up.pt/static/pegi3s/dockerfiles/output_test_data/tm-align_server_output.zip",
    "icon": "",
    "input_data_type": [
      "input"
    ],
    "auto_tests": [
      {
        "docker_image": "pegi3s/tm-align_server:1.0.0",
        "input_files": [
          "AF-P58710-F1-model_v4.pdb",
          "8qnc.pdb"
        ],
        "output_dir": "tm-align_server_output",
        "output_file": "results.html",
        "add_config": "",
        "commands": " bash -c \"/opt/run /data/input_data /data/output_folder/tm-align_server_output\" > /dev/null 2>&1"
      }
    ]
  },
  {
    "name": "auto-phylo",
    "description": "Pipeline Maker for Phylogenetic Studies",
    "status": "Usable",
    "recommended": [
      {
        "version": "3.2.0",
        "date": ""
      },
      {
        "version": "2.2.0",
        "date": ""
      }
    ],
    "latest": "3.2.0",
    "bug_found": [],
    "not_working": [],
    "no_longer_tested": [
      "3.0.0",
      "2.0.1",
      "2.0.0",
      "1.0.0"
    ],
    "manual_url": "http://evolution6.i3s.up.pt/static/auto-phylo/v2/docs/index.html",
    "source_url": "https://github.com/pegi3s/auto-phylo",
    "comments": [],
    "gui": false,
    "gui_command": "",
    "podman": "untested",
    "singularity": "untested",
    "invocation_general": "docker run --rm -v /your/data/dir:/data -v /var/run/docker.sock:/var/run/docker.sock pegi3s/auto-phylo",
    "usual_invocation_specific": "",
    "usual_invocation_specific_comments": [
      "Your input files should be in the same directory as the config file for docknrun. Please note that you must have a pipeline and a config file."
    ],
    "test_invocation_specific": "",
    "test_data_url": "",
    "test_results_url": "",
    "icon": "",
    "input_data_type": [],
    "auto_tests": [
      {
        "docker_image": "pegi3s/auto-phylo",
        "input_files": [],
        "output_dir": "",
        "output_file": "",
        "add_config": "",
        "commands": ""
      }
    ]
  },
  {
    "name": "auto-phylo-pipeliner",
    "description": "GUI Designer for auto-phylo",
    "status": "Usable",
    "recommended": [
      {
        "version": "0.1.dev32",
        "date": ""
      }
    ],
    "latest": "0.1.dev32",
    "bug_found": [],
    "not_working": [],
    "no_longer_tested": [
      "0.1.dev31",
      "0.1.dev30",
      "0.1.dev27",
      "0.1.dev23"
    ],
    "manual_url": "http://evolution6.i3s.up.pt/static/auto-phylo/v2/docs/pipeliner.html",
    "source_url": "https://github.com/pegi3s/auto-phylo-pipeliner",
    "comments": [],
    "gui": true,
    "gui_command": " ",
    "podman": "untested",
    "singularity": "untested",
    "invocation_general": "",
    "usual_invocation_specific": "",
    "usual_invocation_specific_comments": [],
    "test_invocation_specific": "",
    "test_data_url": "",
    "test_results_url": "",
    "icon": "",
    "input_data_type": [],
    "auto_tests": [
      {
        "docker_image": "pegi3s/auto-phylo-pipeliner",
        "input_files": [],
        "output_dir": "",
        "output_file": "",
        "add_config": "",
        "commands": ""
      }
    ]
  },
  {
    "name": "dib",
    "description": "Drosophila Inversion Breakpoints",
    "status": "Usable",
    "recommended": [
      {
        "version": "1.0.0",
        "date": ""
      }
    ],
    "latest": "1.0.0",
    "bug_found": [],
    "not_working": [],
    "no_longer_tested": [],
    "manual_url": "https://github.com/pegi3s/drosophila-inversion-breakpoints/blob/master/DIB_manual.pdf",
    "source_url": "https://github.com/pegi3s/drosophila-inversion-breakpoints",
    "comments": [],
    "gui": false,
    "gui_command": "",
    "podman": "untested",
    "singularity": "untested",
    "invocation_general": "docker run -v /var/run/docker.sock:/var/run/docker.sock -v /your/data/dir:/data pegi3s/dib",
    "usual_invocation_specific": "bash -c \"./simulate_data /data/referenceFile /your/data/dir 40 50 s\"",
    "usual_invocation_specific_comments": [
      "'40' can be changed to the position of the first breakpoint and '50' to the position of the second breakpoint. 's' can be changed to other Wgsim options, in this case it uses standard values."
    ],
    "test_invocation_specific": "",
    "test_data_url": "",
    "test_results_url": "",
    "icon": "",
    "input_data_type": [
      "reference"
    ],
    "auto_tests": [
      {
        "docker_image": "pegi3s/dib",
        "input_files": [],
        "output_dir": "",
        "output_file": "",
        "add_config": "",
        "commands": ""
      }
    ]
  },
  {
    "name": "gbif_gis",
    "description": "Species distribution software",
    "status": "Usable",
    "recommended": [
      {
        "version": "06.06.2019",
        "date": ""
      }
    ],
    "latest": "06.06.2019",
    "bug_found": [],
    "not_working": [],
    "no_longer_tested": [],
    "manual_url": "https://www.gbif.org/what-is-gbif",
    "source_url": "https://github.com/pegi3s/dockerfiles/tree/master/gbif_gis",
    "comments": [],
    "gui": false,
    "gui_command": "",
    "podman": "untested",
    "singularity": "untested",
    "invocation_general": "docker run --rm -v /your/data/dir:/data pegi3s/gbif_gis",
    "usual_invocation_specific": " bash -c \"/opt/run Solanum acaule*\"",
    "usual_invocation_specific_comments": [
      "'Solanum acaule*' to the name of the species of interest.",
      "Your input files must be in the same directory as the config file for docknrun."
    ],
    "test_invocation_specific": " bash -c \"/opt/run Solanum acaule*\"",
    "test_data_url": "http://evolution6.i3s.up.pt/static/pegi3s/dockerfiles/input_test_data/wc2-5.zip",
    "test_results_url": "http://evolution6.i3s.up.pt/static/pegi3s/dockerfiles/output_test_data/gbif_gis_output.zip",
    "icon": "https://avatars.githubusercontent.com/u/1963797?s=200&v=4",
    "input_data_type": [],
    "auto_tests": [
      {
        "docker_image": "pegi3s/gbif_gis",
        "input_files": [],
        "output_dir": "",
        "output_file": "",
        "add_config": "",
        "commands": ""
      }
    ]
  },
  {
    "name": "gis",
    "description": "Species distribution software",
    "status": "Usable",
    "recommended": [
      {
        "version": "06.06.2019",
        "date": ""
      }
    ],
    "latest": "06.06.2019",
    "bug_found": [],
    "not_working": [],
    "no_longer_tested": [],
    "manual_url": "https://en.wikipedia.org/wiki/Geographic_information_system",
    "source_url": "https://github.com/pegi3s/dockerfiles/tree/master/gis",
    "comments": [],
    "gui": false,
    "gui_command": "",
    "podman": "untested",
    "singularity": "untested",
    "invocation_general": "docker run --rm -v /your/data/dir:/data pegi3s/gis",
    "usual_invocation_specific": " bash -c \"Rscript /opt/gis && pdfcrop --margins '0 0 0 0' /data/Rplots.pdf && rm /data/Rplots.pdf\"",
    "usual_invocation_specific_comments": [
      "Your input files must be in the same directory as the config file for docknrun. Make sure your input is a '.csv' file with the header \"latitude,longitude\"."
    ],
    "test_invocation_specific": " bash -c \"Rscript /opt/gis && pdfcrop --margins '0 0 0 0' /data/Rplots.pdf && rm /data/Rplots.pdf\"",
    "test_data_url": "http://evolution6.i3s.up.pt/static/pegi3s/dockerfiles/input_test_data/gis.zip",
    "test_results_url": "http://evolution6.i3s.up.pt/static/pegi3s/dockerfiles/output_test_data/gis_output.zip",
    "icon": "",
    "input_data_type": [],
    "auto_tests": [
      {
        "docker_image": "pegi3s/gis",
        "input_files": [],
        "output_dir": "",
        "output_file": "",
        "add_config": "",
        "commands": ""
      }
    ]
  },
  {
    "name": "ngs_pipeliner",
    "description": "NGS pipeliner",
    "status": "Usable",
    "recommended": [
      {
        "version": "1.0.1",
        "date": ""
      }
    ],
    "latest": "1.0.1",
    "bug_found": [],
    "not_working": [],
    "no_longer_tested": [
      "1.0.0"
    ],
    "manual_url": "https://github.com/pegi3s/dockerfiles/blob/master/ngs_pipeliner/manual.md",
    "source_url": "https://github.com/pegi3s/dockerfiles/tree/master/ngs_pipeliner",
    "comments": [],
    "gui": true,
    "gui_command": " ",
    "podman": "untested",
    "singularity": "untested",
    "invocation_general": "",
    "usual_invocation_specific": "",
    "usual_invocation_specific_comments": [],
    "test_invocation_specific": "",
    "test_data_url": "",
    "test_results_url": "",
    "icon": "",
    "input_data_type": [],
    "auto_tests": [
      {
        "docker_image": "pegi3s/ngs_pipeliner",
        "input_files": [],
        "output_dir": "",
        "output_file": "",
        "add_config": "",
        "commands": ""
      }
    ]
  },
  {
    "name": "prosplign-procompart",
    "description": "Gene annotation",
    "status": "Usable",
    "recommended": [
      {
        "version": "1.0.1",
        "date": ""
      }
    ],
    "latest": "1.0.1",
    "bug_found": [],
    "not_working": [],
    "no_longer_tested": [
      "1.0.0"
    ],
    "manual_url": "https://www.ncbi.nlm.nih.gov/sutils/static/prosplign/prosplign.html",
    "source_url": "https://ftp.ncbi.nlm.nih.gov/genomes/TOOLS/ProSplign/",
    "comments": [],
    "gui": false,
    "gui_command": "",
    "podman": "untested",
    "singularity": "untested",
    "invocation_general": "docker run --rm -v /your/data/dir:/data pegi3s/prosplign-procompart",
    "usual_invocation_specific": " prosplign-procompart-pipeline /data/nuc_fastaFile /data/prot_fastaFile /data/output/out_name.fasta",
    "usual_invocation_specific_comments": [
      "'out_name' to the name of your output file."
    ],
    "test_invocation_specific": "",
    "test_data_url": "",
    "test_results_url": "",
    "icon": "",
    "input_data_type": [
      "nuc_fasta",
      "prot_fasta"
    ],
    "auto_tests": [
      {
        "docker_image": "pegi3s/prosplign-procompart",
        "input_files": [],
        "output_dir": "",
        "output_file": "",
        "add_config": "",
        "commands": ""
      }
    ]
  },
  {
    "name": "splign-compart",
    "description": "Gene annotation",
    "status": "Usable",
    "recommended": [
      {
        "version": "1.2.1",
        "date": ""
      }
    ],
    "latest": "1.2.1",
    "bug_found": [],
    "not_working": [],
    "no_longer_tested": [
      "1.2.0",
      "1.1.1",
      "1.1.0",
      "1.0.0"
    ],
    "manual_url": "https://hub.docker.com/r/pegi3s/splign-compart/",
    "source_url": "https://ftp.ncbi.nlm.nih.gov/genomes/TOOLS/splign/",
    "comments": [],
    "gui": false,
    "gui_command": "",
    "podman": "untested",
    "singularity": "untested",
    "invocation_general": "docker run --rm -v /your/data/dir:/data pegi3s/splign-compart",
    "usual_invocation_specific": " splign-compart-pipeline /data/nuc_subject_fastaFile /data/query_nucleotide_CDSFile /data/output/out_name.fasta",
    "usual_invocation_specific_comments": [
      "'out_name' to the name of your output file."
    ],
    "test_invocation_specific": " splign-compart-pipeline /data/test/data/dsim-all-chromosome-r2.02.fasta /data/test/data/dmel-sod.fasta /data/test/results/splign-compart_test.fasta",
    "test_data_url": "",
    "test_results_url": "",
    "icon": "",
    "input_data_type": [
      "nuc_subject_fasta",
      "query_nucleotide_CDS"
    ],
    "auto_tests": [
      {
        "docker_image": "pegi3s/splign-compart",
        "input_files": [],
        "output_dir": "",
        "output_file": "",
        "add_config": "",
        "commands": ""
      }
    ]
  },
  {
    "name": "taxodros_gis",
    "description": "Species distribution software",
    "status": "Usable",
    "recommended": [
      {
        "version": "06.06.2019",
        "date": ""
      }
    ],
    "latest": "06.06.2019",
    "bug_found": [],
    "not_working": [],
    "no_longer_tested": [],
    "manual_url": "https://www.taxodros.uzh.ch/history.php",
    "source_url": "https://github.com/pegi3s/dockerfiles/tree/master/taxodros_gis",
    "comments": [],
    "gui": false,
    "gui_command": "",
    "podman": "untested",
    "singularity": "untested",
    "invocation_general": "docker run --rm -v /your/data/dir:/data pegi3s/taxodros_gis",
    "usual_invocation_specific": " bash -c \"/opt/run 'melanogaster 1' && mv /data/data.csv /data/output && mv /data/statistics /data/output && mv /data/Rplots-crop.pdf /data/output\"",
    "usual_invocation_specific_comments": [
      "'melanogaster 1' can be changed to the name of any other taxodros name.",
      "Your input files should be in the same directory as the config file for docknrun."
    ],
    "test_invocation_specific": " bash -c \"/opt/run 'melanogaster 1' && mv /data/data.csv /data/test/results && mv /data/statistics /data/tesst/results && mv /data/Rplots-crop.pdf /data/test/results\"",
    "test_data_url": "http://evolution6.i3s.up.pt/static/pegi3s/dockerfiles/input_test_data/wc2-5.zip",
    "test_results_url": "http://evolution6.i3s.up.pt/static/pegi3s/dockerfiles/output_test_data/taxodros_gis_output.zip",
    "icon": "",
    "input_data_type": [],
    "auto_tests": [
      {
        "docker_image": "pegi3s/taxodros_gis",
        "input_files": [],
        "output_dir": "",
        "output_file": "",
        "add_config": "",
        "commands": ""
      }
    ]
  },
  {
    "name": "auto-pss-genome",
    "description": "Automatic detection of positively selected sites in complete genomes",
    "status": "Usable",
    "recommended": [
      {
        "version": "1.12.0",
        "date": ""
      }
    ],
    "latest": "1.12.0",
    "bug_found": [],
    "not_working": [],
    "no_longer_tested": [
      "1.11.0",
      "1.10.0",
      "1.9.0",
      "1.8.0",
      "1.7.0",
      "1.6.0",
      "1.5.1",
      "1.5.0"
    ],
    "manual_url": "https://github.com/pegi3s/auto-pss-genome",
    "source_url": "https://github.com/pegi3s/auto-pss-genome",
    "comments": [],
    "gui": false,
    "gui_command": "",
    "podman": "untested",
    "singularity": "untested",
    "invocation_general": "docker run --rm -v /tmp:/tmp -v /var/run/docker.sock:/var/run/docker.sock -v /your/data/dir:/working_dir --rm pegi3s/auto-pss-genome",
    "usual_invocation_specific": " /compi run -o --logs /working_dir/logs --num-tasks 8 -- --host_working_dir /working_dir --compi_num_tasks 8",
    "usual_invocation_specific_comments": [
      "Create an folder named 'input' in the same directory as the config file of docknrun."
    ],
    "test_invocation_specific": "",
    "test_data_url": "",
    "test_results_url": "",
    "icon": "",
    "input_data_type": [],
    "auto_tests": [
      {
        "docker_image": "pegi3s/auto-pss-genome",
        "input_files": [],
        "output_dir": "",
        "output_file": "",
        "add_config": "",
        "commands": ""
      }
    ]
  },
  {
    "name": "cga",
    "description": "Conserved Genome Annotation Pipeline (CGA)",
    "status": "Usable",
    "recommended": [
      {
        "version": "1.0.1",
        "date": ""
      }
    ],
    "latest": "1.0.1",
    "bug_found": [],
    "not_working": [],
    "no_longer_tested": [
      "1.0.0"
    ],
    "manual_url": "https://github.com/pegi3s/cga",
    "source_url": "https://github.com/pegi3s/cga",
    "comments": [],
    "gui": false,
    "gui_command": "",
    "podman": "untested",
    "singularity": "untested",
    "invocation_general": "docker run --user \"$(id -u):$(id -g)\" --rm -v /your/data/dir:/working_dir pegi3s/cga",
    "usual_invocation_specific": " init_working_dir.sh /workin_dir",
    "usual_invocation_specific_comments": [
      "Before runing the command, create a directory under /data called 'cga_working_dir', with three files (cga.params, input.fasta and ref.fasta)."
    ],
    "test_invocation_specific": "",
    "test_data_url": "",
    "test_results_url": "",
    "icon": "",
    "input_data_type": [],
    "auto_tests": [
      {
        "docker_image": "pegi3s/cga",
        "input_files": [],
        "output_dir": "",
        "output_file": "",
        "add_config": "",
        "commands": ""
      }
    ]
  },
  {
    "name": "check-cds",
    "description": "Compi pipeline to produce valid CDS files",
    "status": "Usable",
    "recommended": [
      {
        "version": "1.3.0",
        "date": ""
      }
    ],
    "latest": "1.3.0",
    "bug_found": [],
    "not_working": [],
    "no_longer_tested": [
      "1.2.0",
      "1.1.0",
      "1.0.0"
    ],
    "manual_url": "https://github.com/pegi3s/check-cds",
    "source_url": "https://github.com/pegi3s/check-cds",
    "comments": [],
    "gui": false,
    "gui_command": "",
    "podman": "untested",
    "singularity": "untested",
    "invocation_general": "docker run --rm -v /your/data/dir:/input -v /data/output:/output pegi3s/check-cds",
    "usual_invocation_specific": "-- -r seq4",
    "usual_invocation_specific_comments": [
      "'seq4' can be changed to the string that must be found in the reference sequence.",
      "Your input must be in the same directory as the config file for docknrun."
    ],
    "test_invocation_specific": "",
    "test_data_url": "",
    "test_results_url": "",
    "icon": "",
    "input_data_type": [],
    "auto_tests": [
      {
        "docker_image": "pegi3s/check-cds",
        "input_files": [],
        "output_dir": "",
        "output_file": "",
        "add_config": "",
        "commands": ""
      }
    ]
  },
  {
    "name": "ipssa",
    "description": "PSS detection",
    "status": "Usable",
    "recommended": [
      {
        "version": "1.2.5",
        "date": ""
      }
    ],
    "latest": "1.2.5",
    "bug_found": [],
    "not_working": [],
    "no_longer_tested": [
      "1.2.4",
      "1.2.3",
      "1.2.1",
      "1.2.0",
      "1.1.0",
      "1.0.2",
      "1.0.1",
      "1.0.0"
    ],
    "manual_url": "https://github.com/pegi3s/ipssa",
    "source_url": "https://github.com/pegi3s/ipssa",
    "comments": [],
    "gui": false,
    "gui_command": "",
    "podman": "untested",
    "singularity": "untested",
    "invocation_general": "docker run -v /tmp:/tmp -v /var/run/docker.sock:/var/run/docker.sock -v /your/data/dir:/working_dir -v /your/data/dir/input:/input --rm pegi3s/ipssa",
    "usual_invocation_specific": "  -o --logs /working_dir/logs --num-tasks 6 -- --host_working_dir /your/data/dir/pipeline_working_dir",
    "usual_invocation_specific_comments": [],
    "test_invocation_specific": "",
    "test_data_url": "",
    "test_results_url": "",
    "icon": "",
    "input_data_type": [],
    "auto_tests": [
      {
        "docker_image": "pegi3s/ipssa",
        "input_files": [],
        "output_dir": "",
        "output_file": "",
        "add_config": "",
        "commands": ""
      }
    ]
  },
  {
    "name": "pss-fs",
    "description": "Fast identification of genes with positively selected amino acid sites for detailed analyses",
    "status": "Usable",
    "recommended": [
      {
        "version": "1.12.0",
        "date": ""
      }
    ],
    "latest": "1.12.0",
    "bug_found": [],
    "not_working": [],
    "no_longer_tested": [
      "1.11.0",
      "1.10.0",
      "1.9.0",
      "1.8.0",
      "1.7.1",
      "1.7.0",
      "1.6.0",
      "1.5.0"
    ],
    "manual_url": "https://github.com/pegi3s/pss-fs",
    "source_url": "https://github.com/pegi3s/pss-fs",
    "comments": [],
    "gui": false,
    "gui_command": "",
    "podman": "untested",
    "singularity": "untested",
    "invocation_general": "docker run -v /your/data/dir:/working_dir --rm pegi3s/pss-fs",
    "usual_invocation_specific": " --logs /working_dir/logs",
    "usual_invocation_specific_comments": [],
    "test_invocation_specific": "",
    "test_data_url": "",
    "test_results_url": "",
    "icon": "",
    "input_data_type": [],
    "auto_tests": [
      {
        "docker_image": "pegi3s/pss-fs",
        "input_files": [],
        "output_dir": "",
        "output_file": "",
        "add_config": "",
        "commands": ""
      }
    ]
  },
  {
    "name": "pss-genome-fs",
    "description": "Fast identification of genes with positively selected amino acid sites for detailed analyses in complete genomes",
    "status": "Usable",
    "recommended": [
      {
        "version": "1.14.0",
        "date": ""
      }
    ],
    "latest": "1.14.0",
    "bug_found": [],
    "not_working": [],
    "no_longer_tested": [
      "1.13.0",
      "1.12.0",
      "1.11.0",
      "1.10.0",
      "1.9.0",
      "1.8.0",
      "1.7.0",
      "1.6.0"
    ],
    "manual_url": "https://github.com/pegi3s/pss-genome-fs",
    "source_url": "https://github.com/pegi3s/pss-genome-fs",
    "comments": [],
    "gui": false,
    "gui_command": "",
    "podman": "untested",
    "singularity": "untested",
    "invocation_general": "",
    "usual_invocation_specific": "",
    "usual_invocation_specific_comments": [],
    "test_invocation_specific": "",
    "test_data_url": "",
    "test_results_url": "",
    "icon": "",
    "input_data_type": [],
    "auto_tests": [
      {
        "docker_image": "pegi3s/pss-genome-fs",
        "input_files": [],
        "output_dir": "",
        "output_file": "",
        "add_config": "",
        "commands": ""
      }
    ]
  },
  {
    "name": "two-way-blast",
    "description": "Find orthologs using a two-way BLAST (or BLAST reciprocal best hits) approach",
    "status": "Usable",
    "recommended": [
      {
        "version": "1.1.2",
        "date": ""
      }
    ],
    "latest": "1.1.2",
    "bug_found": [],
    "not_working": [],
    "no_longer_tested": [
      "1.1.1",
      "1.1.0",
      "1.0.0"
    ],
    "manual_url": "https://sing-group.org/compihub/explore/5e2db6f9e1138700316488be#overview",
    "source_url": "https://github.com/pegi3s/two-way-blast",
    "comments": [],
    "gui": false,
    "gui_command": "",
    "podman": "untested",
    "singularity": "untested",
    "invocation_general": "docker run --rm -v /your/input/data/dir:/input -v /path/to/output/data/dir:/output pegi3s/two-way-blast",
    "usual_invocation_specific": " --num-tasks 8 -q -- --input_dir /data/inputFolder --output_dir /data/output --reference_file /data/fastaFile --blast_type tblastx",
    "usual_invocation_specific_comments": [
      "'tblastx' to the type of BLAST you want to use (e.g. tblastn)."
    ],
    "test_invocation_specific": "",
    "test_data_url": "",
    "test_results_url": "",
    "icon": "",
    "input_data_type": [
      "input",
      "fasta"
    ],
    "auto_tests": [
      {
        "docker_image": "pegi3s/two-way-blast",
        "input_files": [],
        "output_dir": "",
        "output_file": "",
        "add_config": "",
        "commands": ""
      }
    ]
  },
  {
    "name": "haddock24-builder",
    "description": "Protein docking prediction",
    "status": "Usable",
    "recommended": [
      {
        "version": "2.4.2",
        "date": ""
      }
    ],
    "latest": "2.4.2",
    "bug_found": [],
    "not_working": [],
    "no_longer_tested": [
      "2.4.1",
      "2.4"
    ],
    "manual_url": "https://wenmr.science.uu.nl/haddock2.4/",
    "source_url": "https://wenmr.science.uu.nl/haddock2.4/",
    "comments": [],
    "gui": false,
    "gui_command": "",
    "podman": "untested",
    "singularity": "untested",
    "invocation_general": "docker run --rm -v /var/run/docker.sock:/var/run/docker.sock -v your/data/dir:/data pegi3s/haddock24-builder",
    "usual_invocation_specific": "  bash -c \"cp /data/inputFolder ./ && docker build ./ -t pegi3s/haddock24\"",
    "usual_invocation_specific_comments": [
      "Prior to running the comman, you should visit pegi3s webpage for instructions and downloadable files. After running the command, replace it for 'bash -c \u201c./your_mode\u201d'. 'your_mode to pdna_run, plig_run, etc."
    ],
    "test_invocation_specific": "",
    "test_data_url": "",
    "test_results_url": "",
    "icon": "",
    "input_data_type": [
      "input"
    ],
    "auto_tests": [
      {
        "docker_image": "pegi3s/haddock24-builder",
        "input_files": [],
        "output_dir": "",
        "output_file": "",
        "add_config": "",
        "commands": ""
      }
    ]
  },
  {
    "name": "hdock-builder",
    "description": "Protein docking prediction",
    "status": "Usable",
    "recommended": [
      {
        "version": "1.1",
        "date": ""
      }
    ],
    "latest": "1.1",
    "bug_found": [],
    "not_working": [],
    "no_longer_tested": [],
    "manual_url": "http://hdock.phys.hust.edu.cn/",
    "source_url": "http://hdock.phys.hust.edu.cn/",
    "comments": [],
    "gui": false,
    "gui_command": "",
    "podman": "untested",
    "singularity": "untested",
    "invocation_general": "docker run --rm -v /your/data/dir:/data pegi3s/hdock",
    "usual_invocation_specific": "bash -c \"/exe/hdock /data/pdb1File /data/pdb2File -out /exe/Hdock.out && /exe/createpl /exe/Hdock.out /exe/top100.pdb -nmax 100 -complex -models && mkdir -p /data/output && cp *.pdb /data/output\"",
    "usual_invocation_specific_comments": [
      "Prior to running the command, you should visit pegi3s webpage for instructions and downloadable files. After running the command, replace it for 'bash -c \u201c./your_mode\u201d'. 'your_mode to pdna_run, plig_run, etc."
    ],
    "test_invocation_specific": "",
    "test_data_url": "",
    "test_results_url": "",
    "icon": "",
    "input_data_type": [
      "pdb1",
      "pdb2"
    ],
    "auto_tests": [
      {
        "docker_image": "pegi3s/hdock-builder",
        "input_files": [],
        "output_dir": "",
        "output_file": "",
        "add_config": "",
        "commands": ""
      }
    ]
  },
  {
    "name": "pydock3-builder",
    "description": "Protein docking prediction",
    "status": "Usable",
    "recommended": [
      {
        "version": "3.2.3",
        "date": ""
      }
    ],
    "latest": "3.2.3",
    "bug_found": [],
    "not_working": [],
    "no_longer_tested": [],
    "manual_url": "https://github.com/brianjimenez/pydock_tutorial",
    "source_url": "https://life.bsc.es/pid/pydock/",
    "comments": [],
    "gui": false,
    "gui_command": "",
    "podman": "untested",
    "singularity": "untested",
    "invocation_general": "",
    "usual_invocation_specific": "",
    "usual_invocation_specific_comments": [],
    "test_invocation_specific": "",
    "test_data_url": "",
    "test_results_url": "",
    "icon": "",
    "input_data_type": [],
    "auto_tests": [
      {
        "docker_image": "pegi3s/pydock3-builder",
        "input_files": [],
        "output_dir": "",
        "output_file": "",
        "add_config": "",
        "commands": ""
      }
    ]
  },
  {
    "name": "trinity",
    "description": "de novo transcript assembly and quantification",
    "status": "Usable",
    "recommended": [
      {
        "version": "2.11.0",
        "date": ""
      }
    ],
    "latest": "2.11.0",
    "bug_found": [],
    "not_working": [],
    "no_longer_tested": [],
    "manual_url": "https://github.com/trinityrnaseq/trinityrnaseq/wiki",
    "source_url": "https://github.com/trinityrnaseq/trinityrnaseq",
    "comments": [],
    "gui": false,
    "gui_command": "",
    "podman": "untested",
    "singularity": "untested",
    "invocation_general": "docker run --rm -v /your/data/dir:/data pegi3s/trinity",
    "usual_invocation_specific": "Trinity --seqType fq --left /data/fastq_gz1File --right /data/fastq_gz2File --CPU 4 --max_memory 8G --output /data/output/trinity_results",
    "usual_invocation_specific_comments": [
      "'CPU 4' to set a number of cores appropiate to your hardware configuration. 'max_memory 8G' to set an amount of RAM memory appropiate to your hardware configuration. 'trinity_results' to the output file name."
    ],
    "test_invocation_specific": "",
    "test_data_url": "",
    "test_results_url": "",
    "icon": "https://raw.githubusercontent.com/wiki/trinityrnaseq/trinityrnaseq/images/TrinityCompositeLogo.png",
    "input_data_type": [],
    "auto_tests": [
      {
        "docker_image": "pegi3s/trinity",
        "input_files": [],
        "output_dir": "",
        "output_file": "",
        "add_config": "",
        "commands": ""
      }
    ]
  },
  {
    "name": "biopython",
    "description": "Multipurpose Python tools for computational molecular biology",
    "status": "Usable",
    "recommended": [
      {
        "version": "1.78",
        "date": ""
      }
    ],
    "latest": "1.78",
    "bug_found": [],
    "not_working": [],
    "no_longer_tested": [],
    "manual_url": "http://biopython.org/DIST/docs/tutorial/Tutorial.html",
    "source_url": "https://github.com/biopython/biopython",
    "comments": [],
    "gui": false,
    "gui_command": "",
    "podman": "untested",
    "singularity": "untested",
    "invocation_general": "docker run --rm -v /your/data/dir:/data pegi3s/biopython",
    "usual_invocation_specific": " bash -c \"python3 /data/python_scriptFile\"",
    "usual_invocation_specific_comments": [],
    "test_invocation_specific": "",
    "test_data_url": "",
    "test_results_url": "",
    "icon": "https://raw.githubusercontent.com/biopython/biopython/master/Doc/images/biopython_logo.svg",
    "input_data_type": [
      "python_script"
    ],
    "auto_tests": [
      {
        "docker_image": "pegi3s/biopython",
        "input_files": [],
        "output_dir": "",
        "output_file": "",
        "add_config": "",
        "commands": ""
      }
    ]
  },
  {
    "name": "docker-manager",
    "description": "Docker images manager",
    "status": "Usable",
    "recommended": [
      {
        "version": "v1.1",
        "date": "25/11/2024"
      }
    ],
    "latest": "v1.1",
    "bug_found": [
      {
        "version": "v1",
        "description": "The status is always 'True'"
      }
    ],
    "not_working": [],
    "no_longer_tested": [
      "v1"
    ],
    "manual_url": "https://hub.docker.com/r/pegi3s/docker-manager/",
    "source_url": "https://github.com/pegi3s/dockerfiles/tree/master/docker-manager",
    "comments": [],
    "gui": true,
    "gui_command": " ",
    "podman": "untested",
    "singularity": "untested",
    "invocation_general": "",
    "usual_invocation_specific": "",
    "usual_invocation_specific_comments": [],
    "test_invocation_specific": "",
    "test_data_url": "http://evolution6.i3s.up.pt/static/pegi3s/dockerfiles/input_test_data/empty",
    "test_results_url": "",
    "icon": "",
    "input_data_type": [],
    "auto_tests": [
      {
        "docker_image": "pegi3s/docker-manager",
        "input_files": [],
        "output_dir": "",
        "output_file": "",
        "add_config": "",
        "commands": ""
      }
    ]
  },
  {
    "name": "formfind",
    "description": "HTML processing",
    "status": "Usable",
    "recommended": [
      {
        "version": "1.0",
        "date": ""
      }
    ],
    "latest": "1.0",
    "bug_found": [],
    "not_working": [],
    "no_longer_tested": [],
    "manual_url": "https://github.com/VR51/formfind",
    "source_url": "https://github.com/VR51/formfind",
    "comments": [],
    "gui": false,
    "gui_command": "",
    "podman": "untested",
    "singularity": "untested",
    "invocation_general": "docker run --rm -v /your/data/dir:/data pegi3s/formfind",
    "usual_invocation_specific": "bash -c \"/opt/run <website-URL> && mv /data/info /data/output\"",
    "usual_invocation_specific_comments": [
      "'website-URL' to the URL address of the website you want to extract the information."
    ],
    "test_invocation_specific": "",
    "test_data_url": "",
    "test_results_url": "",
    "icon": "",
    "input_data_type": [],
    "auto_tests": [
      {
        "docker_image": "pegi3s/formfind",
        "input_files": [],
        "output_dir": "",
        "output_file": "",
        "add_config": "",
        "commands": ""
      }
    ]
  },
  {
    "name": "r_project",
    "description": "Statistical computing",
    "status": "Usable",
    "recommended": [
      {
        "version": "4.3.3",
        "date": ""
      }
    ],
    "latest": "4.3.3",
    "bug_found": [],
    "not_working": [],
    "no_longer_tested": [
      "4.1.1",
      "3.6.0"
    ],
    "manual_url": "https://cran.r-project.org/manuals.html",
    "source_url": "https://cran.r-project.org/src/base/",
    "comments": [
      "You must provide an R script File that ends with .R. See the test data for inspiration."
    ],
    "gui": false,
    "gui_command": "",
    "podman": "untested",
    "singularity": "untested",
    "invocation_general": "docker run --rm -it -v /your/data/dir:/data pegi3s/r_project",
    "usual_invocation_specific": " R",
    "usual_invocation_specific_comments": [],
    "test_invocation_specific": " R",
    "test_data_url": "http://evolution6.i3s.up.pt/static/pegi3s/dockerfiles/input_test_data/R_test.R",
    "test_results_url": "http://evolution6.i3s.up.pt/static/pegi3s/dockerfiles/output_test_data/r_project_output.zip",
    "icon": "https://www.r-project.org/logo/Rlogo.svg",
    "input_data_type": [
      "R_script"
    ],
    "auto_tests": [
      {
        "docker_image": "pegi3s/r_project",
        "input_files": [],
        "output_dir": "",
        "output_file": "",
        "add_config": "",
        "commands": ""
      }
    ]
  },
  {
    "name": "docker",
    "description": "Docker image that allows running Docker images",
    "status": "Usable",
    "recommended": [
      {
        "version": "20.04",
        "date": "25/11/2024"
      }
    ],
    "latest": "20.04",
    "bug_found": [],
    "not_working": [],
    "no_longer_tested": [
      "18.04"
    ],
    "manual_url": "https://github.com/pegi3s/dockerfiles/blob/master/tutorials/docker-in-docker.md",
    "comments": [
      "Docker image that allows running Docker images"
    ],
    "gui": false,
    "gui_command": "",
    "podman": "untested",
    "singularity": "untested",
    "invocation_general": "",
    "usual_invocation_specific": "",
    "usual_invocation_specific_comments": [
      "A base image with a Docker installation. Not intended to be run."
    ],
    "test_invocation_specific": "",
    "test_data_url": "http://evolution6.i3s.up.pt/static/pegi3s/dockerfiles/input_test_data/empty",
    "test_results_url": "",
    "icon": "assets/icons/logos/docker-mark-blue.svg",
    "input_data_type": [],
    "auto_tests": [
      {
        "docker_image": "pegi3s/docker",
        "input_files": [],
        "output_dir": "",
        "output_file": "",
        "add_config": "",
        "commands": ""
      }
    ]
  },
  {
    "name": "biopython_utilities",
    "description": "Biopython utilities",
    "status": "Usable",
    "recommended": [
      {
        "version": "1.78_0.2.0",
        "date": ""
      }
    ],
    "latest": "1.78_0.2.0",
    "bug_found": [],
    "not_working": [],
    "no_longer_tested": [
      "1.78_0.1.0"
    ],
    "manual_url": "https://github.com/pegi3s/dockerfiles/blob/master/biopython_utilities/README.md",
    "source_url": "https://github.com/pegi3s/dockerfiles/tree/master/biopython_utilities",
    "comments": [],
    "gui": false,
    "gui_command": "",
    "podman": "untested",
    "singularity": "untested",
    "invocation_general": "docker run --rm -v /your/data/dir:/data pegi3s/biopython_utilities",
    "usual_invocation_specific": " convert_tree.py -i /data/inputFile -if newick -o /data/output/out_name -of nexus",
    "usual_invocation_specific_comments": [
      "'newick' and 'nexus' can be changed to other file formats (e.g. nexml, phyloxml or cdao)."
    ],
    "test_invocation_specific": " convert_tree.py -i /data/test/data/nexus.nex -if newick -o /data/test/results/biopython_utilities_test -of nexus",
    "test_data_url": "",
    "test_results_url": "",
    "icon": "https://raw.githubusercontent.com/biopython/biopython/master/Doc/images/biopython_logo.svg",
    "input_data_type": [
      "input"
    ],
    "auto_tests": [
      {
        "docker_image": "pegi3s/biopython_utilities",
        "input_files": [],
        "output_dir": "",
        "output_file": "",
        "add_config": "",
        "commands": ""
      }
    ]
  },
  {
    "name": "blast_utilities",
    "description": "BLAST utilities",
    "status": "Usable",
    "recommended": [
      {
        "version": "0.3.0",
        "date": "25/11/2024"
      }
    ],
    "latest": "0.3.0",
    "bug_found": [],
    "not_working": [],
    "no_longer_tested": [
      "0.2.0",
      "0.1.0"
    ],
    "manual_url": "https://github.com/pegi3s/dockerfiles/blob/master/blast_utilities/README.md",
    "source_url": "https://github.com/pegi3s/dockerfiles/tree/master/blast_utilities",
    "comments": [],
    "gui": false,
    "gui_command": "",
    "podman": "untested",
    "singularity": "untested",
    "invocation_general": "docker run --rm -v /your/data/dir:/data pegi3s/blast_utilities",
    "usual_invocation_specific": " blast_and_extract /data/fastaFile /data/fastaprotFile 100 500 0.05 /data/output/output_genome_regions",
    "usual_invocation_specific_comments": [
      "The numbers refer to `max_distance_hits`, `extra_sequence` and `evalue`, respectively."
    ],
    "test_invocation_specific": " blast_and_extract /data/test/data/Drosophila_melanogaster_genome /data/test/data/protein_query.fasta 100 500 0.05 /data/test/results/blast_utilities_test",
    "test_data_url": "http://evolution6.i3s.up.pt/static/pegi3s/dockerfiles/input_test_data/blast_utilities.zip",
    "test_results_url": "http://evolution6.i3s.up.pt/static/pegi3s/dockerfiles/output_test_data/blast_utilities_output.zip",
    "icon": "",
    "input_data_type": [
      "fasta",
      "fastaprot"
    ],
    "auto_tests": [
      {
        "docker_image": "pegi3s/blast_utilities",
        "input_files": [],
        "output_dir": "",
        "output_file": "",
        "add_config": "",
        "commands": ""
      }
    ]
  },
  {
    "name": "cds2gff3-maker",
    "description": "Creation of GFF3 files from CDS and genome",
    "status": "Usable",
    "recommended": [
      {
        "version": "1.1.0",
        "date": "25/11/2024"
      }
    ],
    "latest": "1.1.0",
    "bug_found": [],
    "not_working": [],
    "no_longer_tested": [
      "1.0.1",
      "1.0.0"
    ],
    "manual_url": "https://github.com/pegi3s/dockerfiles/blob/master/cds2gff3-maker/README.md",
    "source_url": "https://github.com/pegi3s/dockerfiles/tree/master/cds2gff3-maker",
    "comments": [],
    "gui": false,
    "gui_command": "",
    "podman": "untested",
    "singularity": "untested",
    "invocation_general": "docker run --rm -v /tmp:/tmp -v /var/run/docker.sock:/var/run/docker.sock -v /your/data/dir:/data pegi3s/cds2gff3-maker",
    "usual_invocation_specific": " /data/fastaCDSFile /data/fastagenomeFile /data/output/output.gff3",
    "usual_invocation_specific_comments": [],
    "test_invocation_specific": " /data/test/data/6_Drosophila_melanogaster_CDS.fas /data/test/data/Drosophila_melanogaster_genome /data/test/results/cds2gff3-maker_test.gff3",
    "test_data_url": "http://evolution6.i3s.up.pt/static/pegi3s/dockerfiles/input_test_data/cds2gff3-maker.zip",
    "test_results_url": "http://evolution6.i3s.up.pt/static/pegi3s/dockerfiles/output_test_data/cds2gff3-maker_output.zip",
    "icon": "",
    "input_data_type": [
      "fastaCDS",
      "fastagenome"
    ],
    "auto_tests": [
      {
        "docker_image": "pegi3s/cds2gff3-maker",
        "input_files": [],
        "output_dir": "",
        "output_file": "",
        "add_config": "",
        "commands": ""
      }
    ]
  },
  {
    "name": "utilities",
    "description": "General utilities",
    "status": "Usable",
    "recommended": [
      {
        "version": "0.22.2",
        "date": ""
      }
    ],
    "latest": "0.22.2",
    "bug_found": [],
    "not_working": [],
    "no_longer_tested": [
      "0.22.1",
      "0.22.0",
      "0.21.2",
      "0.21.1",
      "0.21.0",
      "0.20.0",
      "0.19.0",
      "0.18.1"
    ],
    "manual_url": "https://github.com/pegi3s/dockerfiles/blob/master/utilities/MANUAL.md",
    "source_url": "https://github.com/pegi3s/dockerfiles/tree/master/utilities",
    "comments": [],
    "gui": false,
    "gui_command": "",
    "podman": "untested",
    "singularity": "untested",
    "invocation_general": "docker run --rm -v /your/data/dir:/data pegi3s/utilities",
    "usual_invocation_specific": " backup_file /data/inputFile",
    "usual_invocation_specific_comments": [
      "'backup_file' can be changed to other utilities (e.g. batch_fasta_remove_line_breaks, create batches, etc)."
    ],
    "test_invocation_specific": "",
    "test_data_url": "",
    "test_results_url": "",
    "icon": "",
    "input_data_type": [
      "input"
    ],
    "auto_tests": [
      {
        "docker_image": "pegi3s/utilities",
        "input_files": [],
        "output_dir": "",
        "output_file": "",
        "add_config": "",
        "commands": ""
      }
    ]
  },
  {
    "name": "orthologs-finder",
    "description": "Retrieve orthologous genes from DIOPT or Ensembl",
    "status": "Usable",
    "recommended": [
      {
        "version": "1.4.0",
        "date": ""
      }
    ],
    "latest": "1.4.0",
    "bug_found": [],
    "not_working": [],
    "no_longer_tested": [
      "1.2.0",
      "1.1.0",
      "1.0.2",
      "1.0.0"
    ],
    "manual_url": "https://github.com/pegi3s/orthologs-finder",
    "source_url": "https://github.com/pegi3s/orthologs-finder",
    "comments": [],
    "gui": false,
    "gui_command": "",
    "podman": "untested",
    "singularity": "untested",
    "invocation_general": "docker run --rm -it -v \"/your/data/dir:/data\" pegi3s/orthologs-finder",
    "usual_invocation_specific": "diopt-orthologs --input_species=7227 --output_species=9606 --gene_list_file=/data/gene_listFile --output=/data/output/out_pre",
    "usual_invocation_specific_comments": [
      "'7227' and '9606' with the taxonomy IDs of the input and output species.",
      "'out_pre' to the prefex of your output files."
    ],
    "test_invocation_specific": "",
    "test_data_url": "",
    "test_results_url": "",
    "icon": "",
    "input_data_type": [
      "gene_list"
    ],
    "auto_tests": [
      {
        "docker_image": "pegi3s/orthologs-finder",
        "input_files": [],
        "output_dir": "",
        "output_file": "",
        "add_config": "",
        "commands": ""
      }
    ]
  },
  {
    "name": "values2tree",
    "description": "Draw UPGMA trees using lists of values",
    "status": "Usable",
    "recommended": [
      {
        "version": "1.0.0",
        "date": ""
      }
    ],
    "latest": "1.0.0",
    "bug_found": [],
    "not_working": [],
    "no_longer_tested": [],
    "manual_url": "https://github.com/pegi3s/dockerfiles/blob/master/values2tree/README.md",
    "source_url": "https://github.com/pegi3s/dockerfiles/tree/master/values2tree",
    "comments": [],
    "gui": false,
    "gui_command": "",
    "podman": "untested",
    "singularity": "untested",
    "invocation_general": "docker run -v /var/run/docker.sock:/var/run/docker.sock -v /your/data/dir:/data pegi3s/values2tree",
    "usual_invocation_specific": " bash -c \"run_UPGMA_tree /your/data/dir <directory>\"",
    "usual_invocation_specific_comments": [],
    "test_invocation_specific": "",
    "test_data_url": "",
    "test_results_url": "",
    "icon": "",
    "input_data_type": [],
    "auto_tests": [
      {
        "docker_image": "pegi3s/values2tree",
        "input_files": [],
        "output_dir": "",
        "output_file": "",
        "add_config": "",
        "commands": ""
      }
    ]
  },
  {
    "name": "auto-p2docking",
    "description": "A pipeline for protein-protein docking",
    "status": "Usable",
    "recommended": [
      {
        "version": "1.0.0",
        "date": ""
      }
    ],
    "latest": "1.0.0",
    "bug_found": [],
    "not_working": [],
    "no_longer_tested": [],
    "manual_url": "http://evolution6.i3s.up.pt/static/auto-p2docking/docs/",
    "source_url": "https://github.com/pegi3s/auto-p2docking",
    "comments": [],
    "gui": false,
    "gui_command": "",
    "podman": "untested",
    "singularity": "untested",
    "invocation_general": "docker run --rm -v /your/data/dir:/data -v /var/run/docker.sock:/var/run/docker.sock pegi3s/auto-p2docking",
    "usual_invocation_specific": "",
    "usual_invocation_specific_comments": [],
    "test_invocation_specific": "",
    "test_data_url": "",
    "test_results_url": "",
    "icon": "",
    "input_data_type": [],
    "auto_tests": [
      {
        "docker_image": "pegi3s/auto-p2docking",
        "input_files": [],
        "output_dir": "",
        "output_file": "",
        "add_config": "",
        "commands": ""
      }
    ]
  },
  {
    "name": "r_builder",
    "description": "Creation of customized Dockerfiles for building R-based images",
    "status": "Usable",
    "recommended": [
      {
        "version": "1.2.1",
        "date": "24/02/2025"
      },
      {
        "version": "1.2.0",
        "date": "17/02/2025"
      },
      {
        "version": "1.1.0",
        "date": "03/02/2025"
      },
      {
        "version": "1.0.0",
        "date": "14/15/2024"
      }
    ],
    "latest": "1.2.1",
    "bug_found": [],
    "not_working": [],
    "no_longer_tested": [
      "1.2.0",
      "1.1.0",
      "1.0.0"
    ],
    "manual_url": "https://hub.docker.com/r/pegi3s/r_builder/",
    "source_url": "https://github.com/pegi3s/dockerfiles/tree/master/r_builder",
    "comments": [],
    "gui": false,
    "gui_command": "",
    "podman": "untested",
    "singularity": "untested",
    "invocation_general": "docker run --rm -v /your/data/dir:/data -w /data pegi3s/r_builder",
    "usual_invocation_specific": "generate_dockerfile.sh /data/jsonFile",
    "usual_invocation_specific_comments": [
      "'/data' to the actual name of the folder containing the input files",
      "'config.json' to the actual name the JSON specification file"
    ],
    "test_invocation_specific": "generate_dockerfile.sh config.json --o /data/test/results/r_builder_test",
    "test_data_url": "http://evolution6.i3s.up.pt/static/pegi3s/dockerfiles/input_test_data/r_builder_config.json",
    "test_results_url": "http://evolution6.i3s.up.pt/static/pegi3s/dockerfiles/output_test_data/r_builder_output.zip",
    "icon": "",
    "input_data_type": [
      "json"
    ],
    "auto_tests": [
      {
        "docker_image": "pegi3s/r_builder:1.2.0",
        "input_files": [
          "r_builder_config.json"
        ],
        "output_dir": "pegi3s_r_sva_4.4.0",
        "output_file": "Dockerfile",
        "add_config": "",
        "commands": "generate_dockerfile.sh /data/input_data/r_builder_config.json --dry-run --work_dir=/data/output_folder/"
      }
    ]
  },
  {
    "name": "r_sva",
    "description": "Batch effects removal",
    "status": "Usable",
    "recommended": [
      {
        "version": "3.54.0",
        "date": "14/12/2024"
      }
    ],
    "latest": "3.54.0",
    "bug_found": [],
    "not_working": [],
    "no_longer_tested": [],
    "manual_url": "https://www.bioconductor.org/packages/release/bioc/html/sva.html",
    "source_url": "https://bioconductor.org/packages/release/bioc/html/sva.html",
    "comments": [
      "You must provide an R script File that ends with .R. See the test data for inspiration."
    ],
    "gui": false,
    "gui_command": "",
    "podman": "untested",
    "singularity": "untested",
    "invocation_general": "docker run --rm -it -v /your/data/dir:/data pegi3s/r_sva",
    "usual_invocation_specific": "Rscript /data/r_scriptFile",
    "usual_invocation_specific_comments": [],
    "test_invocation_specific": "",
    "test_data_url": "",
    "test_results_url": "",
    "icon": "",
    "input_data_type": [
      "r_script"
    ],
    "auto_tests": [
      {
        "docker_image": "pegi3s/r_sva",
        "input_files": [],
        "output_dir": "",
        "output_file": "",
        "add_config": "",
        "commands": ""
      }
    ]
  },
  {
    "name": "htseq",
    "description": "Analysis of high-throughput sequencing data",
    "status": "Usable",
    "recommended": [
      {
        "version": "2.0.9",
        "date": "25/11/2024"
      }
    ],
    "latest": "2.0.9",
    "bug_found": [],
    "not_working": [],
    "no_longer_tested": [
      "0.12.3"
    ],
    "manual_url": "https://htseq.readthedocs.io/en/latest/",
    "source_url": "https://github.com/htseq/htseq",
    "comments": [],
    "gui": false,
    "gui_command": "",
    "podman": "untested",
    "singularity": "untested",
    "invocation_general": "docker run --rm -v /your/data/dir:/data pegi3s/htseq",
    "usual_invocation_specific": "htseq-count --format bam --order pos --mode intersection-strict --stranded reverse --minaqual 1 --type exon --idattr gene_id /data/bamFile /data/gtfFile > /data/output/test.out",
    "usual_invocation_specific_comments": [
      "'htseq-count' to the actual name of the script to be executed (e.g. 'htseq-qa')",
      "'--format bam --order pos --mode intersection-strict --stranded reverse --minaqual 1 --type exon --idattr' with the argumetns required by the script.",
      "'test.out' to the name of your output file."
    ],
    "test_invocation_specific": "htseq-count --format bam --order pos --mode intersection-strict --stranded reverse --minaqual 1 --type exon --idattr gene_id /data/test/data/test.bam /data/test/data/Homo_sapiens.GRCh38.86.chromosome22.gtf > /data/test/results/htseq_test.out",
    "test_data_url": "http://evolution6.i3s.up.pt/static/pegi3s/dockerfiles/input_test_data/htseq.zip",
    "test_results_url": "http://evolution6.i3s.up.pt/static/pegi3s/dockerfiles/output_test_data/htseq_output.zip",
    "icon": "",
    "input_data_type": [
      "bam",
      "gtf"
    ],
    "auto_tests": [
      {
        "docker_image": "pegi3s/htseq:2.0.9",
        "input_files": [
          "small_not_aligned.fas",
          "Homo_sapiens.GRCh38.86.chromosome22.gtf"
        ],
        "output_dir": "htseq_output",
        "output_file": "test.out",
        "add_config": "",
        "commands": "htseq-count --format bam --order pos --mode intersection-strict --stranded reverse --minaqual 1 --type exon --idattr test.bam Homo_sapiens.GRCh38.86.chromosome22.gtf > test.out"
      }
    ]
  },
  {
    "name": "r_pathfindr",
    "description": "Enrichment analysis utilizing active subnetwork",
    "status": "Usable",
    "recommended": [
      {
        "version": "2.4.2",
        "date": "21/02/2025"
      }
    ],
    "latest": "2.4.2",
    "bug_found": [],
    "not_working": [],
    "no_longer_tested": [],
    "manual_url": "https://egeulgen.github.io/pathfindR/",
    "source_url": "https://github.com/egeulgen/pathfindR",
    "comments": [
      "You must provide an R script File that ends with .R. See the test data for inspiration."
    ],
    "gui": false,
    "gui_command": "",
    "podman": "untested",
    "singularity": "untested",
    "invocation_general": "",
    "usual_invocation_specific": "",
    "usual_invocation_specific_comments": [],
    "test_invocation_specific": "",
    "test_data_url": "",
    "test_results_url": "",
    "icon": "",
    "input_data_type": [],
    "auto_tests": [
      {
        "docker_image": "pegi3s/r_pathfindr:2.4.2",
        "input_files": [
          "r_pathfindr/run-pathfindR.R",
          "r_pathfindr/test.csv",
          "r_pathfindr/counts.tsv",
          "r_pathfindr/metadata.tsv",
          "r_pathfindr/reference.txt"
        ],
        "output_dir": "pathfindr",
        "output_file": "enriched_terms.tsv",
        "add_config": "",
        "commands": "Rscript /data/input_data/r_pathfindr/run-pathfindR.R /data/input_data/r_pathfindr/test.csv /data/input_data/r_pathfindr/counts.tsv /data/input_data/r_pathfindr/metadata.tsv /data/input_data/r_pathfindr/reference.txt /data/output_folder/pathfindr KEGG STRING"
      }
    ]
  },
  {
    "name": "r_annotationdbi",
    "description": "Manipulation of SQLite-based annotations in Bioconductor (ID mapping, etc.)",
    "status": "Usable",
    "recommended": [
      {
        "version": "1.68.0",
        "date": "11/06/2025"
      }
    ],
    "latest": "1.68.0",
    "bug_found": [],
    "not_working": [],
    "no_longer_tested": [],
    "manual_url": "https://bioconductor.org/packages/release/bioc/html/AnnotationDbi.html",
    "source_url": "https://github.com/Bioconductor/AnnotationDbi",
    "comments": [
      "You must provide an R script File that ends with .R. See the test data for inspiration."
    ],
    "gui": false,
    "gui_command": "",
    "podman": "untested",
    "singularity": "untested",
    "invocation_general": "",
    "usual_invocation_specific": "",
    "usual_invocation_specific_comments": [],
    "test_invocation_specific": "",
    "test_data_url": "",
    "test_results_url": "",
    "icon": "",
    "input_data_type": [],
    "auto_tests": [
      {
        "docker_image": "pegi3s/r_annotationdbi:1.68.0",
        "input_files": [
          "r_annotationdbi/example.R"
        ],
        "output_dir": "annotationdbi",
        "output_file": "ensembl_mapping.tsv",
        "add_config": "",
        "commands": "Rscript /data/input_data/r_annotationdbi/example.R /data/output_folder/annotationdbi"
      }
    ]
  },
  {
    "name": "r_rcpa",
    "description": "Pathway analysis and meta-analysis from multiple gene expression datasets",
    "status": "Usable",
    "recommended": [
      {
        "version": "0.2.6",
        "date": "10/06/2025"
      }
    ],
    "latest": "0.2.6",
    "bug_found": [],
    "not_working": [],
    "no_longer_tested": [],
    "manual_url": "https://cran.r-project.org/web/packages/RCPA/index.html",
    "source_url": "https://github.com/tinnlab/RCPA",
    "comments": [
      "You must provide an R script File that ends with .R. See the test data for inspiration."
    ],
    "gui": false,
    "gui_command": "",
    "podman": "untested",
    "singularity": "untested",
    "invocation_general": "",
    "usual_invocation_specific": "",
    "usual_invocation_specific_comments": [],
    "test_invocation_specific": "",
    "test_data_url": "",
    "test_results_url": "",
    "icon": "",
    "input_data_type": [],
    "auto_tests": [
      {
        "docker_image": "pegi3s/r_rcpa:0.2.6",
        "input_files": [],
        "output_dir": "rcpa",
        "output_file": "packages.tsv",
        "add_config": "",
        "commands": "bash -c \"/list_r_packages.sh > /data/output_folder/rcpa/packages.tsv\""
      }
    ]
  },
  {
    "name": "hisat2",
    "description": "Genomic tools",
    "status": "Usable",
    "recommended": [
      {
        "version": "2.2.0",
        "date": "16/06/2025"
      }
    ],
    "latest": "2.2.0",
    "bug_found": [],
    "not_working": [],
    "no_longer_tested": [
      "2.1.0",
      "2.0.5"
    ],
    "manual_url": "https://daehwankimlab.github.io/hisat2/",
    "source_url": "https://github.com/DaehwanKimLab/hisat2",
    "comments": [],
    "gui": false,
    "gui_command": "",
    "podman": "untested",
    "singularity": "untested",
    "invocation_general": "docker run --rm -v /your/data/dir:/data pegi3s/hisat2",
    "usual_invocation_specific": "hisat2 -x /data/hisat2-indexes/genome_index -1 /data/hcc1395_normal_rep1_1.fastq.gz -2 /data/hcc1395_normal_rep1_1.fastq.gz -S /data/output/output.sam",
    "usual_invocation_specific_comments": [""],
    "test_invocation_specific": "",
    "test_data_url": "http://evolution6.i3s.up.pt/static/pegi3s/dockerfiles/input_test_data/test-data-hisat2.zip",
    "test_results_url": "",
    "icon": "",
    "input_data_type": [
      "fastq", "fastq.gz", "fq.gz"
    ],
    "auto_tests": [
      {
        "docker_image": "pegi3s/hisat2",
        "input_files": [
          "http://evolution6.i3s.up.pt/static/pegi3s/dockerfiles/input_test_data/test-data-hisat2.zip"
        ],
        "output_dir": "hisat2",
        "output_file": "output.sam",
        "add_config": "",
        "commands": "hisat2 -x /data/input_data/hisat2/hisat2-indexes/genome_index -1 /data/input_data/hisat2/hcc1395_normal_rep1_1.fastq.gz -2 /data/input_data/hisat2/hcc1395_normal_rep1_1.fastq.gz -S /data/output_folder/hisat2/output.sam"
      }
    ]
  }
]